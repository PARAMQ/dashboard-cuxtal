{"version":3,"file":"utils.js","sources":["../src/utils/minilo.js","../src/utils/assert.js","../src/utils/identity-map.js","../src/utils/log.js","../src/utils/sequential.js","../src/utils/merge-descriptors.js","../src/utils/vue-helpers.js","../src/utils/wait-for.js"],"sourcesContent":["import { Collection } from 'ol'\n\n/**\n * Mini Lodash.\n */\nconst glob = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {}\nconst globIsFinite = glob.isFinite || noop\n\nconst objectProto = Object.prototype\nconst funcProto = Object.prototype\n\nconst objectToString = objectProto.toString\nconst objectHasOwnProp = objectProto.hasOwnProperty\nconst funcToString = funcProto.toString\n\nconst objectTag = /*#__PURE__*/{}::objectToString()\nconst numberTag = /*#__PURE__*/0::objectToString()\nconst stringTag = /*#__PURE__*/''::objectToString()\nconst booleanTag = /*#__PURE__*/true::objectToString()\n\nconst objectCtorString = /*#__PURE__*/Object::funcToString()\n\nexport function noop () {\n  // do nothing\n}\n\nexport function constant (value) {\n  return () => value\n}\n\nexport function stubArray () {\n  return []\n}\n\nexport function stubObject () {\n  return Object.create(null)\n}\n\nexport function stubCollection () {\n  return new Collection()\n}\n\nexport function stubTrue () {\n  return true\n}\n\nexport function stubFalse () {\n  return false\n}\n\nexport function identity (value) {\n  return value\n}\n\nexport function negate (func) {\n  return function (...args) {\n    return !func(...args)\n  }\n}\n\nexport function or (...funcs) {\n  return function (...args) {\n    return reduce(funcs, (result, fn) => {\n      return result || fn(...args)\n    }, false)\n  }\n}\n\nexport function and (...funcs) {\n  return function (...args) {\n    return reduce(funcs, (result, fn) => {\n      return result && fn(...args)\n    }, true)\n  }\n}\n\nexport function toArray (value) {\n  return Array.from(value)\n}\n\nexport function isBoolean (value) {\n  return value::objectToString() === booleanTag\n}\n\nexport function isNumber (value) {\n  return value::objectToString() === numberTag\n}\n\nexport function isString (value) {\n  return value::objectToString() === stringTag\n}\n\nexport function isArray (value) {\n  return Array.isArray(value)\n}\n\nexport function isArrayLike (value) {\n  return isObjectLike(value) && value::objectHasOwnProp('length')\n}\n\nexport function isCollection (value) {\n  return value instanceof Collection\n}\n\nexport function isFinite (value) {\n  return typeof value === 'number' && globIsFinite(value)\n}\n\nexport function isFunction (value) {\n  return typeof value === 'function'\n}\n\n/**\n * @param {*} value\n * @return {boolean} True if value is number or numeric string.\n */\nexport function isNumeric (value) {\n  return !isNaN(parseFloat(value)) && globIsFinite(value)\n}\n\nexport function isObjectLike (value) {\n  return value != null && typeof value === 'object'\n}\n\nexport function isPlainObject (value) {\n  if (!isObjectLike(value) || value::objectToString() !== objectTag) {\n    return false\n  }\n  const proto = Object.getPrototypeOf(value)\n  if (proto == null) {\n    return true\n  }\n  const Ctor = proto.constructor\n  return typeof Ctor === 'function' &&\n    Ctor instanceof Ctor &&\n    Ctor::funcToString() === objectCtorString\n}\n\nexport function round (number, precision = 0) {\n  if (!globIsFinite(number)) return number\n  if (precision < 0) return Number(number)\n\n  return Number(Number(number).toFixed(precision))\n}\n\n/**\n * @param {...*} [args]\n *\n * @return {*}\n */\nexport function coalesce (...args) {\n  return args.find(val => val != null)\n}\n\n/**\n * @param {Object} object\n * @return {Object} Returns object only with plain properties.\n */\nexport function plainProps (object) {\n  const newObject = {}\n  const isPlain = x => isNumeric(x) || isString(x) || isArray(x) || isBoolean(x) || isPlainObject(x)\n  Object.keys(object).forEach(key => {\n    if (isPlain(object[key])) {\n      newObject[key] = object[key]\n    }\n  })\n  return newObject\n}\n\n/**\n * Replaces `tokens` in the `string` by values from the `replaces`.\n *\n * @param {string} string\n * @param {Object} replaces\n *\n * @returns {string}\n */\nexport function replaceTokens (string, replaces) {\n  const regExp = new RegExp(Object.keys(replaces).map(field => '(\\\\{' + field + '\\\\})').join('|'), 'ig')\n\n  return string.replace(regExp, match => replaces[match.substr(1, match.length - 2)] || '')\n}\n\nexport function isEqual (value, other) {\n  if (value === other) {\n    return true\n  }\n  if (value == null || other == null || !(isObjectLike(value) && isObjectLike(other))) {\n    // eslint-disable-next-line no-self-compare\n    return value !== value && other !== other\n  }\n\n  const valueProps = Object.keys(value)\n  const otherProps = Object.keys(other)\n  if (valueProps.length !== otherProps.length) {\n    return false\n  }\n\n  // if (serialize(value) === serialize(other)) return\n\n  const checked = []\n  const traverse = (valueProps, otherProps) => {\n    for (let i = 0, l = valueProps.length; i < l; i++) {\n      const valueProp = valueProps[i]\n\n      if (checked.includes(valueProp)) {\n        continue\n      }\n      if (other::objectHasOwnProp(valueProp) === false) {\n        return false\n      }\n\n      const otherProp = otherProps[i]\n\n      if (!isEqual(value[valueProp], other[otherProp])) {\n        return false\n      }\n\n      checked.push(otherProp)\n    }\n\n    return true\n  }\n\n  if (traverse(valueProps, otherProps) === false) {\n    return false\n  }\n\n  return traverse(otherProps, valueProps)\n}\n\nexport function getLength (value) {\n  if (isCollection(value)) {\n    value = value.getArray()\n  }\n  if (isArrayLike(value)) {\n    return value.length\n  }\n  return 0\n}\n\nexport function isEmpty (value) {\n  if (isCollection(value)) {\n    value = value.getArray()\n  }\n  if (isObjectLike(value)) {\n    value = Object.values(value).filter(negate(isEmpty))\n  }\n  return !value || (isArrayLike(value) && getLength(value) === 0)\n}\n\nexport function keys (object) {\n  return Object.keys(object)\n}\n\nexport function values (object) {\n  return Object.values(object)\n}\n\nexport function seal (object) {\n  return Object.seal(object)\n}\n\nexport function freeze (object) {\n  return Object.freeze(object)\n}\n\nexport function sealFactory (factory) {\n  let fn = factory\n  if (!fn.sealed) {\n    fn = function (...args) {\n      return seal(factory(...args))\n    }\n    fn.sealed = true\n  }\n  return fn\n}\n\nexport function freezeFactory (factory) {\n  let fn = factory\n  if (!fn.freezed) {\n    fn = function (...args) {\n      return freeze(factory(...args))\n    }\n    fn.freezed = true\n  }\n  return fn\n}\n\nexport function forEach (collection, iteratee) {\n  if (isCollection(collection)) {\n    collection = collection.getArray()\n  }\n  const keys = Object.keys(collection)\n  for (let i = 0, l = keys.length; i < l; i++) {\n    const key = keys[i]\n    const value = collection[key]\n    if (iteratee(value, key) === false) {\n      return\n    }\n  }\n}\n\nexport function reduce (collection, iteratee, initial) {\n  let result = initial\n  forEach(collection, (value, key) => {\n    result = iteratee(result, value, key)\n  })\n  return result\n}\n\nexport function filter (collection, iteratee = negate(isEmpty)) {\n  return reduce(collection, (newCollection, value, key) => {\n    if (iteratee(value, key)) {\n      if (isArray(newCollection)) {\n        newCollection.push(value)\n      } else {\n        newCollection[key] = value\n      }\n    }\n    return newCollection\n  }, isArrayLike(collection) || isCollection(collection) ? [] : {})\n}\n\nexport function find (collection, iteratee = identity) {\n  const res = filter(collection, iteratee)\n  if (isArray(res)) return res[0]\n  return res[keys(res)[0]]\n}\n\nexport function map (collection, iteratee = identity) {\n  return reduce(collection, (newCollection, value, key) => {\n    newCollection[key] = iteratee(value, key)\n    return newCollection\n  }, isArrayLike(collection) || isCollection(collection) ? [] : {})\n}\n\nexport function mapValues (object, iteratee = identity) {\n  return map(object, iteratee)\n}\n\nexport function mapKeys (object, iteratee = identity) {\n  return reduce(object, (newObject, value, key) => {\n    newObject[iteratee(value, key)] = value\n    return newObject\n  }, isArrayLike(object) || isCollection(object) ? [] : {})\n}\n\nexport function every (collection, iteratee = identity) {\n  return reduce(collection, (result, value, key) => {\n    return result && iteratee(value, key)\n  }, true)\n}\n\nexport function some (collection, iteratee = identity) {\n  return reduce(collection, (result, value, key) => {\n    return result || iteratee(value, key)\n  }, false)\n}\n\nexport function firstEl (object) {\n  if (isCollection(object)) {\n    object = object.getArray()\n  }\n  if (!isArrayLike(object)) return\n\n  return object[0]\n}\n\nexport function lastEl (object) {\n  if (isCollection(object)) {\n    object = object.getArray()\n  }\n  if (!isArrayLike(object)) return\n\n  return object[object.length - 1]\n}\n\nexport function pick (object, key, ...keys) {\n  if (Array.isArray(key)) {\n    keys = key\n  } else {\n    keys = [key].concat(keys)\n  }\n  return reduce(keys, (picked, key) => {\n    picked[key] = object[key]\n    return picked\n  }, {})\n}\n\nexport function omit (object, key, ...keys) {\n  if (Array.isArray(key)) {\n    keys = key\n  } else {\n    keys = [key].concat(keys)\n  }\n  return filter(object, (value, key) => !keys.includes(key))\n}\n\nexport function upperFirst (string) {\n  string = String(string)\n  if (string.length === 0) {\n    return ''\n  }\n  return string[0].toUpperCase() + string.slice(1)\n}\n\nexport function lowerFirst (string) {\n  string = String(string)\n  if (string.length === 0) {\n    return ''\n  }\n  return string[0].toLowerCase() + string.slice(1)\n}\n\nexport function* rangeIterator (start, end, step = 1) {\n  for (let i = start; i < end; i += step) {\n    yield i\n  }\n}\n\nexport function range (start, end, step = 1) {\n  return Array.from(rangeIterator(start, end, step))\n}\n\n/**\n * https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_get\n *\n * @param obj\n * @param path\n * @param defaultValue\n * @return {*}\n */\nexport function get (obj, path, defaultValue) {\n  const travel = regexp =>\n    String.prototype.split\n      .call(path, regexp)\n      .filter(Boolean)\n      .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj)\n  const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/)\n  return result === undefined || result === obj ? defaultValue : result\n}\n\nexport function hasOwnProp (object, prop) {\n  return isObjectLike(object) && object::objectHasOwnProp(prop)\n}\n\nexport function hasProp (object, prop) {\n  return isObjectLike(object) && (prop in object)\n}\n\nexport function includes (array, value, comparator = isEqual) {\n  let found = false\n  forEach(array, elem => {\n    found = comparator(elem, value)\n    if (found) return false\n  })\n  return found\n}\n\nexport function difference (array1, array2, comparator = isEqual) {\n  return filter(array1, value => !includes(array2, value, comparator))\n}\n\n/**\n * @param {string} str\n * @return {string}\n */\nexport function camelCase (str) {\n  const regExp = /([-_]\\w)/g\n  return str.replace(regExp, matches => matches[1].toUpperCase())\n}\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function kebabCase (str) {\n  return str.match(/[A-Z]{2,}(?=[A-Z][a-z0-9]*|\\b)|[A-Z]?[a-z0-9]*|[A-Z]|[0-9]+/g)\n    .filter(Boolean)\n    .map(x => x.toLowerCase())\n    .join('-')\n}\n\nexport function serialize (value) {\n  return JSON.stringify(value)\n}\n\nexport function unserialize (value) {\n  if (!isString(value)) return\n  return JSON.parse(value)\n}\n\nexport function clonePlainObject (obj) {\n  return unserialize(serialize(obj))\n}\n\nexport function addPrefix (prefix) {\n  return str => prefix + (prefix ? upperFirst(str) : str)\n}\n","import { isNumeric } from './minilo'\n\nexport class AssertionError extends Error {\n  constructor (message) {\n    super(message)\n    this.name = this.constructor.name\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor)\n    } else {\n      this.stack = (new Error(message)).stack\n    }\n  }\n}\n\n/**\n * @param {*} value\n * @param {string} message\n * @throws AssertionError\n */\nexport function assert (value, message) {\n  if (!value) {\n    throw new AssertionError(message || 'Assertion failed')\n  }\n}\n\n/**\n * @param {*} value\n * @param {string|undefined} [msg]\n * @throws {AssertionError}\n */\nexport function numeric (value, msg) {\n  assert(isNumeric(value), msg || 'value is a number')\n}\n\n/**\n * @param {*} value\n * @param {Function} Ctor\n * @param {string|undefined} [msg]\n * @throws {AssertionError}\n */\nexport function instanceOf (value, Ctor, msg) {\n  assert(value instanceof Ctor, msg || `value is an instance of ${Ctor.name}`)\n}\n","/**\n * Simple Identity map with refs count\n */\nexport default class IdentityMap {\n  _pools = Object.create(null)\n\n  /**\n   * @param {string} pool\n   * @private\n   */\n  _preparePool (pool) {\n    this._pools[pool] || (this._pools[pool] = Object.create(null))\n  }\n\n  /**\n   * @param {string} id\n   * @param {*} value\n   * @param {string} pool\n   */\n  set (id, value, pool = 'default') {\n    if (value == null) return\n\n    this._preparePool(pool)\n\n    this._pools[pool][id] = {\n      value,\n      refs: 1,\n    }\n  }\n\n  /**\n   * @param {string} id\n   * @param {string} pool\n   */\n  get (id, pool = 'default') {\n    this._preparePool(pool)\n\n    const rec = this._pools[pool][id]\n    if (!rec || rec.value == null) return\n\n    rec.refs++\n    this._pools[pool][id] = rec\n\n    return rec.value\n  }\n\n  /**\n   * @param {string} id\n   * @param {string} pool\n   */\n  unset (id, pool = 'default') {\n    this._preparePool(pool)\n\n    const rec = this._pools[pool][id]\n    if (!rec || rec.value == null) return\n\n    rec.refs--\n    if (rec.refs === 0) {\n      delete this._pools[pool][id]\n    }\n  }\n\n  /**\n   * @param {string} id\n   * @param {string} pool\n   * @return {boolean}\n   */\n  has (id, pool = 'default') {\n    this._preparePool(pool)\n\n    return !!this._pools[pool][id]\n  }\n\n  /**\n   * @param {string} fromId\n   * @param {string} toId\n   * @param {string} [pool]\n   * @returns {boolean}\n   */\n  move (fromId, toId, pool = 'default') {\n    if (!this.has(fromId, pool) || !toId) return false\n\n    this._pools[pool][toId] = this._pools[pool][fromId]\n    delete this._pools[pool][fromId]\n\n    return true\n  }\n\n  /**\n   * @param {string} pool\n   * @return {string[]}\n   */\n  ids (pool = 'default') {\n    this._preparePool(pool)\n\n    return Object.keys(this._pools[pool])\n  }\n\n  /**\n   * @param {string} id\n   * @param {string} pool\n   * @return {*}\n   */\n  refs (id, pool = 'default') {\n    this._preparePool(pool)\n\n    return this.has(id, pool) ? this._pools[pool][id].refs : undefined\n  }\n}\n","import { isString } from './minilo'\n\n/* eslint-disable no-console */\nexport const log = makeLog('[C_PKG_FULLNAME]')\n\nexport const warn = makeWarn('[C_PKG_FULLNAME] WARN')\n\nexport const error = makeError('[C_PKG_FULLNAME] ERR')\n/* eslint-enable no-console */\n\nexport function encode (val) {\n  return JSON.stringify(val)\n}\n\nexport function newLogger (prefix = '') {\n  return {\n    log: makeLog(`[C_PKG_FULLNAME] ${prefix}`),\n    warn: makeWarn(`[C_PKG_FULLNAME] WARN ${prefix}`),\n    error: makeError(`[C_PKG_FULLNAME] ERR ${prefix}`),\n  }\n}\n\nexport function makeLog (prefix = '') {\n  return function (...args) {\n    if (prefix) {\n      if (isString(args[0])) {\n        args[0] = prefix.trim() + ' ' + args[0]\n      } else {\n        args = [prefix.trim(), ...args]\n      }\n    }\n    console.log(...args)\n  }\n}\n\nexport function makeWarn (prefix = '') {\n  return function (...args) {\n    if (prefix) {\n      if (isString(args[0])) {\n        args[0] = prefix.trim() + ' ' + args[0]\n      } else {\n        args = [prefix.trim(), ...args]\n      }\n    }\n    console.warn(...args)\n  }\n}\n\nexport function makeError (prefix = '') {\n  return function (...args) {\n    if (prefix) {\n      if (isString(args[0])) {\n        args[0] = prefix.trim() + ' ' + args[0]\n      } else {\n        args = [prefix.trim(), ...args]\n      }\n    }\n    console.error(...args)\n  }\n}\n","export default function (fn) {\n  return async function (...args) {\n    if (fn._execPromise) {\n      await fn._execPromise\n    }\n    fn._execPromise = Promise.resolve(this::fn(...args))\n    const res = await fn._execPromise\n    delete fn._execPromise\n    return res\n  }\n}\n","import baseMergeDescriptors from 'merge-descriptors'\n\n/**\n * @param {...Object} args\n * @returns {Object}\n */\nexport default function mergeDescriptors (...args) {\n  let redefine\n  if (typeof args[args.length - 1] !== 'object') {\n    redefine = args.pop()\n  }\n\n  return args.slice(1).reduce(\n    (dest, src, i) => baseMergeDescriptors(dest, src, redefine),\n    args[0],\n  )\n}\n","import { isString } from './minilo'\n\n/**\n * Constructs watch hash for multiple properties.\n * @param {string[]} props\n * @param {function|Object} watcherFactory\n */\nexport function makeWatchers (props, watcherFactory) {\n  return props.reduce((hash, prop) => {\n    hash[prop] = watcherFactory(prop)\n    return hash\n  }, {})\n}\n\nexport function extractChildren (slots, slotNames = []) {\n  return Object.keys(slots).reduce((all, name) => {\n    if (!slotNames.length || slotNames.includes(name)) {\n      all = all.concat(slots[name])\n    }\n\n    return all\n  }, [])\n}\n\nexport function hasAncestorVm (vm, selector) {\n  if (matchesVm(vm, selector)) {\n    return true\n  }\n  if (!vm.$parent) {\n    return false\n  }\n  return hasAncestorVm(vm.$parent, selector)\n}\n\nexport function matchesVm (vm, selector) {\n  if (!selector) {\n    return true\n  }\n  if (isString(selector)) {\n    return vm.$options.name === selector\n  }\n  return selector === vm\n}\n","import { interval as intervalObs, NEVER as NEVER_OBS, race as raceObs, throwError as throwErrorObs } from 'rxjs'\nimport {\n  catchError as catchErrorObs,\n  first as firstObs,\n  skipUntil as skipUntilObs,\n  skipWhile as skipWhileObs,\n  switchMap as switchMapObs,\n  timeout as timeoutObs,\n} from 'rxjs/operators'\nimport { isFunction, negate } from './minilo'\n\nexport class WaitCancelError extends Error {\n  name = 'WaitCancelError'\n\n  constructor (message) {\n    super(message)\n    if (isFunction(Error.captureStackTrace)) {\n      Error.captureStackTrace(this, this.constructor)\n    } else {\n      this.stack = (new Error(message)).stack\n    }\n  }\n}\n\nexport class WaitTimeoutError extends Error {\n  name = 'WaitTimeoutError'\n\n  constructor (message) {\n    super(message)\n    if (isFunction(Error.captureStackTrace)) {\n      Error.captureStackTrace(this, this.constructor)\n    } else {\n      this.stack = (new Error(message)).stack\n    }\n  }\n}\n\n/**\n * @param {function|Observable} condition\n * @param {function|Observable} [breakOn]\n * @param {number} [timeout]\n * @returns {Promise<boolean>}\n */\nexport default function waitFor (condition, breakOn, timeout) {\n  const defCond = x => !x\n  const success = intervalObs(1000 / 60).pipe(\n    isFunction(condition)\n      ? skipWhileObs(negate(condition))\n      : skipUntilObs(condition.pipe(skipWhileObs(defCond))),\n    firstObs(),\n  )\n  let failed = NEVER_OBS\n  if (breakOn) {\n    failed = intervalObs(1000 / 60).pipe(\n      isFunction(breakOn)\n        ? skipWhileObs(negate(breakOn))\n        : skipUntilObs(breakOn.pipe(skipWhileObs(defCond))),\n      firstObs(),\n      switchMapObs(() => throwErrorObs(new WaitCancelError('wait canceled'))),\n    )\n  }\n  let obs = raceObs(success, failed)\n  if (timeout > 0) {\n    obs = obs.pipe(timeoutObs(timeout))\n  }\n  return obs.pipe(\n    catchErrorObs(err => {\n      if (err.name === 'TimeoutError') {\n        err = new WaitTimeoutError('wait timed out')\n      }\n      throw err\n    }),\n  ).toPromise()\n}\n"],"names":["glob","global","window","globIsFinite","isFinite","noop","objectProto","Object","prototype","funcProto","objectToString","toString","objectHasOwnProp","hasOwnProperty","funcToString","objectTag","numberTag","stringTag","booleanTag","objectCtorString","constant","value","stubArray","stubObject","create","stubCollection","Collection","stubTrue","stubFalse","identity","negate","func","or","funcs","args","reduce","result","fn","and","toArray","Array","from","isBoolean","isNumber","isString","isArray","isArrayLike","isObjectLike","isCollection","isFunction","isNumeric","isNaN","parseFloat","isPlainObject","proto","getPrototypeOf","Ctor","constructor","round","number","precision","Number","toFixed","coalesce","find","val","plainProps","object","newObject","isPlain","x","keys","forEach","key","replaceTokens","string","replaces","regExp","RegExp","map","field","join","replace","match","substr","length","isEqual","other","valueProps","otherProps","checked","traverse","i","l","valueProp","includes","otherProp","push","getLength","getArray","isEmpty","values","filter","seal","freeze","sealFactory","factory","sealed","freezeFactory","freezed","collection","iteratee","initial","newCollection","res","mapValues","mapKeys","every","some","firstEl","lastEl","pick","concat","picked","omit","upperFirst","String","toUpperCase","slice","lowerFirst","toLowerCase","rangeIterator","start","end","step","range","get","obj","path","defaultValue","travel","regexp","split","call","Boolean","undefined","hasOwnProp","prop","hasProp","array","comparator","found","elem","difference","array1","array2","camelCase","str","matches","kebabCase","serialize","JSON","stringify","unserialize","parse","clonePlainObject","addPrefix","prefix","AssertionError","Error","message","name","captureStackTrace","stack","assert","numeric","msg","instanceOf","IdentityMap","_preparePool","pool","_pools","set","id","refs","rec","unset","has","move","fromId","toId","ids","log","makeLog","warn","makeWarn","error","makeError","encode","newLogger","trim","console","_execPromise","Promise","resolve","mergeDescriptors","redefine","pop","dest","src","baseMergeDescriptors","makeWatchers","props","watcherFactory","hash","extractChildren","slots","slotNames","all","hasAncestorVm","vm","selector","matchesVm","$parent","$options","WaitCancelError","WaitTimeoutError","waitFor","condition","breakOn","timeout","defCond","success","intervalObs","pipe","skipWhileObs","skipUntilObs","firstObs","failed","NEVER_OBS","switchMapObs","throwErrorObs","obs","raceObs","timeoutObs","catchErrorObs","err","toPromise"],"mappings":"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"}