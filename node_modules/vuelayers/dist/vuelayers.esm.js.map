{"version":3,"file":"vuelayers.esm.js","sources":["../src/components/bingmaps-source/source.vue?rollup-plugin-vue=script.js","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/bingmaps-source/source.vue","../src/components/bingmaps-source/index.js","../src/components/cluster-source/inner-source.vue?rollup-plugin-vue=script.js","../src/components/cluster-source/inner-source.vue","../src/components/cluster-source/source.vue?rollup-plugin-vue=script.js","../src/components/cluster-source/source.vue","../src/components/cluster-source/index.js","../src/components/draw-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/draw-interaction/interaction.vue","../src/components/draw-interaction/index.js","../src/components/feature/circle-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/circle-geom.vue","../src/components/feature/point-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/point-geom.vue","../src/components/feature/feature.vue?rollup-plugin-vue=script.js","../src/components/feature/feature.vue","../src/components/feature/line-string-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/line-string-geom.vue","../src/components/feature/multi-line-string-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/multi-line-string-geom.vue","../src/components/feature/multi-point-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/multi-point-geom.vue","../src/components/feature/multi-polygon-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/multi-polygon-geom.vue","../src/components/feature/polygon-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/polygon-geom.vue","../src/components/feature/index.js","../src/components/geoloc/geoloc.vue?rollup-plugin-vue=script.js","../src/components/geoloc/geoloc.vue","../src/components/geoloc/index.js","../src/components/style/fill.vue?rollup-plugin-vue=script.js","../src/components/style/fill.vue","../src/components/style/stroke.vue?rollup-plugin-vue=script.js","../src/components/style/stroke.vue","../src/components/style/circle.vue?rollup-plugin-vue=script.js","../src/components/style/circle.vue","../src/components/style/icon.vue?rollup-plugin-vue=script.js","../src/components/style/icon.vue","../src/components/style/reg-shape.vue?rollup-plugin-vue=script.js","../src/components/style/reg-shape.vue","../src/components/style/style.vue?rollup-plugin-vue=script.js","../src/components/style/style.vue","../src/components/style/background.vue?rollup-plugin-vue=script.js","../src/components/style/background.vue","../src/components/style/text.vue?rollup-plugin-vue=script.js","../src/components/style/text.vue","../src/components/style/index.js","../src/components/graticule-layer/lat-style.vue?rollup-plugin-vue=script.js","../src/components/graticule-layer/lat-style.vue","../src/components/graticule-layer/lon-style.vue?rollup-plugin-vue=script.js","../src/components/graticule-layer/lon-style.vue","../src/components/graticule-layer/stroke-style.vue?rollup-plugin-vue=script.js","../src/components/graticule-layer/stroke-style.vue","../src/components/graticule-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/graticule-layer/layer.vue","../src/components/graticule-layer/index.js","../src/components/group-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/group-layer/layer.vue","../src/components/group-layer/index.js","../src/components/heatmap-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/heatmap-layer/layer.vue","../src/components/heatmap-layer/index.js","../src/components/image-arcgis-rest-source/source.vue?rollup-plugin-vue=script.js","../src/components/image-arcgis-rest-source/source.vue","../src/components/image-arcgis-rest-source/index.js","../src/components/image-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/image-layer/layer.vue","../src/components/image-layer/index.js","../src/components/image-static-source/source.vue?rollup-plugin-vue=script.js","../src/components/image-static-source/source.vue","../src/components/image-static-source/index.js","../src/components/image-wms-source/source.vue?rollup-plugin-vue=script.js","../src/components/image-wms-source/source.vue","../src/components/image-wms-source/index.js","../src/components/vector-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/vector-layer/layer.vue","../src/components/vector-layer/index.js","../src/components/vector-source/source.vue?rollup-plugin-vue=script.js","../src/components/vector-source/source.vue","../src/components/vector-source/index.js","../src/components/map/view.vue?rollup-plugin-vue=script.js","../src/components/map/view.vue","../src/components/map/map.vue?rollup-plugin-vue=script.js","../src/components/map/map.vue","../src/components/map/index.js","../src/components/mapbox-source/source.vue?rollup-plugin-vue=script.js","../src/components/mapbox-source/source.vue","../src/components/mapbox-source/index.js","../src/components/vector-tile-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/vector-tile-layer/layer.vue","../src/components/vector-tile-layer/index.js","../src/components/mapbox-vector-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/mapbox-vector-layer/layer.vue","../src/components/mapbox-vector-layer/index.js","../src/components/modify-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/modify-interaction/interaction.vue","../src/components/modify-interaction/index.js","../src/components/osm-source/source.vue?rollup-plugin-vue=script.js","../src/components/osm-source/source.vue","../src/components/osm-source/index.js","../src/components/overlay/overlay.vue?rollup-plugin-vue=script.js","../src/components/overlay/overlay.vue","../src/components/overlay/index.js","../src/components/rotate-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/rotate-interaction/interaction.vue","../src/components/rotate-interaction/index.js","../src/components/select-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/select-interaction/interaction.vue","../src/components/select-interaction/index.js","../src/components/snap-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/snap-interaction/interaction.vue","../src/components/snap-interaction/index.js","../src/components/sputnik-source/source.vue?rollup-plugin-vue=script.js","../src/components/sputnik-source/source.vue","../src/components/sputnik-source/index.js","../src/components/stamen-source/source.vue?rollup-plugin-vue=script.js","../src/components/stamen-source/source.vue","../src/components/stamen-source/index.js","../src/components/style-func/style.vue?rollup-plugin-vue=script.js","../src/components/style-func/style.vue","../src/components/style-func/index.js","../src/components/tile-arcgis-rest-source/source.vue?rollup-plugin-vue=script.js","../src/components/tile-arcgis-rest-source/source.vue","../src/components/tile-arcgis-rest-source/index.js","../src/components/tile-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/tile-layer/layer.vue","../src/components/tile-layer/index.js","../src/components/tile-wms-source/source.vue?rollup-plugin-vue=script.js","../src/components/tile-wms-source/source.vue","../src/components/tile-wms-source/index.js","../src/components/translate-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/translate-interaction/interaction.vue","../src/components/translate-interaction/index.js","../src/components/vector-image-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/vector-image-layer/layer.vue","../src/components/vector-image-layer/index.js","../src/components/vector-tile-source/source.vue?rollup-plugin-vue=script.js","../src/components/vector-tile-source/source.vue","../src/components/vector-tile-source/index.js","../src/components/wmts-source/source.vue?rollup-plugin-vue=script.js","../src/components/wmts-source/source.vue","../src/components/wmts-source/index.js","../src/components/xyz-source/source.vue?rollup-plugin-vue=script.js","../src/components/xyz-source/source.vue","../src/components/xyz-source/index.js","../src/index.js"],"sourcesContent":["\n  import { BingMaps as BingMapsSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, tileImageSource } from '../../mixins'\n  import { coalesce, noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceBingmaps',\n    mixins: [\n      tileImageSource,\n    ],\n    props: {\n      // ol/source/BingMaps\n      /**\n       * Enables hidpi tiles.\n       * @type {boolean}\n       */\n      hidpi: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Culture code.\n       * @type {string}\n       */\n      culture: {\n        type: String,\n        default: 'en-us',\n      },\n      /**\n       * Bing Maps API key.\n       * @type {string}\n       */\n      apiKey: {\n        type: String,\n        required: true,\n      },\n      /**\n       * Type of imagery.\n       * @type {string}\n       */\n      imagerySet: {\n        type: String,\n        required: true,\n      },\n      /**\n       * @type {number}\n       */\n      maxZoom: {\n        type: Number,\n        default: 21,\n      },\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputUrl: noop,\n      inputUrls: noop,\n      inputTileUrlFunction: noop,\n      inputAttributions: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'hidpi',\n        'culture',\n        'apiKey',\n        'imagerySet',\n        'maxZoom',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {module:ol/source/BingMaps}\n       * @protected\n       */\n      createSource () {\n        return new BingMapsSource({\n          // ol/source/Source\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          // ol/source/TileImage\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/BingMaps\n          hidpi: this.hidpi,\n          culture: this.culture,\n          key: this.apiKey,\n          imagerySet: this.imagerySet,\n          maxZoom: this.maxZoom,\n        })\n      },\n      getApiKey () {\n        return coalesce(this.$source?.getApiKey(), this.apiKey)\n      },\n      getImagerySet () {\n        return coalesce(this.$source?.getImagerySet(), this.imagerySet)\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n      tileGridIdentChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      tileKeyChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      inputUrlsChanged: noop,\n      crossOriginChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<script>\n  import { BingMaps as BingMapsSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, tileImageSource } from '../../mixins'\n  import { coalesce, noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceBingmaps',\n    mixins: [\n      tileImageSource,\n    ],\n    props: {\n      // ol/source/BingMaps\n      /**\n       * Enables hidpi tiles.\n       * @type {boolean}\n       */\n      hidpi: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Culture code.\n       * @type {string}\n       */\n      culture: {\n        type: String,\n        default: 'en-us',\n      },\n      /**\n       * Bing Maps API key.\n       * @type {string}\n       */\n      apiKey: {\n        type: String,\n        required: true,\n      },\n      /**\n       * Type of imagery.\n       * @type {string}\n       */\n      imagerySet: {\n        type: String,\n        required: true,\n      },\n      /**\n       * @type {number}\n       */\n      maxZoom: {\n        type: Number,\n        default: 21,\n      },\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputUrl: noop,\n      inputUrls: noop,\n      inputTileUrlFunction: noop,\n      inputAttributions: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'hidpi',\n        'culture',\n        'apiKey',\n        'imagerySet',\n        'maxZoom',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {module:ol/source/BingMaps}\n       * @protected\n       */\n      createSource () {\n        return new BingMapsSource({\n          // ol/source/Source\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          // ol/source/TileImage\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/BingMaps\n          hidpi: this.hidpi,\n          culture: this.culture,\n          key: this.apiKey,\n          imagerySet: this.imagerySet,\n          maxZoom: this.maxZoom,\n        })\n      },\n      getApiKey () {\n        return coalesce(this.$source?.getApiKey(), this.apiKey)\n      },\n      getImagerySet () {\n        return coalesce(this.$source?.getImagerySet(), this.imagerySet)\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n      tileGridIdentChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      tileKeyChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      inputUrlsChanged: noop,\n      crossOriginChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\n/**\n * @param {Vue} Vue\n * @param {VueLayersOptions} [options]\n */\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { olCmp, sourceContainer, stubVNode } from '../../mixins'\n  import { getSourceId } from '../../ol-ext'\n  import { clonePlainObject, isEqual, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlSourceInnerAdapter',\n    mixins: [\n      stubVNode,\n      sourceContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      source () {\n        if (!(this.rev && this.$source)) return\n\n        return {\n          id: getSourceId(this.$source),\n          type: this.$source.constructor.name,\n        }\n      },\n    },\n    watch: {\n      source: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:source', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $innerSourceContainer: {\n          enumerable: true,\n          get: () => this.$services?.innerSourceContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::sourceContainer.methods.getServices(),\n        )\n      },\n      getSourceTarget () {\n        return {\n          getSource: () => this.$innerSourceContainer?.getInnerSource(),\n          setSource: source => this.$innerSourceContainer?.setInnerSource(source),\n        }\n      },\n    },\n  }\n","<script>\n  import { olCmp, sourceContainer, stubVNode } from '../../mixins'\n  import { getSourceId } from '../../ol-ext'\n  import { clonePlainObject, isEqual, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlSourceInnerAdapter',\n    mixins: [\n      stubVNode,\n      sourceContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      source () {\n        if (!(this.rev && this.$source)) return\n\n        return {\n          id: getSourceId(this.$source),\n          type: this.$source.constructor.name,\n        }\n      },\n    },\n    watch: {\n      source: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:source', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $innerSourceContainer: {\n          enumerable: true,\n          get: () => this.$services?.innerSourceContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::sourceContainer.methods.getServices(),\n        )\n      },\n      getSourceTarget () {\n        return {\n          getSource: () => this.$innerSourceContainer?.getInnerSource(),\n          setSource: source => this.$innerSourceContainer?.setInnerSource(source),\n        }\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { Cluster as ClusterSource, Source } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, vectorSource } from '../../mixins'\n  import { createPointGeom, findPointOnSurface, getSourceId } from '../../ol-ext'\n  import { assert, clonePlainObject, coalesce, isNumber, mergeDescriptors, noop } from '../../utils'\n  import InnerSource from './inner-source.vue'\n\n  export default {\n    name: 'VlSourceCluster',\n    components: {\n      InnerSource,\n    },\n    mixins: [\n      vectorSource,\n    ],\n    props: {\n      distance: {\n        type: Number,\n        default: 20,\n      },\n      geometryFunction: {\n        type: Function,\n        // default: defaultGeomFunc,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      geomFunc: Function,\n      /**\n       * @deprecated Use geomFunc prop instead.\n       * @todo remove in v0.13.x\n       */\n      geomFuncFactory: Function,\n    },\n    data () {\n      return {\n        currentDistance: this.distance,\n      }\n    },\n    computed: {\n      inputGeometryFunction () {\n        let geomFunc = this.geometryFunction || this.geomFunc\n        if (!geomFunc && this.geomFuncFactory) {\n          geomFunc = this.geomFuncFactory()\n        }\n\n        return geomFunc || defaultGeomFunc\n      },\n      innerSource () {\n        if (!(this.rev && this.$innerSource)) return\n\n        return {\n          id: getSourceId(this.$innerSource),\n          type: this.$innerSource.constructor.name,\n        }\n      },\n      inputUrl: noop,\n      inputLoader: noop,\n      inputLoadingStrategy: noop,\n      formatIdent: noop,\n      inputFormatFactory: noop,\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentDistance !== this.$source.getDistance()) {\n          this.currentDistance = this.$source.getDistance()\n        }\n      },\n      distance (value) {\n        this.setDistance(value)\n      },\n      currentDistance (value) {\n        if (value === this.distance) return\n\n        this.$emit('update:distance', value)\n      },\n      innerSource: {\n        deep: true,\n        handler (value, prev) {\n          if (value === prev) return\n\n          this.$emit('update:innerSource', value && clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputGeometryFunction',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.geomFuncFactory) {\n          this.$logger.warn(\"'geomFuncFactory' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n        if (this.geomFunc) {\n          this.$logger.warn(\"'geomFunc' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n      }\n\n      this._innerSource = undefined\n      this._innerSourceVm = undefined\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.geomFuncFactory) {\n          this.$logger.warn(\"'geomFuncFactory' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n        if (this.geomFunc) {\n          this.$logger.warn(\"'geomFunc' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ClusterSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          wrapX: this.wrapX,\n          // ol/source/Cluster\n          source: this.$innerSource,\n          distance: this.currentDistance,\n          geometryFunction: this.inputGeometryFunction,\n        })\n      },\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::vectorSource.methods.getServices(),\n          {\n            get innerSourceContainer () { return vm },\n          },\n        )\n      },\n      getDistance () {\n        return coalesce(this.$source?.getDistance(), this.currentDistance)\n      },\n      setDistance (distance) {\n        assert(isNumber(distance), 'Invalid distance')\n\n        if (distance !== this.currentDistance) {\n          this.currentDistance = distance\n        }\n        if (this.$source && distance !== this.$source.getDistance()) {\n          this.$source.setDistance(distance)\n        }\n      },\n      getInnerSource () {\n        return this._innerSource\n      },\n      getInnerSourceVm () {\n        return this._innerSourceVm\n      },\n      setInnerSource (innerSource) {\n        innerSource = innerSource?.$source || innerSource\n        assert(!innerSource || innerSource instanceof Source)\n        innerSource || (innerSource = undefined)\n\n        if (innerSource !== this._innerSource) {\n          this._innerSource = innerSource\n          this._innerSourceVm = innerSource?.vm && innerSource.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$source && innerSource !== this.$source.getSource()) {\n          this.$source.setSource(innerSource)\n          this.scheduleRefresh()\n        }\n      },\n      projectionChanged: noop,\n      inputUrlChanged: noop,\n      inputLoaderChanged: noop,\n      inputLoadingStrategyChanged: noop,\n      inputFormatFactoryChanged: noop,\n      formatIdentChanged: noop,\n      formatChanged: noop,\n      overlapsChanged: noop,\n      useSpatialIndexChanged: noop,\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $innerSource: {\n        enumerable: true,\n        get: this.getInnerSource,\n      },\n      $innerSourceVm: {\n        enumerable: true,\n        get: this.getInnerSourceVm,\n      },\n    })\n  }\n\n  function defaultGeomFunc (feature) {\n    const geometry = feature.getGeometry()\n    if (!geometry) return\n\n    const coordinate = findPointOnSurface(geometry)\n    if (coordinate) {\n      return createPointGeom(coordinate)\n    }\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <InnerSource :id=\"'vl-' + currentId + '-inner-source'\">\n      <slot />\n    </InnerSource>\n  </i>\n</template>\n\n<script>\n  import { Cluster as ClusterSource, Source } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, vectorSource } from '../../mixins'\n  import { createPointGeom, findPointOnSurface, getSourceId } from '../../ol-ext'\n  import { assert, clonePlainObject, coalesce, isNumber, mergeDescriptors, noop } from '../../utils'\n  import InnerSource from './inner-source.vue'\n\n  export default {\n    name: 'VlSourceCluster',\n    components: {\n      InnerSource,\n    },\n    mixins: [\n      vectorSource,\n    ],\n    props: {\n      distance: {\n        type: Number,\n        default: 20,\n      },\n      geometryFunction: {\n        type: Function,\n        // default: defaultGeomFunc,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      geomFunc: Function,\n      /**\n       * @deprecated Use geomFunc prop instead.\n       * @todo remove in v0.13.x\n       */\n      geomFuncFactory: Function,\n    },\n    data () {\n      return {\n        currentDistance: this.distance,\n      }\n    },\n    computed: {\n      inputGeometryFunction () {\n        let geomFunc = this.geometryFunction || this.geomFunc\n        if (!geomFunc && this.geomFuncFactory) {\n          geomFunc = this.geomFuncFactory()\n        }\n\n        return geomFunc || defaultGeomFunc\n      },\n      innerSource () {\n        if (!(this.rev && this.$innerSource)) return\n\n        return {\n          id: getSourceId(this.$innerSource),\n          type: this.$innerSource.constructor.name,\n        }\n      },\n      inputUrl: noop,\n      inputLoader: noop,\n      inputLoadingStrategy: noop,\n      formatIdent: noop,\n      inputFormatFactory: noop,\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentDistance !== this.$source.getDistance()) {\n          this.currentDistance = this.$source.getDistance()\n        }\n      },\n      distance (value) {\n        this.setDistance(value)\n      },\n      currentDistance (value) {\n        if (value === this.distance) return\n\n        this.$emit('update:distance', value)\n      },\n      innerSource: {\n        deep: true,\n        handler (value, prev) {\n          if (value === prev) return\n\n          this.$emit('update:innerSource', value && clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputGeometryFunction',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.geomFuncFactory) {\n          this.$logger.warn(\"'geomFuncFactory' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n        if (this.geomFunc) {\n          this.$logger.warn(\"'geomFunc' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n      }\n\n      this._innerSource = undefined\n      this._innerSourceVm = undefined\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.geomFuncFactory) {\n          this.$logger.warn(\"'geomFuncFactory' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n        if (this.geomFunc) {\n          this.$logger.warn(\"'geomFunc' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ClusterSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          wrapX: this.wrapX,\n          // ol/source/Cluster\n          source: this.$innerSource,\n          distance: this.currentDistance,\n          geometryFunction: this.inputGeometryFunction,\n        })\n      },\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::vectorSource.methods.getServices(),\n          {\n            get innerSourceContainer () { return vm },\n          },\n        )\n      },\n      getDistance () {\n        return coalesce(this.$source?.getDistance(), this.currentDistance)\n      },\n      setDistance (distance) {\n        assert(isNumber(distance), 'Invalid distance')\n\n        if (distance !== this.currentDistance) {\n          this.currentDistance = distance\n        }\n        if (this.$source && distance !== this.$source.getDistance()) {\n          this.$source.setDistance(distance)\n        }\n      },\n      getInnerSource () {\n        return this._innerSource\n      },\n      getInnerSourceVm () {\n        return this._innerSourceVm\n      },\n      setInnerSource (innerSource) {\n        innerSource = innerSource?.$source || innerSource\n        assert(!innerSource || innerSource instanceof Source)\n        innerSource || (innerSource = undefined)\n\n        if (innerSource !== this._innerSource) {\n          this._innerSource = innerSource\n          this._innerSourceVm = innerSource?.vm && innerSource.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$source && innerSource !== this.$source.getSource()) {\n          this.$source.setSource(innerSource)\n          this.scheduleRefresh()\n        }\n      },\n      projectionChanged: noop,\n      inputUrlChanged: noop,\n      inputLoaderChanged: noop,\n      inputLoadingStrategyChanged: noop,\n      inputFormatFactoryChanged: noop,\n      formatIdentChanged: noop,\n      formatChanged: noop,\n      overlapsChanged: noop,\n      useSpatialIndexChanged: noop,\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $innerSource: {\n        enumerable: true,\n        get: this.getInnerSource,\n      },\n      $innerSourceVm: {\n        enumerable: true,\n        get: this.getInnerSourceVm,\n      },\n    })\n  }\n\n  function defaultGeomFunc (feature) {\n    const geometry = feature.getGeometry()\n    if (!geometry) return\n\n    const coordinate = findPointOnSurface(geometry)\n    if (coordinate) {\n      return createPointGeom(coordinate)\n    }\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { Collection } from 'ol'\n  import { noModifierKeys, shiftKeyOnly } from 'ol/events/condition'\n  import { Draw as DrawInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { merge as mergeObs, of as obsOf } from 'rxjs'\n  import { delay, first, map as mapObs, mapTo, mergeMap, tap } from 'rxjs/operators'\n  import { FRAME_TIME, interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, initializeFeature, roundLineCoords, writeGeoJsonFeature, GeometryType } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent, fromVueEvent as obsFromVueEvent } from '../../rx-ext'\n  import { assert, camelCase, instanceOf, isFunction, mergeDescriptors, upperFirst } from '../../utils'\n\n  const transformType = /*#__PURE__*/type => upperFirst(camelCase(type))\n\n  export default {\n    name: 'VlInteractionDraw',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Target source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * The maximum distance in pixels between \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n       * actually add a point/vertex to the geometry being drawn. Default is 6 pixels. That value was chosen for the\n       * draw interaction to behave correctly on mouse as well as on touch devices.\n       * @type {number}\n       */\n      clickTolerance: {\n        type: Number,\n        default: 6,\n      },\n      /**\n       * Pixel distance for snapping to the drawing finish.\n       * @type {number}\n       */\n      snapTolerance: {\n        type: Number,\n        default: 12,\n      },\n      /**\n       * Drawing type ('Point', 'LineString', 'Polygon', 'MultiPoint', 'MultiLineString', 'MultiPolygon' or 'Circle').\n       * @type {string}\n       */\n      type: {\n        type: String,\n        required: true,\n        validator: value => Object.values(GeometryType).includes(transformType(value)),\n      },\n      /**\n       * Stop click, singleclick, and doubleclick events from firing during drawing.\n       * @type {boolean}\n       */\n      stopClick: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * The number of points that can be drawn before a polygon ring or line string is finished.\n       * @type {number|undefined}\n       */\n      maxPoints: Number,\n      /**\n       * The number of points that must be drawn before a polygon ring or line string can be finished.\n       * Default is `3` for polygon rings and `2` for line strings.\n       * @type {number|undefined}\n       */\n      minPoints: Number,\n      /**\n       * A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether the drawing can be finished.\n       * @type {function|undefined}\n       */\n      finishCondition: Function,\n      /**\n       * Function that is called when a geometry's coordinates are updated.\n       * @type {function|undefined}\n       */\n      geometryFunction: Function,\n      /**\n       * Name of the geometry attribute for newly created features.\n       * @type {string}\n       */\n      geometryName: {\n        type: String,\n        default: 'geometry',\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default `ol.events.condition.noModifierKeys`, i.e. a click, adds a vertex or deactivates freehand drawing.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: noModifierKeys,\n      },\n      /**\n       * Operate in freehand mode for lines, polygons, and circles. This makes the interaction always operate in\n       * freehand mode and takes precedence over any `freehandCondition` option.\n       * @type {boolean}\n       */\n      freehand: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Condition that activates freehand drawing for lines and polygons. This function takes an `ol.MapBrowserEvent` and\n       * returns a boolean to indicate whether that event should be handled. The default is `ol.events.condition.shiftKeyOnly`,\n       * meaning that the Shift key activates freehand drawing.\n       * @type {function|undefined}\n       */\n      freehandCondition: {\n        type: Function,\n        default: shiftKeyOnly,\n      },\n      /**\n       * Wrap the world horizontally on the sketch overlay.\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Delay in milliseconds after pointerdown before the current vertex can be dragged to its exact position.\n       * @type {number}\n       */\n      dragVertexDelay: {\n        type: Number,\n        default: 500,\n      },\n    },\n    computed: {\n      inputType () {\n        return transformType(this.type)\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'clickTolerance',\n        'snapTolerance',\n        'inputType',\n        'stopClick',\n        'maxPoints',\n        'minPoints',\n        'finishCondition',\n        'geometryFunction',\n        'geometryName',\n        'condition',\n        'freehand',\n        'freehandCondition',\n        'wrapX',\n        'dragVertexDelay',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Draw>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n        let features\n        if (!(source instanceof VectorSource)) {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new DrawInteraction({\n          source,\n          features,\n          clickTolerance: this.clickTolerance,\n          snapTolerance: this.snapTolerance,\n          type: this.inputType,\n          stopClick: this.stopClick,\n          maxPoints: this.maxPoints,\n          minPoints: this.minPoints,\n          finishCondition: this.finishCondition,\n          geometryFunction: this.geometryFunction,\n          geometryName: this.geometryName,\n          condition: this.condition,\n          freehand: this.freehand,\n          freehandCondition: this.freehandCondition,\n          wrapX: this.wrapX,\n          dragVertexDelay: this.dragVertexDelay,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      async getOverlay () {\n        return (await this.resolveInteraction()).getOverlay()\n      },\n      async abortDrawing () {\n        (await this.resolveInteraction()).abortDrawing()\n      },\n      async finishDrawing () {\n        (await this.resolveInteraction()).finishDrawing()\n      },\n      async appendCoordinates (coordinates, viewProj = false) {\n        coordinates = viewProj ? roundLineCoords(coordinates) : this.lineToViewProj(coordinates);\n\n        (await this.resolveInteraction()).appendCoordinates(coordinates)\n      },\n      async removeLastPoint () {\n        (await this.resolveInteraction()).removeLastPoint()\n      },\n      async getPointerCount () {\n        return (await this.resolveInteraction()).getPointerCount()\n      },\n    },\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const start = obsFromOlEvent(this.$interaction, 'drawstart').pipe(\n      mapObs(evt => ({\n        ...evt,\n        feature: initializeFeature(evt.feature),\n      })),\n      tap(() => this.setInteracting(true)),\n    )\n    const sourceUpdObs = () => {\n      if (!this._source?.vm?.length) {\n        return obsOf(true).pipe(delay(3 * FRAME_TIME))\n      }\n      // update:features on the source (which is feature-container)\n      // will be always after drawend with delay ~= computed property update time + FRAME_TIME\n      // so we can safely just wait first event\n      return obsFromVueEvent(this._source.vm[0], 'update:features').pipe(\n        first(),\n      )\n    }\n    const end = obsFromOlEvent(this.$interaction, 'drawend').pipe(\n      mergeMap(evt => sourceUpdObs().pipe(\n        mapTo(evt),\n      )),\n      tap(() => this.setInteracting(false)),\n    )\n    const events = mergeObs(start, end).pipe(\n      mapObs(({ type, feature }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          feature,\n          get json () {\n            if (!this._json) {\n              this._json = writeGeoJsonFeature(this.feature, viewProj, dataProj, COORD_PRECISION)\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n","<script>\n  import { Collection } from 'ol'\n  import { noModifierKeys, shiftKeyOnly } from 'ol/events/condition'\n  import { Draw as DrawInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { merge as mergeObs, of as obsOf } from 'rxjs'\n  import { delay, first, map as mapObs, mapTo, mergeMap, tap } from 'rxjs/operators'\n  import { FRAME_TIME, interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, initializeFeature, roundLineCoords, writeGeoJsonFeature, GeometryType } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent, fromVueEvent as obsFromVueEvent } from '../../rx-ext'\n  import { assert, camelCase, instanceOf, isFunction, mergeDescriptors, upperFirst } from '../../utils'\n\n  const transformType = /*#__PURE__*/type => upperFirst(camelCase(type))\n\n  export default {\n    name: 'VlInteractionDraw',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Target source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * The maximum distance in pixels between \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n       * actually add a point/vertex to the geometry being drawn. Default is 6 pixels. That value was chosen for the\n       * draw interaction to behave correctly on mouse as well as on touch devices.\n       * @type {number}\n       */\n      clickTolerance: {\n        type: Number,\n        default: 6,\n      },\n      /**\n       * Pixel distance for snapping to the drawing finish.\n       * @type {number}\n       */\n      snapTolerance: {\n        type: Number,\n        default: 12,\n      },\n      /**\n       * Drawing type ('Point', 'LineString', 'Polygon', 'MultiPoint', 'MultiLineString', 'MultiPolygon' or 'Circle').\n       * @type {string}\n       */\n      type: {\n        type: String,\n        required: true,\n        validator: value => Object.values(GeometryType).includes(transformType(value)),\n      },\n      /**\n       * Stop click, singleclick, and doubleclick events from firing during drawing.\n       * @type {boolean}\n       */\n      stopClick: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * The number of points that can be drawn before a polygon ring or line string is finished.\n       * @type {number|undefined}\n       */\n      maxPoints: Number,\n      /**\n       * The number of points that must be drawn before a polygon ring or line string can be finished.\n       * Default is `3` for polygon rings and `2` for line strings.\n       * @type {number|undefined}\n       */\n      minPoints: Number,\n      /**\n       * A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether the drawing can be finished.\n       * @type {function|undefined}\n       */\n      finishCondition: Function,\n      /**\n       * Function that is called when a geometry's coordinates are updated.\n       * @type {function|undefined}\n       */\n      geometryFunction: Function,\n      /**\n       * Name of the geometry attribute for newly created features.\n       * @type {string}\n       */\n      geometryName: {\n        type: String,\n        default: 'geometry',\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default `ol.events.condition.noModifierKeys`, i.e. a click, adds a vertex or deactivates freehand drawing.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: noModifierKeys,\n      },\n      /**\n       * Operate in freehand mode for lines, polygons, and circles. This makes the interaction always operate in\n       * freehand mode and takes precedence over any `freehandCondition` option.\n       * @type {boolean}\n       */\n      freehand: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Condition that activates freehand drawing for lines and polygons. This function takes an `ol.MapBrowserEvent` and\n       * returns a boolean to indicate whether that event should be handled. The default is `ol.events.condition.shiftKeyOnly`,\n       * meaning that the Shift key activates freehand drawing.\n       * @type {function|undefined}\n       */\n      freehandCondition: {\n        type: Function,\n        default: shiftKeyOnly,\n      },\n      /**\n       * Wrap the world horizontally on the sketch overlay.\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Delay in milliseconds after pointerdown before the current vertex can be dragged to its exact position.\n       * @type {number}\n       */\n      dragVertexDelay: {\n        type: Number,\n        default: 500,\n      },\n    },\n    computed: {\n      inputType () {\n        return transformType(this.type)\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'clickTolerance',\n        'snapTolerance',\n        'inputType',\n        'stopClick',\n        'maxPoints',\n        'minPoints',\n        'finishCondition',\n        'geometryFunction',\n        'geometryName',\n        'condition',\n        'freehand',\n        'freehandCondition',\n        'wrapX',\n        'dragVertexDelay',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Draw>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n        let features\n        if (!(source instanceof VectorSource)) {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new DrawInteraction({\n          source,\n          features,\n          clickTolerance: this.clickTolerance,\n          snapTolerance: this.snapTolerance,\n          type: this.inputType,\n          stopClick: this.stopClick,\n          maxPoints: this.maxPoints,\n          minPoints: this.minPoints,\n          finishCondition: this.finishCondition,\n          geometryFunction: this.geometryFunction,\n          geometryName: this.geometryName,\n          condition: this.condition,\n          freehand: this.freehand,\n          freehandCondition: this.freehandCondition,\n          wrapX: this.wrapX,\n          dragVertexDelay: this.dragVertexDelay,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      async getOverlay () {\n        return (await this.resolveInteraction()).getOverlay()\n      },\n      async abortDrawing () {\n        (await this.resolveInteraction()).abortDrawing()\n      },\n      async finishDrawing () {\n        (await this.resolveInteraction()).finishDrawing()\n      },\n      async appendCoordinates (coordinates, viewProj = false) {\n        coordinates = viewProj ? roundLineCoords(coordinates) : this.lineToViewProj(coordinates);\n\n        (await this.resolveInteraction()).appendCoordinates(coordinates)\n      },\n      async removeLastPoint () {\n        (await this.resolveInteraction()).removeLastPoint()\n      },\n      async getPointerCount () {\n        return (await this.resolveInteraction()).getPointerCount()\n      },\n    },\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const start = obsFromOlEvent(this.$interaction, 'drawstart').pipe(\n      mapObs(evt => ({\n        ...evt,\n        feature: initializeFeature(evt.feature),\n      })),\n      tap(() => this.setInteracting(true)),\n    )\n    const sourceUpdObs = () => {\n      if (!this._source?.vm?.length) {\n        return obsOf(true).pipe(delay(3 * FRAME_TIME))\n      }\n      // update:features on the source (which is feature-container)\n      // will be always after drawend with delay ~= computed property update time + FRAME_TIME\n      // so we can safely just wait first event\n      return obsFromVueEvent(this._source.vm[0], 'update:features').pipe(\n        first(),\n      )\n    }\n    const end = obsFromOlEvent(this.$interaction, 'drawend').pipe(\n      mergeMap(evt => sourceUpdObs().pipe(\n        mapTo(evt),\n      )),\n      tap(() => this.setInteracting(false)),\n    )\n    const events = mergeObs(start, end).pipe(\n      mapObs(({ type, feature }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          feature,\n          get json () {\n            if (!this._json) {\n              this._json = writeGeoJsonFeature(this.feature, viewProj, dataProj, COORD_PRECISION)\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\n  import { Circle } from 'ol/geom'\n  import { get as getProj } from 'ol/proj'\n  import { simpleGeometry } from '../../mixins'\n  import { isPointCoords, roundPointCoords, transformDistance, GeometryType } from '../../ol-ext'\n  import { assert, coalesce, constant, isEqual, isNumber, round } from '../../utils'\n\n  export default {\n    name: 'VlGeomCircle',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n      /**\n       * Circle radius always in meters.\n       * @type {number}\n       */\n      radius: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * Projection in which radius provided.\n       * Default: map data projection\n       * @type {string}\n       */\n      radiusProjection: {\n        type: String,\n        validator: value => !!getProj(value),\n      },\n    },\n    data () {\n      return {\n        currentRadiusViewProj: this.radius,\n      }\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.CIRCLE),\n      resolvedRadiusProjection () {\n        return this.radiusProjection || this.resolvedDataProjection\n      },\n      radiusDataProj () {\n        return round(this.radius)\n      },\n      radiusViewProj () {\n        return this.radiusToViewProj(this.radius, this.coordinatesDataProj)\n      },\n      currentRadiusDataProj () {\n        return this.radiusToDataProj(this.currentRadiusViewProj)\n      },\n    },\n    watch: {\n      radiusViewProj (value) {\n        this.setRadius(value, true)\n      },\n      currentRadiusDataProj (value) {\n        if (value === this.radiusDataProj) return\n\n        this.$emit('update:radius', value)\n      },\n    },\n    created () {\n      this.currentRadiusViewProj = this.radiusViewProj\n    },\n    methods: {\n      /**\n       * @return {Circle}\n       * @protected\n       */\n      createGeometry () {\n        return new Circle(this.currentCoordinatesViewProj, this.currentRadiusViewProj)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCoordinates (viewProj = false) {\n        return this.getCenter(viewProj)\n      },\n      /**\n       * @param {number[]} coordinate\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinate, viewProj = false) {\n        this.setCenter(coordinate, viewProj)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCenter (viewProj = false) {\n        const center = coalesce(this.$geometry?.getCenter(), this.currentCoordinatesViewProj)\n\n        return viewProj ? roundPointCoords(center) : this.pointToDataProj(center)\n      },\n      /**\n       * @param {number[]} center\n       * @param {boolean} [viewProj=false]\n       */\n      setCenter (center, viewProj = false) {\n        assert(isPointCoords(center), 'Invalid center')\n        center = viewProj ? roundPointCoords(center) : this.pointToViewProj(center)\n\n        if (!isEqual(center, this.currentCoordinatesViewProj)) {\n          this.currentCoordinatesViewProj = center\n        }\n        if (this.$geometry && !isEqual(center, this.$geometry.getCenter())) {\n          this.$geometry.setCenter(center)\n        }\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number}\n       */\n      getRadius (viewProj = false) {\n        const radius = coalesce(this.$geometry?.getRadius(), this.currentRadiusViewProj)\n\n        return viewProj ? round(radius) : this.radiusToDataProj(radius)\n      },\n      /**\n       * @param {number} radius\n       * @param {boolean} [viewProj=false]\n       */\n      setRadius (radius, viewProj = false) {\n        assert(isNumber(radius), 'Invalid radius')\n        radius = viewProj ? round(radius) : this.radiusToDataProj(radius)\n\n        if (radius !== this.currentRadiusViewProj) {\n          this.currentRadiusViewProj = radius\n        }\n        if (this.$geometry && radius !== this.$geometry.getRadius()) {\n          this.$geometry.setRadius(radius)\n        }\n      },\n      /**\n       * @param {number[]} center\n       * @param {number} radius\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      setCenterAndRadius (center, radius, viewProj = false) {\n        center = viewProj ? roundPointCoords(center) : this.pointToViewProj(center)\n        radius = viewProj ? round(radius) : this.radiusToViewProj(radius)\n\n        if (this.$geometry) {\n          this.$geometry.setCenterAndRadius(center, radius)\n        } else {\n          this.setCenter(center, true)\n          this.setRadius(radius, true)\n        }\n      },\n      /**\n       * @param {number} radius\n       * @return {undefined|number}\n       * @protected\n       */\n      radiusToViewProj (radius) {\n        return transformDistance(radius, this.resolvedRadiusProjection, this.resolvedViewProjection)\n      },\n      /**\n       * @param {number} radius\n       * @return {undefined|number}\n       * @protected\n       */\n      radiusToDataProj (radius) {\n        return transformDistance(radius, this.resolvedViewProjection, this.resolvedRadiusProjection)\n      },\n    },\n  }\n","<script>\n  import { Circle } from 'ol/geom'\n  import { get as getProj } from 'ol/proj'\n  import { simpleGeometry } from '../../mixins'\n  import { isPointCoords, roundPointCoords, transformDistance, GeometryType } from '../../ol-ext'\n  import { assert, coalesce, constant, isEqual, isNumber, round } from '../../utils'\n\n  export default {\n    name: 'VlGeomCircle',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n      /**\n       * Circle radius always in meters.\n       * @type {number}\n       */\n      radius: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * Projection in which radius provided.\n       * Default: map data projection\n       * @type {string}\n       */\n      radiusProjection: {\n        type: String,\n        validator: value => !!getProj(value),\n      },\n    },\n    data () {\n      return {\n        currentRadiusViewProj: this.radius,\n      }\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.CIRCLE),\n      resolvedRadiusProjection () {\n        return this.radiusProjection || this.resolvedDataProjection\n      },\n      radiusDataProj () {\n        return round(this.radius)\n      },\n      radiusViewProj () {\n        return this.radiusToViewProj(this.radius, this.coordinatesDataProj)\n      },\n      currentRadiusDataProj () {\n        return this.radiusToDataProj(this.currentRadiusViewProj)\n      },\n    },\n    watch: {\n      radiusViewProj (value) {\n        this.setRadius(value, true)\n      },\n      currentRadiusDataProj (value) {\n        if (value === this.radiusDataProj) return\n\n        this.$emit('update:radius', value)\n      },\n    },\n    created () {\n      this.currentRadiusViewProj = this.radiusViewProj\n    },\n    methods: {\n      /**\n       * @return {Circle}\n       * @protected\n       */\n      createGeometry () {\n        return new Circle(this.currentCoordinatesViewProj, this.currentRadiusViewProj)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCoordinates (viewProj = false) {\n        return this.getCenter(viewProj)\n      },\n      /**\n       * @param {number[]} coordinate\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinate, viewProj = false) {\n        this.setCenter(coordinate, viewProj)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCenter (viewProj = false) {\n        const center = coalesce(this.$geometry?.getCenter(), this.currentCoordinatesViewProj)\n\n        return viewProj ? roundPointCoords(center) : this.pointToDataProj(center)\n      },\n      /**\n       * @param {number[]} center\n       * @param {boolean} [viewProj=false]\n       */\n      setCenter (center, viewProj = false) {\n        assert(isPointCoords(center), 'Invalid center')\n        center = viewProj ? roundPointCoords(center) : this.pointToViewProj(center)\n\n        if (!isEqual(center, this.currentCoordinatesViewProj)) {\n          this.currentCoordinatesViewProj = center\n        }\n        if (this.$geometry && !isEqual(center, this.$geometry.getCenter())) {\n          this.$geometry.setCenter(center)\n        }\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number}\n       */\n      getRadius (viewProj = false) {\n        const radius = coalesce(this.$geometry?.getRadius(), this.currentRadiusViewProj)\n\n        return viewProj ? round(radius) : this.radiusToDataProj(radius)\n      },\n      /**\n       * @param {number} radius\n       * @param {boolean} [viewProj=false]\n       */\n      setRadius (radius, viewProj = false) {\n        assert(isNumber(radius), 'Invalid radius')\n        radius = viewProj ? round(radius) : this.radiusToDataProj(radius)\n\n        if (radius !== this.currentRadiusViewProj) {\n          this.currentRadiusViewProj = radius\n        }\n        if (this.$geometry && radius !== this.$geometry.getRadius()) {\n          this.$geometry.setRadius(radius)\n        }\n      },\n      /**\n       * @param {number[]} center\n       * @param {number} radius\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      setCenterAndRadius (center, radius, viewProj = false) {\n        center = viewProj ? roundPointCoords(center) : this.pointToViewProj(center)\n        radius = viewProj ? round(radius) : this.radiusToViewProj(radius)\n\n        if (this.$geometry) {\n          this.$geometry.setCenterAndRadius(center, radius)\n        } else {\n          this.setCenter(center, true)\n          this.setRadius(radius, true)\n        }\n      },\n      /**\n       * @param {number} radius\n       * @return {undefined|number}\n       * @protected\n       */\n      radiusToViewProj (radius) {\n        return transformDistance(radius, this.resolvedRadiusProjection, this.resolvedViewProjection)\n      },\n      /**\n       * @param {number} radius\n       * @return {undefined|number}\n       * @protected\n       */\n      radiusToDataProj (radius) {\n        return transformDistance(radius, this.resolvedViewProjection, this.resolvedRadiusProjection)\n      },\n    },\n  }\n</script>\n","\n  import { Point } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isPointCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomPoint',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.POINT),\n    },\n    methods: {\n      /**\n       * @return {Point}\n       * @protected\n       */\n      createGeometry () {\n        return new Point(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isPointCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n","<script>\n  import { Point } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isPointCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomPoint',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.POINT),\n    },\n    methods: {\n      /**\n       * @return {Point}\n       * @protected\n       */\n      createGeometry () {\n        return new Point(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isPointCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { feature } from '../../mixins'\n  import PointGeom from './point-geom.vue'\n\n  /**\n   * A vector object for geographic features with a geometry and other attribute properties,\n   * similar to the features in vector file formats like **GeoJSON**.\n   */\n  export default {\n    name: 'VlFeature',\n    components: {\n      PointGeom,\n    },\n    mixins: [\n      feature,\n    ],\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot\n      :id=\"currentId\"\n      :properties=\"currentProperties\">\n      <PointGeom\n        :id=\"'vl-' + currentId + '-default-geom'\"\n        :coordinates=\"[0, 0]\" />\n    </slot>\n  </i>\n</template>\n\n<script>\n  import { feature } from '../../mixins'\n  import PointGeom from './point-geom.vue'\n\n  /**\n   * A vector object for geographic features with a geometry and other attribute properties,\n   * similar to the features in vector file formats like **GeoJSON**.\n   */\n  export default {\n    name: 'VlFeature',\n    components: {\n      PointGeom,\n    },\n    mixins: [\n      feature,\n    ],\n  }\n</script>\n","\n  import { LineString } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isLineCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomLineString',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isLineCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.LINE_STRING),\n    },\n    methods: {\n      /**\n       * @returns {LineString}\n       * @protected\n       */\n      createGeometry () {\n        return new LineString(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isLineCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n","<script>\n  import { LineString } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isLineCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomLineString',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isLineCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.LINE_STRING),\n    },\n    methods: {\n      /**\n       * @returns {LineString}\n       * @protected\n       */\n      createGeometry () {\n        return new LineString(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isLineCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","\n  import { MultiLineString } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiLineCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiLineString',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiLineCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_LINE_STRING),\n    },\n    methods: {\n      /**\n       * @returns {MultiLineString}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiLineString(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiLineCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n","<script>\n  import { MultiLineString } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiLineCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiLineString',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiLineCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_LINE_STRING),\n    },\n    methods: {\n      /**\n       * @returns {MultiLineString}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiLineString(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiLineCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","\n  import { MultiPoint } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiPointCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiPoint',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_POINT),\n    },\n    methods: {\n      /**\n       * @returns {MultiPoint}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiPoint(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiPointCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n","<script>\n  import { MultiPoint } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiPointCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiPoint',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_POINT),\n    },\n    methods: {\n      /**\n       * @returns {MultiPoint}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiPoint(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiPointCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","\n  import { MultiPolygon } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiPolygonCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiPolygon',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiPolygonCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_POLYGON),\n    },\n    methods: {\n      /**\n       * @returns {MultiPolygon}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiPolygon(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiPolygonCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n","<script>\n  import { MultiPolygon } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiPolygonCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiPolygon',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiPolygonCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_POLYGON),\n    },\n    methods: {\n      /**\n       * @returns {MultiPolygon}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiPolygon(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiPolygonCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","\n  import { Polygon } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isPolygonCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomPolygon',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPolygonCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.POLYGON),\n    },\n    methods: {\n      /**\n       * @returns {Polygon}\n       * @protected\n       */\n      createGeometry () {\n        return new Polygon(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isPolygonCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n","<script>\n  import { Polygon } from 'ol/geom'\n  import { simpleGeometry } from '../../mixins'\n  import { isPolygonCoords, GeometryType } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomPolygon',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPolygonCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.POLYGON),\n    },\n    methods: {\n      /**\n       * @returns {Polygon}\n       * @protected\n       */\n      createGeometry () {\n        return new Polygon(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isPolygonCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport CircleGeom from './circle-geom.vue'\nimport Feature from './feature.vue'\nimport LineStringGeom from './line-string-geom.vue'\nimport MultiLineStringGeom from './multi-line-string-geom.vue'\nimport MultiPointGeom from './multi-point-geom.vue'\nimport MultiPolygonGeom from './multi-polygon-geom.vue'\nimport PointGeom from './point-geom.vue'\nimport PolygonGeom from './polygon-geom.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Feature, options)\n  Object.assign(CircleGeom, options)\n  Object.assign(PointGeom, options)\n  Object.assign(LineStringGeom, options)\n  Object.assign(PolygonGeom, options)\n  Object.assign(MultiPointGeom, options)\n  Object.assign(MultiLineStringGeom, options)\n  Object.assign(MultiPolygonGeom, options)\n\n  Vue.component(Feature.name, Feature)\n  Vue.component(CircleGeom.name, CircleGeom)\n  Vue.component(PointGeom.name, PointGeom)\n  Vue.component(LineStringGeom.name, LineStringGeom)\n  Vue.component(PolygonGeom.name, PolygonGeom)\n  Vue.component(MultiPointGeom.name, MultiPointGeom)\n  Vue.component(MultiLineStringGeom.name, MultiLineStringGeom)\n  Vue.component(MultiPolygonGeom.name, MultiPolygonGeom)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Feature,\n  CircleGeom,\n  PointGeom,\n  LineStringGeom,\n  PolygonGeom,\n  MultiPointGeom,\n  MultiLineStringGeom,\n  MultiPolygonGeom,\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { Geolocation } from 'ol'\n  import { get as getProj } from 'ol/proj'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs } from 'rxjs/operators'\n  import { olCmp, projTransforms, waitForMap } from '../../mixins'\n  import { EPSG_3857 } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, and, assert, clonePlainObject, coalesce, isEqual, isString } from '../../utils'\n\n  const validateProjection = /*#__PURE__*/and(isString, value => getProj(value) != null)\n\n  export default {\n    name: 'VlGeoloc',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty () {\n        return this.vmId\n      },\n    },\n    props: {\n      tracking: {\n        type: Boolean,\n        default: true,\n      },\n      trackingOptions: Object,\n      projection: {\n        type: String,\n        validator: validateProjection,\n      },\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentTracking: this.tracking,\n        currentTrackingOptions: this.trackingOptions && clonePlainObject(this.trackingOptions),\n        currentProjection: this.projection,\n      }\n    },\n    computed: {\n      resolvedDataProjection () {\n        return coalesce(\n          this.currentProjection,\n          this.$options?.dataProjection,\n          this.dataProjection,\n          this.resolvedViewProjection,\n        )\n      },\n      accuracy () {\n        return this.rev ? this.getAccuracy() : undefined\n      },\n      accuracyGeometryDataProj () {\n        return this.rev ? this.writeGeometryInDataProj(this.getAccuracyGeometry()) : undefined\n      },\n      accuracyGeometryViewProj () {\n        return this.rev ? this.writeGeometryInViewProj(this.getAccuracyGeometry()) : undefined\n      },\n      altitude () {\n        return this.rev ? this.getAltitude() : undefined\n      },\n      altitudeAccuracy () {\n        return this.rev ? this.getAltitudeAccuracy() : undefined\n      },\n      heading () {\n        return this.rev ? this.getHeading() : undefined\n      },\n      speed () {\n        return this.rev ? this.getSpeed() : undefined\n      },\n      positionDataProj () {\n        return this.rev ? this.getPosition() : undefined\n      },\n      positionViewProj () {\n        return this.rev ? this.pointToViewProj(this.getPosition()) : undefined\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$geolocation) return\n\n        if (this.currentTracking !== this.$geolocation.getTracking()) {\n          this.currentTracking = this.$geolocation.getTracking()\n        }\n        if (!isEqual(this.currentTrackingOptions, this.$geolocation.getTrackingOptions())) {\n          this.currentTrackingOptions = this.$geolocation.getTrackingOptions()\n        }\n        if (this.currentProjection !== this.$geolocation.getProjection().getCode()) {\n          this.currentProjection = this.$geolocation.getProjection().getCode()\n        }\n      },\n      tracking (value) {\n        this.setTracking(value)\n      },\n      currentTracking (value) {\n        if (value === this.tracking) return\n\n        this.$emit('update:tracking', value)\n      },\n      tracingOptions: {\n        deep: true,\n        handler (value) {\n          this.setTrackingOptions(value)\n        },\n      },\n      currentTrackingOptions: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.trackingOptions)) return\n\n          this.$emit('update:tracingOptions', value && clonePlainObject(value))\n        },\n      },\n      projection (value) {\n        this.setProjection(value)\n      },\n      currentProjection (value) {\n        if (value === this.projection) return\n\n        this.$emit('update:projection', value)\n      },\n      accuracy (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:accuracy', value)\n      },\n      accuracyGeometryDataProj (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:accuracyGeometry', value)\n      },\n      currentAltitude (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:altitude', value)\n      },\n      altitudeAccuracy (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:altitudeAccuracy', value)\n      },\n      heading (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:heading', value)\n      },\n      speed (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:speed', value)\n      },\n      positionDataProj (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:position', value)\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/Geolocation~Geolocation}\n       * @private\n       */\n      createOlObject () {\n        const geoloc = new Geolocation({\n          tracking: this.currentTracking,\n          trackingOptions: this.currentTrackingOptions,\n          projection: this.resolvedDataProjection,\n        })\n        geoloc.set('id', this.currentId)\n\n        return geoloc\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      mount () {\n        this.setTracking(this.tracking)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      unmount () {\n        this.setTracking(false)\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToGeolocation()\n      },\n      resolveGeolocation: olCmp.methods.resolveOlObject,\n      /**\n       * @return {number|string}\n       */\n      getIdInternal () {\n        return this.$geolocation.get('id')\n      },\n      /**\n       * @param {string|number} id\n       * @return {void}\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        this.$geolocation.set('id', id)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAccuracy () {\n        return this.$geolocation?.getAccuracy()\n      },\n      /**\n       * @return {module:/ol/geom/Geometry~Geometry|undefined}\n       */\n      getAccuracyGeometry () {\n        return this.$geolocation?.getAccuracyGeometry()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAltitude () {\n        return this.$geolocation?.getAltitude()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAltitudeAccuracy () {\n        return this.$geolocation?.getAltitudeAccuracy()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getHeading () {\n        return this.$geolocation?.getHeading()\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getPosition () {\n        return this.$geolocation?.getPosition()\n      },\n      /**\n       * @return {module:ol/proj~ProjectionLike|undefined}\n       */\n      getProjection () {\n        return coalesce(this.$geolocation?.getProjection(), this.currentProjection)\n      },\n      /**\n       * @param {module:ol/proj~ProjectionLike} projection\n       */\n      setProjection (projection) {\n        assert(validateProjection(projection), 'Invalid projection')\n        projection = getProj(projection)\n\n        if (projection.getCode() !== this.currentProjection) {\n          this.currentProjection = projection.getCode()\n        }\n        if (this.$geolocation && projection !== this.$geolocation.getProjection()) {\n          this.$geolocation.setProjection(projection)\n        }\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getSpeed () {\n        return this.$geolocation?.getSpeed()\n      },\n      /**\n       * @return {boolean}\n       */\n      getTracking () {\n        return coalesce(this.$geolocation?.getTracking(), this.currentTracking)\n      },\n      /**\n       * @param {boolean} tracking\n       */\n      setTracking (tracking) {\n        if (tracking !== this.currentTracking) {\n          this.currentTracking = tracking\n        }\n        if (this.$geolocation && tracking !== this.$geolocation.getTracking()) {\n          this.$geolocation.setTracking(tracking)\n        }\n      },\n      /**\n       * @return {Object|undefined}\n       */\n      getTrackingOptions () {\n        return coalesce(this.$geolocation?.getTrackingOptions(), this.currentTrackingOptions)\n      },\n      /**\n       * @param {Promise<Object|undefined>} options\n       */\n      setTrackingOptions (options) {\n        if (!isEqual(options, this.currentTrackingOptions)) {\n          this.currentTrackingOptions = options\n        }\n        if (this.$geolocation && !isEqual(options, this.$geolocation.getTrackingOptions())) {\n          this.$geolocation.setTrackingOptions(options)\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $geolocation: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n    })\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToGeolocation () {\n    const setterKey = addPrefix('set')\n    const setPropsChanges = mergeObs(\n      obsFromOlChangeEvent(this.$geolocation, 'projection', true, evt => ({\n        ...evt,\n        value: getProj(evt.value).getCode(),\n      })),\n      obsFromOlChangeEvent(this.$geolocation, [\n        'tracking',\n        'trackingOptions',\n      ], true),\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: val => {\n          this[setterKey(evt.prop)](val)\n          this.scheduleRefresh()\n        },\n      })),\n    )\n    this.subscribeTo(setPropsChanges, ({ setter, value }) => setter(value))\n\n    const otherChanged = obsFromOlChangeEvent(this.$geolocation, [\n      'accuracy',\n      'accuracyGeometry',\n      'altitude',\n      'altitudeAccuracy',\n      'heading',\n      'speed',\n      'position',\n    ], true)\n    this.subscribeTo(otherChanged, ::this.scheduleRefresh)\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot\n      :accuracy=\"accuracy\"\n      :accuracy-geometry=\"accuracyGeometryDataProj\"\n      :altitude=\"altitude\"\n      :altitude-accuracy=\"altitudeAccuracy\"\n      :heading=\"heading\"\n      :position=\"positionDataProj\"\n      :speed=\"speed\" />\n  </i>\n</template>\n\n<script>\n  import { Geolocation } from 'ol'\n  import { get as getProj } from 'ol/proj'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs } from 'rxjs/operators'\n  import { olCmp, projTransforms, waitForMap } from '../../mixins'\n  import { EPSG_3857 } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, and, assert, clonePlainObject, coalesce, isEqual, isString } from '../../utils'\n\n  const validateProjection = /*#__PURE__*/and(isString, value => getProj(value) != null)\n\n  export default {\n    name: 'VlGeoloc',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty () {\n        return this.vmId\n      },\n    },\n    props: {\n      tracking: {\n        type: Boolean,\n        default: true,\n      },\n      trackingOptions: Object,\n      projection: {\n        type: String,\n        validator: validateProjection,\n      },\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentTracking: this.tracking,\n        currentTrackingOptions: this.trackingOptions && clonePlainObject(this.trackingOptions),\n        currentProjection: this.projection,\n      }\n    },\n    computed: {\n      resolvedDataProjection () {\n        return coalesce(\n          this.currentProjection,\n          this.$options?.dataProjection,\n          this.dataProjection,\n          this.resolvedViewProjection,\n        )\n      },\n      accuracy () {\n        return this.rev ? this.getAccuracy() : undefined\n      },\n      accuracyGeometryDataProj () {\n        return this.rev ? this.writeGeometryInDataProj(this.getAccuracyGeometry()) : undefined\n      },\n      accuracyGeometryViewProj () {\n        return this.rev ? this.writeGeometryInViewProj(this.getAccuracyGeometry()) : undefined\n      },\n      altitude () {\n        return this.rev ? this.getAltitude() : undefined\n      },\n      altitudeAccuracy () {\n        return this.rev ? this.getAltitudeAccuracy() : undefined\n      },\n      heading () {\n        return this.rev ? this.getHeading() : undefined\n      },\n      speed () {\n        return this.rev ? this.getSpeed() : undefined\n      },\n      positionDataProj () {\n        return this.rev ? this.getPosition() : undefined\n      },\n      positionViewProj () {\n        return this.rev ? this.pointToViewProj(this.getPosition()) : undefined\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$geolocation) return\n\n        if (this.currentTracking !== this.$geolocation.getTracking()) {\n          this.currentTracking = this.$geolocation.getTracking()\n        }\n        if (!isEqual(this.currentTrackingOptions, this.$geolocation.getTrackingOptions())) {\n          this.currentTrackingOptions = this.$geolocation.getTrackingOptions()\n        }\n        if (this.currentProjection !== this.$geolocation.getProjection().getCode()) {\n          this.currentProjection = this.$geolocation.getProjection().getCode()\n        }\n      },\n      tracking (value) {\n        this.setTracking(value)\n      },\n      currentTracking (value) {\n        if (value === this.tracking) return\n\n        this.$emit('update:tracking', value)\n      },\n      tracingOptions: {\n        deep: true,\n        handler (value) {\n          this.setTrackingOptions(value)\n        },\n      },\n      currentTrackingOptions: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.trackingOptions)) return\n\n          this.$emit('update:tracingOptions', value && clonePlainObject(value))\n        },\n      },\n      projection (value) {\n        this.setProjection(value)\n      },\n      currentProjection (value) {\n        if (value === this.projection) return\n\n        this.$emit('update:projection', value)\n      },\n      accuracy (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:accuracy', value)\n      },\n      accuracyGeometryDataProj (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:accuracyGeometry', value)\n      },\n      currentAltitude (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:altitude', value)\n      },\n      altitudeAccuracy (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:altitudeAccuracy', value)\n      },\n      heading (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:heading', value)\n      },\n      speed (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:speed', value)\n      },\n      positionDataProj (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:position', value)\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/Geolocation~Geolocation}\n       * @private\n       */\n      createOlObject () {\n        const geoloc = new Geolocation({\n          tracking: this.currentTracking,\n          trackingOptions: this.currentTrackingOptions,\n          projection: this.resolvedDataProjection,\n        })\n        geoloc.set('id', this.currentId)\n\n        return geoloc\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      mount () {\n        this.setTracking(this.tracking)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      unmount () {\n        this.setTracking(false)\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToGeolocation()\n      },\n      resolveGeolocation: olCmp.methods.resolveOlObject,\n      /**\n       * @return {number|string}\n       */\n      getIdInternal () {\n        return this.$geolocation.get('id')\n      },\n      /**\n       * @param {string|number} id\n       * @return {void}\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        this.$geolocation.set('id', id)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAccuracy () {\n        return this.$geolocation?.getAccuracy()\n      },\n      /**\n       * @return {module:/ol/geom/Geometry~Geometry|undefined}\n       */\n      getAccuracyGeometry () {\n        return this.$geolocation?.getAccuracyGeometry()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAltitude () {\n        return this.$geolocation?.getAltitude()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAltitudeAccuracy () {\n        return this.$geolocation?.getAltitudeAccuracy()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getHeading () {\n        return this.$geolocation?.getHeading()\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getPosition () {\n        return this.$geolocation?.getPosition()\n      },\n      /**\n       * @return {module:ol/proj~ProjectionLike|undefined}\n       */\n      getProjection () {\n        return coalesce(this.$geolocation?.getProjection(), this.currentProjection)\n      },\n      /**\n       * @param {module:ol/proj~ProjectionLike} projection\n       */\n      setProjection (projection) {\n        assert(validateProjection(projection), 'Invalid projection')\n        projection = getProj(projection)\n\n        if (projection.getCode() !== this.currentProjection) {\n          this.currentProjection = projection.getCode()\n        }\n        if (this.$geolocation && projection !== this.$geolocation.getProjection()) {\n          this.$geolocation.setProjection(projection)\n        }\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getSpeed () {\n        return this.$geolocation?.getSpeed()\n      },\n      /**\n       * @return {boolean}\n       */\n      getTracking () {\n        return coalesce(this.$geolocation?.getTracking(), this.currentTracking)\n      },\n      /**\n       * @param {boolean} tracking\n       */\n      setTracking (tracking) {\n        if (tracking !== this.currentTracking) {\n          this.currentTracking = tracking\n        }\n        if (this.$geolocation && tracking !== this.$geolocation.getTracking()) {\n          this.$geolocation.setTracking(tracking)\n        }\n      },\n      /**\n       * @return {Object|undefined}\n       */\n      getTrackingOptions () {\n        return coalesce(this.$geolocation?.getTrackingOptions(), this.currentTrackingOptions)\n      },\n      /**\n       * @param {Promise<Object|undefined>} options\n       */\n      setTrackingOptions (options) {\n        if (!isEqual(options, this.currentTrackingOptions)) {\n          this.currentTrackingOptions = options\n        }\n        if (this.$geolocation && !isEqual(options, this.$geolocation.getTrackingOptions())) {\n          this.$geolocation.setTrackingOptions(options)\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $geolocation: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n    })\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToGeolocation () {\n    const setterKey = addPrefix('set')\n    const setPropsChanges = mergeObs(\n      obsFromOlChangeEvent(this.$geolocation, 'projection', true, evt => ({\n        ...evt,\n        value: getProj(evt.value).getCode(),\n      })),\n      obsFromOlChangeEvent(this.$geolocation, [\n        'tracking',\n        'trackingOptions',\n      ], true),\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: val => {\n          this[setterKey(evt.prop)](val)\n          this.scheduleRefresh()\n        },\n      })),\n    )\n    this.subscribeTo(setPropsChanges, ({ setter, value }) => setter(value))\n\n    const otherChanged = obsFromOlChangeEvent(this.$geolocation, [\n      'accuracy',\n      'accuracyGeometry',\n      'altitude',\n      'altitudeAccuracy',\n      'heading',\n      'speed',\n      'position',\n    ], true)\n    this.subscribeTo(otherChanged, ::this.scheduleRefresh)\n  }\n</script>\n","import { pick } from '../../utils'\nimport Geoloc from './geoloc.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Geoloc, options)\n\n  Vue.component(Geoloc.name, Geoloc)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Geoloc,\n}\n","\n  import { Fill as FillStyle } from 'ol/style'\n  import { style } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { coalesce, isEqual } from '../../utils'\n\n  export default {\n    name: 'VlStyleFill',\n    mixins: [\n      style,\n    ],\n    props: {\n      color: {\n        type: [String, Array],\n        default: () => [255, 255, 255, 0.4],\n      },\n    },\n    data () {\n      return {\n        currentColor: normalizeColor(this.color),\n      }\n    },\n    computed: {\n      inputColor () {\n        return normalizeColor(this.color)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setColor(this.getColor())\n      },\n      inputColor: {\n        deep: true,\n        handler (value) {\n          this.setColor(value)\n        },\n      },\n      currentColor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputColor)) return\n\n          this.$emit('update:color', value?.slice())\n        },\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {FillStyle}\n       * @protected\n       */\n      createStyle () {\n        return new FillStyle({\n          color: this.currentColor,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$fillStyleContainer?.setFill(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$fillStyleContainer?.getFillVm() === this) {\n          this.$fillStyleContainer.setFill(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$fillStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setColor(this.getColor())\n      },\n      getColor () {\n        return normalizeColor(coalesce(this.$style?.getColor(), this.currentColor))\n      },\n      setColor (color) {\n        color = normalizeColor(color)\n\n        if (!isEqual(color, this.currentColor)) {\n          this.currentColor = color\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(color, this.$style.getColor())) {\n          this.$style.setColor(color)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $fillStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.fillStyleContainer,\n      },\n    })\n  }\n","<script>\n  import { Fill as FillStyle } from 'ol/style'\n  import { style } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { coalesce, isEqual } from '../../utils'\n\n  export default {\n    name: 'VlStyleFill',\n    mixins: [\n      style,\n    ],\n    props: {\n      color: {\n        type: [String, Array],\n        default: () => [255, 255, 255, 0.4],\n      },\n    },\n    data () {\n      return {\n        currentColor: normalizeColor(this.color),\n      }\n    },\n    computed: {\n      inputColor () {\n        return normalizeColor(this.color)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setColor(this.getColor())\n      },\n      inputColor: {\n        deep: true,\n        handler (value) {\n          this.setColor(value)\n        },\n      },\n      currentColor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputColor)) return\n\n          this.$emit('update:color', value?.slice())\n        },\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {FillStyle}\n       * @protected\n       */\n      createStyle () {\n        return new FillStyle({\n          color: this.currentColor,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$fillStyleContainer?.setFill(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$fillStyleContainer?.getFillVm() === this) {\n          this.$fillStyleContainer.setFill(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$fillStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setColor(this.getColor())\n      },\n      getColor () {\n        return normalizeColor(coalesce(this.$style?.getColor(), this.currentColor))\n      },\n      setColor (color) {\n        color = normalizeColor(color)\n\n        if (!isEqual(color, this.currentColor)) {\n          this.currentColor = color\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(color, this.$style.getColor())) {\n          this.$style.setColor(color)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $fillStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.fillStyleContainer,\n      },\n    })\n  }\n</script>\n","\n  import { Stroke as StrokeStyle } from 'ol/style'\n  import { style } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { clonePlainObject, coalesce, isEqual, isObjectLike, lowerFirst, makeWatchers, upperFirst } from '../../utils'\n\n  export default {\n    name: 'VlStyleStroke',\n    mixins: [\n      style,\n    ],\n    props: {\n      color: {\n        type: [Array, String],\n        default: '#3399cc',\n      },\n      lineCap: {\n        type: String,\n        default: 'round', // round, butt, square\n      },\n      lineJoin: {\n        type: String,\n        default: 'round', // round, bevel, miter\n      },\n      lineDash: Array,\n      lineDashOffset: {\n        type: Number,\n        default: 0,\n      },\n      miterLimit: {\n        type: Number,\n        default: 10,\n      },\n      width: {\n        type: Number,\n        default: 1.25,\n      },\n    },\n    data () {\n      return {\n        currentColor: normalizeColor(this.color),\n        currentLineCap: this.lineCap,\n        currentLineJoin: this.lineJoin,\n        currentLineDash: this.lineDash?.slice(),\n        currentLineDashOffset: this.lineDashOffset,\n        currentMiterLimit: this.miterLimit,\n        currentWidth: this.width,\n      }\n    },\n    computed: {\n      inputColor () {\n        return normalizeColor(this.color)\n      },\n      inputLineDash () {\n        return this.lineDash?.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setColor(this.getColor())\n        this.setLineCap(this.getLineCap())\n        this.setLineJoin(this.getLineJoin())\n        this.setLineDash(this.getLineDash())\n        this.setLineDashOffset(this.getLineDashOffset())\n        this.setMiterLimit(this.getMiterLimit())\n        this.setWidth(this.getWidth())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'inputColor',\n        'lineCap',\n        'lineJoin',\n        'inputLineDash',\n        'lineDashOffset',\n        'miterLimit',\n        'width',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return {\n          deep: [\n            'inputColor',\n            'inputLineDash',\n          ].includes(inProp),\n          handler (value) {\n            this[setter](value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentColor',\n        'currentLineCap',\n        'currentLineJoin',\n        'currentLineDash',\n        'currentLineDashOffset',\n        'currentMiterLimit',\n        'currentWidth',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return {\n          deep: [\n            'currentColor',\n            'currentLineDash',\n          ].includes(curProp),\n          handler (value) {\n            if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n      inputColor: {\n        deep: true,\n        handler (value) {\n          this.setColor(value)\n        },\n      },\n      currentColor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputColor)) return\n\n          this.$emit('update:color', value?.slice())\n        },\n      },\n      lineCap (value) {\n        this.setLineCap(value)\n      },\n      currentLineCap (value) {\n        if (value === this.lineCap) return\n\n        this.$emit('update:lineCap', value)\n      },\n      lineJoin (value) {\n        this.setLineJoin(value)\n      },\n      currentLineJoin (value) {\n        if (value === this.lineJoin) return\n\n        this.$emit('update:lineJoin', value)\n      },\n      inputLineDash: {\n        deep: true,\n        handler (value) {\n          this.setLineDash(value)\n        },\n      },\n      currentLineDash: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.currentLineDash)) return\n\n          this.$emit('update:lineDash', value?.slice())\n        },\n      },\n      lineDashOffset (value) {\n        this.setLineDashOffset(value)\n      },\n      currentLineDashOffset (value) {\n        if (value === this.lineDashOffset) return\n\n        this.$emit('update:lineDashOffset', value)\n      },\n      miterLimit (value) {\n        this.setMiterLimit(value)\n      },\n      currentMiterLimit (value) {\n        if (value === this.miterLimit) return\n\n        this.$emit('update:miterLimit', value)\n      },\n      width (value) {\n        this.setWidth(value)\n      },\n      currentWidth (value) {\n        if (value === this.width) return\n\n        this.$emit('update:width', value)\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {StrokeStyle}\n       * @protected\n       */\n      createStyle () {\n        return new StrokeStyle({\n          color: this.currentColor,\n          lineCap: this.currentLineCap,\n          lineJoin: this.currentLineJoin,\n          lineDash: this.currentLineDash,\n          lineDashOffset: this.currentLineDashOffset,\n          miterLimit: this.currentMiterLimit,\n          width: this.currentWidth,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$strokeStyleContainer?.setStroke(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$strokeStyleContainer?.getStrokeVm() === this) {\n          this.$strokeStyleContainer.setStroke(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$strokeStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setColor(this.getColor())\n        this.setLineCap(this.getLineCap())\n        this.setLineJoin(this.getLineJoin())\n        this.setLineDash(this.getLineDash())\n        this.setLineDashOffset(this.getLineDashOffset())\n        this.setMiterLimit(this.getMiterLimit())\n        this.setWidth(this.getWidth())\n      },\n      getColor () {\n        return coalesce(this.$style?.getColor(), this.currentColor)\n      },\n      setColor (color) {\n        color = normalizeColor(color)\n\n        if (!isEqual(color, this.currentColor)) {\n          this.currentColor = color\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(color, this.$style.getColor())) {\n          this.$style.setColor(color)\n          this.scheduleRefresh()\n        }\n      },\n      getLineCap () {\n        return coalesce(this.$style?.getLineCap(), this.currentLineCap)\n      },\n      setLineCap (lineCap) {\n        if (lineCap !== this.currentLineCap) {\n          this.currentLineCap = lineCap\n          this.scheduleRefresh()\n        }\n        if (this.$style && lineCap !== this.$style.getLineCap()) {\n          this.$style.setLineCap(lineCap)\n          this.scheduleRefresh()\n        }\n      },\n      getLineJoin () {\n        return coalesce(this.$style?.getLineJoin(), this.currentLineJoin)\n      },\n      setLineJoin (lineJoin) {\n        if (lineJoin !== this.currentLineJoin) {\n          this.currentLineJoin = lineJoin\n        }\n        if (this.$style && lineJoin !== this.$style.getLineJoin()) {\n          this.$style.setLineJoin(lineJoin)\n          this.scheduleRefresh()\n        }\n      },\n      getLineDash () {\n        return coalesce(this.$style?.getLineDash(), this.currentLineDash)\n      },\n      setLineDash (lineDash) {\n        lineDash = lineDash?.slice()\n\n        if (!isEqual(lineDash, this.currentLineDash)) {\n          this.currentLineDash = lineDash\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(lineDash, this.$style.getLineDash())) {\n          this.$style.setLineDash(lineDash)\n          this.scheduleRefresh()\n        }\n      },\n      getLineDashOffset () {\n        return coalesce(this.$style?.getLineDashOffset(), this.currentLineDashOffset)\n      },\n      setLineDashOffset (lineDashOffset) {\n        if (lineDashOffset !== this.currentLineDashOffset) {\n          this.currentLineDashOffset = lineDashOffset\n          this.scheduleRefresh()\n        }\n        if (this.$style && lineDashOffset !== this.$style.getLineDashOffset()) {\n          this.$style.setLineDashOffset(lineDashOffset)\n          this.scheduleRefresh()\n        }\n      },\n      getMiterLimit () {\n        return coalesce(this.$style?.getMiterLimit(), this.currentMiterLimit)\n      },\n      setMiterLimit (miterLimit) {\n        if (miterLimit !== this.currentMiterLimit) {\n          this.currentMiterLimit = miterLimit\n          this.scheduleRefresh()\n        }\n        if (this.$style && miterLimit !== this.$style.getMiterLimit()) {\n          this.$style.setMiterLimit(miterLimit)\n          this.scheduleRefresh()\n        }\n      },\n      getWidth () {\n        return coalesce(this.$style?.getWidth(), this.currentWidth)\n      },\n      setWidth (width) {\n        if (width !== this.currentWidth) {\n          this.currentWidth = width\n          this.scheduleRefresh()\n        }\n        if (this.$style && width !== this.$style.getWidth()) {\n          this.$style.setWidth(width)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $strokeStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.strokeStyleContainer,\n      },\n    })\n  }\n","<script>\n  import { Stroke as StrokeStyle } from 'ol/style'\n  import { style } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { clonePlainObject, coalesce, isEqual, isObjectLike, lowerFirst, makeWatchers, upperFirst } from '../../utils'\n\n  export default {\n    name: 'VlStyleStroke',\n    mixins: [\n      style,\n    ],\n    props: {\n      color: {\n        type: [Array, String],\n        default: '#3399cc',\n      },\n      lineCap: {\n        type: String,\n        default: 'round', // round, butt, square\n      },\n      lineJoin: {\n        type: String,\n        default: 'round', // round, bevel, miter\n      },\n      lineDash: Array,\n      lineDashOffset: {\n        type: Number,\n        default: 0,\n      },\n      miterLimit: {\n        type: Number,\n        default: 10,\n      },\n      width: {\n        type: Number,\n        default: 1.25,\n      },\n    },\n    data () {\n      return {\n        currentColor: normalizeColor(this.color),\n        currentLineCap: this.lineCap,\n        currentLineJoin: this.lineJoin,\n        currentLineDash: this.lineDash?.slice(),\n        currentLineDashOffset: this.lineDashOffset,\n        currentMiterLimit: this.miterLimit,\n        currentWidth: this.width,\n      }\n    },\n    computed: {\n      inputColor () {\n        return normalizeColor(this.color)\n      },\n      inputLineDash () {\n        return this.lineDash?.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setColor(this.getColor())\n        this.setLineCap(this.getLineCap())\n        this.setLineJoin(this.getLineJoin())\n        this.setLineDash(this.getLineDash())\n        this.setLineDashOffset(this.getLineDashOffset())\n        this.setMiterLimit(this.getMiterLimit())\n        this.setWidth(this.getWidth())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'inputColor',\n        'lineCap',\n        'lineJoin',\n        'inputLineDash',\n        'lineDashOffset',\n        'miterLimit',\n        'width',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return {\n          deep: [\n            'inputColor',\n            'inputLineDash',\n          ].includes(inProp),\n          handler (value) {\n            this[setter](value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentColor',\n        'currentLineCap',\n        'currentLineJoin',\n        'currentLineDash',\n        'currentLineDashOffset',\n        'currentMiterLimit',\n        'currentWidth',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return {\n          deep: [\n            'currentColor',\n            'currentLineDash',\n          ].includes(curProp),\n          handler (value) {\n            if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n      inputColor: {\n        deep: true,\n        handler (value) {\n          this.setColor(value)\n        },\n      },\n      currentColor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputColor)) return\n\n          this.$emit('update:color', value?.slice())\n        },\n      },\n      lineCap (value) {\n        this.setLineCap(value)\n      },\n      currentLineCap (value) {\n        if (value === this.lineCap) return\n\n        this.$emit('update:lineCap', value)\n      },\n      lineJoin (value) {\n        this.setLineJoin(value)\n      },\n      currentLineJoin (value) {\n        if (value === this.lineJoin) return\n\n        this.$emit('update:lineJoin', value)\n      },\n      inputLineDash: {\n        deep: true,\n        handler (value) {\n          this.setLineDash(value)\n        },\n      },\n      currentLineDash: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.currentLineDash)) return\n\n          this.$emit('update:lineDash', value?.slice())\n        },\n      },\n      lineDashOffset (value) {\n        this.setLineDashOffset(value)\n      },\n      currentLineDashOffset (value) {\n        if (value === this.lineDashOffset) return\n\n        this.$emit('update:lineDashOffset', value)\n      },\n      miterLimit (value) {\n        this.setMiterLimit(value)\n      },\n      currentMiterLimit (value) {\n        if (value === this.miterLimit) return\n\n        this.$emit('update:miterLimit', value)\n      },\n      width (value) {\n        this.setWidth(value)\n      },\n      currentWidth (value) {\n        if (value === this.width) return\n\n        this.$emit('update:width', value)\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {StrokeStyle}\n       * @protected\n       */\n      createStyle () {\n        return new StrokeStyle({\n          color: this.currentColor,\n          lineCap: this.currentLineCap,\n          lineJoin: this.currentLineJoin,\n          lineDash: this.currentLineDash,\n          lineDashOffset: this.currentLineDashOffset,\n          miterLimit: this.currentMiterLimit,\n          width: this.currentWidth,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$strokeStyleContainer?.setStroke(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$strokeStyleContainer?.getStrokeVm() === this) {\n          this.$strokeStyleContainer.setStroke(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$strokeStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setColor(this.getColor())\n        this.setLineCap(this.getLineCap())\n        this.setLineJoin(this.getLineJoin())\n        this.setLineDash(this.getLineDash())\n        this.setLineDashOffset(this.getLineDashOffset())\n        this.setMiterLimit(this.getMiterLimit())\n        this.setWidth(this.getWidth())\n      },\n      getColor () {\n        return coalesce(this.$style?.getColor(), this.currentColor)\n      },\n      setColor (color) {\n        color = normalizeColor(color)\n\n        if (!isEqual(color, this.currentColor)) {\n          this.currentColor = color\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(color, this.$style.getColor())) {\n          this.$style.setColor(color)\n          this.scheduleRefresh()\n        }\n      },\n      getLineCap () {\n        return coalesce(this.$style?.getLineCap(), this.currentLineCap)\n      },\n      setLineCap (lineCap) {\n        if (lineCap !== this.currentLineCap) {\n          this.currentLineCap = lineCap\n          this.scheduleRefresh()\n        }\n        if (this.$style && lineCap !== this.$style.getLineCap()) {\n          this.$style.setLineCap(lineCap)\n          this.scheduleRefresh()\n        }\n      },\n      getLineJoin () {\n        return coalesce(this.$style?.getLineJoin(), this.currentLineJoin)\n      },\n      setLineJoin (lineJoin) {\n        if (lineJoin !== this.currentLineJoin) {\n          this.currentLineJoin = lineJoin\n        }\n        if (this.$style && lineJoin !== this.$style.getLineJoin()) {\n          this.$style.setLineJoin(lineJoin)\n          this.scheduleRefresh()\n        }\n      },\n      getLineDash () {\n        return coalesce(this.$style?.getLineDash(), this.currentLineDash)\n      },\n      setLineDash (lineDash) {\n        lineDash = lineDash?.slice()\n\n        if (!isEqual(lineDash, this.currentLineDash)) {\n          this.currentLineDash = lineDash\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(lineDash, this.$style.getLineDash())) {\n          this.$style.setLineDash(lineDash)\n          this.scheduleRefresh()\n        }\n      },\n      getLineDashOffset () {\n        return coalesce(this.$style?.getLineDashOffset(), this.currentLineDashOffset)\n      },\n      setLineDashOffset (lineDashOffset) {\n        if (lineDashOffset !== this.currentLineDashOffset) {\n          this.currentLineDashOffset = lineDashOffset\n          this.scheduleRefresh()\n        }\n        if (this.$style && lineDashOffset !== this.$style.getLineDashOffset()) {\n          this.$style.setLineDashOffset(lineDashOffset)\n          this.scheduleRefresh()\n        }\n      },\n      getMiterLimit () {\n        return coalesce(this.$style?.getMiterLimit(), this.currentMiterLimit)\n      },\n      setMiterLimit (miterLimit) {\n        if (miterLimit !== this.currentMiterLimit) {\n          this.currentMiterLimit = miterLimit\n          this.scheduleRefresh()\n        }\n        if (this.$style && miterLimit !== this.$style.getMiterLimit()) {\n          this.$style.setMiterLimit(miterLimit)\n          this.scheduleRefresh()\n        }\n      },\n      getWidth () {\n        return coalesce(this.$style?.getWidth(), this.currentWidth)\n      },\n      setWidth (width) {\n        if (width !== this.currentWidth) {\n          this.currentWidth = width\n          this.scheduleRefresh()\n        }\n        if (this.$style && width !== this.$style.getWidth()) {\n          this.$style.setWidth(width)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $strokeStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.strokeStyleContainer,\n      },\n    })\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { Circle as CircleStyle } from 'ol/style'\n  import { regShapeStyle } from '../../mixins'\n  import { coalesce, noop } from '../../utils'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  export default {\n    name: 'VlStyleCircle',\n    components: {\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      regShapeStyle,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      radius: {\n        ...regShapeStyle.props.radius,\n        default: 5,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    data () {\n      return {\n        currentRadius: this.radius,\n      }\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setRadius(this.getRadius())\n      },\n      currentRadius (value) {\n        if (value === this.radius) return\n\n        this.$emit('update:radius', value)\n      },\n    },\n    methods: {\n      /**\n       * @return {CircleStyle}\n       * @protected\n       */\n      createStyle () {\n        return new CircleStyle({\n          // ol/style/Image\n          displacement: this.inputDisplacement,\n          // ol/style/RegularShape\n          radius: this.currentRadius,\n          fill: this.$fill,\n          stroke: this.$stroke,\n        })\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::regShapeStyle.methods.syncNonObservable()\n\n        this.setRadius(this.getRadius())\n      },\n      getRadius () {\n        return coalesce(this.$style?.getRadius(), this.currentRadius)\n      },\n      setRadius (radius) {\n        if (radius !== this.currentRadius) {\n          this.currentRadius = radius\n          this.scheduleRefresh()\n        }\n        if (this.$style && radius !== this.$style.getRadius()) {\n          this.$style.setRadius(radius)\n          this.scheduleRefresh()\n        }\n      },\n      /**\n       * @param {number} value\n       * @protected\n       */\n      radiusChanged (value) {\n        this.setRadius(value)\n      },\n      pointsChanged: noop,\n      radius1Changed: noop,\n      radius2Changed: noop,\n      angleChanged: noop,\n    },\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot>\n      <FillStyle :id=\"'vl-' + currentId + '-default-fill-style'\" />\n      <StrokeStyle :id=\"'vl-' + currentId + '-default-stroke-style'\" />\n    </slot>\n  </i>\n</template>\n\n<script>\n  import { Circle as CircleStyle } from 'ol/style'\n  import { regShapeStyle } from '../../mixins'\n  import { coalesce, noop } from '../../utils'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  export default {\n    name: 'VlStyleCircle',\n    components: {\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      regShapeStyle,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      radius: {\n        ...regShapeStyle.props.radius,\n        default: 5,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    data () {\n      return {\n        currentRadius: this.radius,\n      }\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setRadius(this.getRadius())\n      },\n      currentRadius (value) {\n        if (value === this.radius) return\n\n        this.$emit('update:radius', value)\n      },\n    },\n    methods: {\n      /**\n       * @return {CircleStyle}\n       * @protected\n       */\n      createStyle () {\n        return new CircleStyle({\n          // ol/style/Image\n          displacement: this.inputDisplacement,\n          // ol/style/RegularShape\n          radius: this.currentRadius,\n          fill: this.$fill,\n          stroke: this.$stroke,\n        })\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::regShapeStyle.methods.syncNonObservable()\n\n        this.setRadius(this.getRadius())\n      },\n      getRadius () {\n        return coalesce(this.$style?.getRadius(), this.currentRadius)\n      },\n      setRadius (radius) {\n        if (radius !== this.currentRadius) {\n          this.currentRadius = radius\n          this.scheduleRefresh()\n        }\n        if (this.$style && radius !== this.$style.getRadius()) {\n          this.$style.setRadius(radius)\n          this.scheduleRefresh()\n        }\n      },\n      /**\n       * @param {number} value\n       * @protected\n       */\n      radiusChanged (value) {\n        this.setRadius(value)\n      },\n      pointsChanged: noop,\n      radius1Changed: noop,\n      radius2Changed: noop,\n      angleChanged: noop,\n    },\n  }\n</script>\n","\n  import { Icon as IconStyle } from 'ol/style'\n  import IconAnchorUnits from 'ol/style/IconAnchorUnits'\n  import IconOrigin from 'ol/style/IconOrigin'\n  import { imageStyle, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { assert, coalesce, isEmpty, isEqual, round } from '../../utils'\n\n  export default {\n    name: 'VlStyleIcon',\n    mixins: [\n      imageStyle,\n    ],\n    props: {\n      src: String,\n      size: {\n        type: Array,\n        validator: val => val.length === 2,\n      },\n      img: Image,\n      imgSize: {\n        type: Array,\n        validator: val => val.length === 2,\n      },\n      anchor: {\n        type: Array,\n        default: () => [0.5, 0.5],\n        validator: val => val.length === 2,\n      },\n      anchorOrigin: {\n        type: String,\n        default: IconOrigin.TOP_LEFT, // bottom-left, bottom-right, top-left or top-right\n      },\n      anchorXUnits: {\n        type: String,\n        default: IconAnchorUnits.FRACTION, // pixels, fraction\n      },\n      anchorYUnits: {\n        type: String,\n        default: IconAnchorUnits.FRACTION, // pixels, fraction\n      },\n      color: [Array, String],\n      crossOrigin: String,\n      offset: {\n        type: Array,\n        default: () => [0, 0],\n        validator: val => val.length === 2,\n      },\n      offsetOrigin: {\n        type: String,\n        default: IconOrigin.TOP_LEFT, // bottom-left, bottom-right, top-left or top-right\n      },\n    },\n    data () {\n      return {\n        currentAnchor: this.anchor?.slice(),\n      }\n    },\n    computed: {\n      inputSize () {\n        return this.size?.slice()\n      },\n      inputImgSize () {\n        return this.imgSize?.slice()\n      },\n      inputAnchor () {\n        return this.anchor?.slice()\n      },\n      inputColor () {\n        return this.color ? normalizeColor(this.color) : undefined\n      },\n      inputOffset () {\n        return this.offset?.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setAnchor(this.getAnchor())\n      },\n      inputAnchor: {\n        deep: true,\n        handler (value) {\n          this.setAnchor(value)\n        },\n      },\n      currentAnchor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputAnchor)) return\n\n          this.$emit('update:anchor', value?.slice())\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'src',\n        'inputSize',\n        'img',\n        'inputImgSize',\n        'anchorOrigin',\n        'anchorXUnits',\n        'anchorYUnits',\n        'anchorYUnits',\n        'inputColor',\n        'crossOrigin',\n        'inputOffset',\n        'offsetOrigin',\n      ], [\n        'inputSize',\n        'inputImgSize',\n        'inputColor',\n        'inputOffset',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Icon}\n       * @protected\n       */\n      createStyle () {\n        assert(\n          (this.src && !this.img) || (!this.src && this.img),\n          \"vl-style-icon one of 'image' or 'src' prop must be provided.'\",\n        )\n        assert(\n          !this.img || (this.img && !isEmpty(this.imgSize)),\n          \"vl-style-icon 'imgSize' must be set when image is provided.\",\n        )\n\n        return new IconStyle({\n          // ol/style/Image\n          opacity: this.currentOpacity,\n          scale: this.currentScale,\n          rotateWithView: this.currentRotateWithView,\n          rotation: this.currentRotation,\n          displacement: this.inputDisplacement,\n          // ol/style/Icon\n          anchor: this.currentAnchor,\n          anchorOrigin: this.anchorOrigin,\n          anchorXUnits: this.anchorXUnits,\n          anchorYUnits: this.anchorYUnits,\n          color: this.inputColor,\n          crossOrigin: this.crossOrigin,\n          offset: this.inputOffset,\n          offsetOrigin: this.offsetOrigin,\n          size: this.inputSize,\n          src: this.src,\n          img: this.img,\n          imgSize: this.inputImgSize,\n        })\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::imageStyle.methods.syncNonObservable()\n\n        this.setAnchor(this.getAnchor())\n      },\n      getAnchor () {\n        const anchor = this.$style?.getAnchor()?.slice()\n        if (!anchor) return this.currentAnchor\n\n        return this.transformAnchor(anchor)\n      },\n      /**\n       * @param {number[]} anchor\n       * @returns {number[]}\n       * @protected\n       */\n      transformAnchor (anchor) {\n        const size = this.getSize()\n        if (!size) return\n\n        if (this.anchorXUnits === IconAnchorUnits.FRACTION) {\n          anchor[0] /= size[0]\n        }\n        if (this.anchorYUnits === IconAnchorUnits.FRACTION) {\n          anchor[1] /= size[1]\n        }\n        if ([IconOrigin.TOP_RIGHT, IconOrigin.BOTTOM_RIGHT].includes(this.anchorOrigin)) {\n          anchor[0] = 1 - anchor[0]\n        }\n        if ([IconOrigin.BOTTOM_LEFT, IconOrigin.BOTTOM_RIGHT].includes(this.anchorOrigin)) {\n          anchor[1] = 1 - anchor[1]\n        }\n        anchor[0] = round(anchor[0], 3)\n        anchor[1] = round(anchor[1], 3)\n\n        return anchor\n      },\n      setAnchor (anchor) {\n        anchor = anchor?.slice()\n\n        if (!isEqual(anchor, this.currentAnchor)) {\n          this.currentAnchor = anchor\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(anchor, this.transformAnchor(this.$style.getAnchor()))) {\n          this.$style.setAnchor(anchor)\n          this.scheduleRefresh()\n        }\n      },\n      getColor () {\n        return coalesce(this.$style?.getColor(), this.inputColor)\n      },\n      getImage (pixelRatio) {\n        return this.$style?.getImage(pixelRatio)\n      },\n      getPixelRatio (pixelRatio) {\n        return this.$style?.getPixelRatio(pixelRatio)\n      },\n      getOrigin () {\n        return this.$style?.getOrigin()\n      },\n      getSize () {\n        return coalesce(this.$style?.getSize(), this.inputSize)\n      },\n      getSrc () {\n        return coalesce(this.$style?.getSrc(), this.src)\n      },\n      async load () {\n        (await this.resolveStyle()).load()\n      },\n    },\n  }\n","<script>\n  import { Icon as IconStyle } from 'ol/style'\n  import IconAnchorUnits from 'ol/style/IconAnchorUnits'\n  import IconOrigin from 'ol/style/IconOrigin'\n  import { imageStyle, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { assert, coalesce, isEmpty, isEqual, round } from '../../utils'\n\n  export default {\n    name: 'VlStyleIcon',\n    mixins: [\n      imageStyle,\n    ],\n    props: {\n      src: String,\n      size: {\n        type: Array,\n        validator: val => val.length === 2,\n      },\n      img: Image,\n      imgSize: {\n        type: Array,\n        validator: val => val.length === 2,\n      },\n      anchor: {\n        type: Array,\n        default: () => [0.5, 0.5],\n        validator: val => val.length === 2,\n      },\n      anchorOrigin: {\n        type: String,\n        default: IconOrigin.TOP_LEFT, // bottom-left, bottom-right, top-left or top-right\n      },\n      anchorXUnits: {\n        type: String,\n        default: IconAnchorUnits.FRACTION, // pixels, fraction\n      },\n      anchorYUnits: {\n        type: String,\n        default: IconAnchorUnits.FRACTION, // pixels, fraction\n      },\n      color: [Array, String],\n      crossOrigin: String,\n      offset: {\n        type: Array,\n        default: () => [0, 0],\n        validator: val => val.length === 2,\n      },\n      offsetOrigin: {\n        type: String,\n        default: IconOrigin.TOP_LEFT, // bottom-left, bottom-right, top-left or top-right\n      },\n    },\n    data () {\n      return {\n        currentAnchor: this.anchor?.slice(),\n      }\n    },\n    computed: {\n      inputSize () {\n        return this.size?.slice()\n      },\n      inputImgSize () {\n        return this.imgSize?.slice()\n      },\n      inputAnchor () {\n        return this.anchor?.slice()\n      },\n      inputColor () {\n        return this.color ? normalizeColor(this.color) : undefined\n      },\n      inputOffset () {\n        return this.offset?.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setAnchor(this.getAnchor())\n      },\n      inputAnchor: {\n        deep: true,\n        handler (value) {\n          this.setAnchor(value)\n        },\n      },\n      currentAnchor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputAnchor)) return\n\n          this.$emit('update:anchor', value?.slice())\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'src',\n        'inputSize',\n        'img',\n        'inputImgSize',\n        'anchorOrigin',\n        'anchorXUnits',\n        'anchorYUnits',\n        'anchorYUnits',\n        'inputColor',\n        'crossOrigin',\n        'inputOffset',\n        'offsetOrigin',\n      ], [\n        'inputSize',\n        'inputImgSize',\n        'inputColor',\n        'inputOffset',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Icon}\n       * @protected\n       */\n      createStyle () {\n        assert(\n          (this.src && !this.img) || (!this.src && this.img),\n          \"vl-style-icon one of 'image' or 'src' prop must be provided.'\",\n        )\n        assert(\n          !this.img || (this.img && !isEmpty(this.imgSize)),\n          \"vl-style-icon 'imgSize' must be set when image is provided.\",\n        )\n\n        return new IconStyle({\n          // ol/style/Image\n          opacity: this.currentOpacity,\n          scale: this.currentScale,\n          rotateWithView: this.currentRotateWithView,\n          rotation: this.currentRotation,\n          displacement: this.inputDisplacement,\n          // ol/style/Icon\n          anchor: this.currentAnchor,\n          anchorOrigin: this.anchorOrigin,\n          anchorXUnits: this.anchorXUnits,\n          anchorYUnits: this.anchorYUnits,\n          color: this.inputColor,\n          crossOrigin: this.crossOrigin,\n          offset: this.inputOffset,\n          offsetOrigin: this.offsetOrigin,\n          size: this.inputSize,\n          src: this.src,\n          img: this.img,\n          imgSize: this.inputImgSize,\n        })\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::imageStyle.methods.syncNonObservable()\n\n        this.setAnchor(this.getAnchor())\n      },\n      getAnchor () {\n        const anchor = this.$style?.getAnchor()?.slice()\n        if (!anchor) return this.currentAnchor\n\n        return this.transformAnchor(anchor)\n      },\n      /**\n       * @param {number[]} anchor\n       * @returns {number[]}\n       * @protected\n       */\n      transformAnchor (anchor) {\n        const size = this.getSize()\n        if (!size) return\n\n        if (this.anchorXUnits === IconAnchorUnits.FRACTION) {\n          anchor[0] /= size[0]\n        }\n        if (this.anchorYUnits === IconAnchorUnits.FRACTION) {\n          anchor[1] /= size[1]\n        }\n        if ([IconOrigin.TOP_RIGHT, IconOrigin.BOTTOM_RIGHT].includes(this.anchorOrigin)) {\n          anchor[0] = 1 - anchor[0]\n        }\n        if ([IconOrigin.BOTTOM_LEFT, IconOrigin.BOTTOM_RIGHT].includes(this.anchorOrigin)) {\n          anchor[1] = 1 - anchor[1]\n        }\n        anchor[0] = round(anchor[0], 3)\n        anchor[1] = round(anchor[1], 3)\n\n        return anchor\n      },\n      setAnchor (anchor) {\n        anchor = anchor?.slice()\n\n        if (!isEqual(anchor, this.currentAnchor)) {\n          this.currentAnchor = anchor\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(anchor, this.transformAnchor(this.$style.getAnchor()))) {\n          this.$style.setAnchor(anchor)\n          this.scheduleRefresh()\n        }\n      },\n      getColor () {\n        return coalesce(this.$style?.getColor(), this.inputColor)\n      },\n      getImage (pixelRatio) {\n        return this.$style?.getImage(pixelRatio)\n      },\n      getPixelRatio (pixelRatio) {\n        return this.$style?.getPixelRatio(pixelRatio)\n      },\n      getOrigin () {\n        return this.$style?.getOrigin()\n      },\n      getSize () {\n        return coalesce(this.$style?.getSize(), this.inputSize)\n      },\n      getSrc () {\n        return coalesce(this.$style?.getSrc(), this.src)\n      },\n      async load () {\n        (await this.resolveStyle()).load()\n      },\n    },\n  }\n</script>\n","\n  import { RegularShape as RegularShapeStyle } from 'ol/style'\n  import { regShapeStyle } from '../../mixins'\n\n  export default {\n    name: 'VlStyleRegShape',\n    mixins: [\n      regShapeStyle,\n    ],\n    methods: {\n      /**\n       * @return {RegularShapeStyle}\n       * @protected\n       */\n      createStyle () {\n        return new RegularShapeStyle({\n          // ol/style/Image\n          rotation: this.currentRotation,\n          rotateWithView: this.currentRotateWithView,\n          displacement: this.inputDisplacement,\n          // ol/style/RegularShape\n          points: this.points,\n          radius: this.radius,\n          radius1: this.radius1,\n          radius2: this.radius2,\n          angle: this.angle,\n          fill: this.$fill,\n          stroke: this.$stroke,\n        })\n      },\n    },\n  }\n","<script>\n  import { RegularShape as RegularShapeStyle } from 'ol/style'\n  import { regShapeStyle } from '../../mixins'\n\n  export default {\n    name: 'VlStyleRegShape',\n    mixins: [\n      regShapeStyle,\n    ],\n    methods: {\n      /**\n       * @return {RegularShapeStyle}\n       * @protected\n       */\n      createStyle () {\n        return new RegularShapeStyle({\n          // ol/style/Image\n          rotation: this.currentRotation,\n          rotateWithView: this.currentRotateWithView,\n          displacement: this.inputDisplacement,\n          // ol/style/RegularShape\n          points: this.points,\n          radius: this.radius,\n          radius1: this.radius1,\n          radius2: this.radius2,\n          angle: this.angle,\n          fill: this.$fill,\n          stroke: this.$stroke,\n        })\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { Style } from 'ol/style'\n  import {\n    fillStyleContainer,\n    geometryContainer,\n    imageStyleContainer,\n    projTransforms,\n    strokeStyleContainer,\n    style,\n    textStyleContainer,\n    waitForMap,\n  } from '../../mixins'\n  import { dumpFillStyle, dumpImageStyle, dumpStrokeStyle, dumpTextStyle, EPSG_3857 } from '../../ol-ext'\n  import {\n    clonePlainObject,\n    coalesce,\n    isEqual,\n    isObjectLike,\n    lowerFirst,\n    makeWatchers,\n    mergeDescriptors,\n    upperFirst,\n  } from '../../utils'\n  import CircleStyle from './circle.vue'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  /**\n   * Style box component.\n   * Wrapper for Style class. Can be inserted into component with setStyle/getStyle methods (vl-layer-vector, vl-feature & etc.)\n   * and acts as a box for inner style components (vl-style-fill, vl-style-stroke, icon ...)\n   */\n  export default {\n    name: 'VlStyle',\n    components: {\n      CircleStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      projTransforms,\n      fillStyleContainer,\n      strokeStyleContainer,\n      textStyleContainer,\n      imageStyleContainer,\n      geometryContainer,\n      style,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * @type {number}\n       */\n      zIndex: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {function}\n       */\n      renderer: Function,\n      /**\n       * @deprecated Use v-if directive.\n       * @todo remove in v0.13.x\n       */\n      condition: [Boolean, Function],\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentZIndex: this.zIndex,\n        currentRenderer: this.renderer,\n      }\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n      image () {\n        if (!(this.rev && this.$image)) return\n\n        return dumpImageStyle(this.$image)\n      },\n      geometryDataProj () {\n        if (!(this.rev && this.$geometry)) return\n\n        return this.writeGeometryInDataProj(this.$geometry)\n      },\n      geometryViewProj () {\n        if (!(this.rev && this.$geometry)) return\n\n        return this.writeGeometryInViewProj(this.$geometry)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setZIndex(this.getZIndex())\n        this.setRenderer(this.getRenderer())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'zIndex',\n        'renderer',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return function (value) {\n          this[setter](value)\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentZIndex',\n        'currentRenderer',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return function (value) {\n          if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n        'text',\n        'image',\n        'geometryDataProj',\n      ], prop => {\n        prop = prop.replace(/(DataProj|ViewProj)$/i, '')\n\n        return {\n          deep: true,\n          handler (value, prev) {\n            if (isEqual(value, prev)) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.condition) {\n          this.$logger.warn(\"'condition' is deprecated. Use v-if directive instead.\")\n        }\n      }\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.condition) {\n          this.$logger.warn(\"'condition' is deprecated. Use v-if directive instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::style.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/style/Style~Style}\n       * @protected\n       */\n      createStyle () {\n        return new Style({\n          zIndex: this.currentZIndex,\n          renderer: this.currentRenderer,\n          fill: this.$fill,\n          stroke: this.$stroke,\n          image: this.$image,\n          text: this.$text,\n          geometry: this.$geometry,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$styleContainer?.addStyle(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.$styleContainer?.removeStyle(this)\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$styleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::style.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n          this::imageStyleContainer.methods.getServices(),\n          this::geometryContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setZIndex(this.getZIndex())\n        this.setRenderer(this.getRenderer())\n      },\n      getFillStyleTarget () {\n        return this.$style\n      },\n      getStrokeStyleTarget () {\n        return this.$style\n      },\n      getTextStyleTarget () {\n        return this.$style\n      },\n      getImageStyleTarget () {\n        return this.$style\n      },\n      getGeometryTarget () {\n        return this.$style\n      },\n      getZIndex () {\n        return coalesce(this.$style?.getZIndex(), this.currentZIndex)\n      },\n      setZIndex (zIndex) {\n        if (zIndex !== this.currentZIndex) {\n          this.currentZIndex = zIndex\n          this.scheduleRefresh()\n        }\n        if (this.$style && zIndex !== this.$style.getZIndex()) {\n          this.$style.setZIndex(zIndex)\n          this.scheduleRefresh()\n        }\n      },\n      getRenderer () {\n        return coalesce(this.$style?.getRenderer(), this.currentRenderer)\n      },\n      setRenderer (renderer) {\n        if (renderer !== this.currentRenderer) {\n          this.currentRenderer = renderer\n          this.scheduleRefresh()\n        }\n        if (this.$style && renderer !== this.$style.getRenderer()) {\n          this.$style.setRenderer(renderer)\n          this.scheduleRefresh()\n        }\n      },\n      // todo add support for geometry function\n      getGeometryFunction () {\n        return this.$style?.getGeometryFunction()\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n    })\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot>\n      <CircleStyle :id=\"'vl-' + currentId + '-default-circle-style'\" />\n      <FillStyle :id=\"'vl-' + currentId + '-default-fill-style'\" />\n      <StrokeStyle :id=\"'vl-' + currentId + '-default-stroke-style'\" />\n    </slot>\n  </i>\n</template>\n\n<script>\n  import { Style } from 'ol/style'\n  import {\n    fillStyleContainer,\n    geometryContainer,\n    imageStyleContainer,\n    projTransforms,\n    strokeStyleContainer,\n    style,\n    textStyleContainer,\n    waitForMap,\n  } from '../../mixins'\n  import { dumpFillStyle, dumpImageStyle, dumpStrokeStyle, dumpTextStyle, EPSG_3857 } from '../../ol-ext'\n  import {\n    clonePlainObject,\n    coalesce,\n    isEqual,\n    isObjectLike,\n    lowerFirst,\n    makeWatchers,\n    mergeDescriptors,\n    upperFirst,\n  } from '../../utils'\n  import CircleStyle from './circle.vue'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  /**\n   * Style box component.\n   * Wrapper for Style class. Can be inserted into component with setStyle/getStyle methods (vl-layer-vector, vl-feature & etc.)\n   * and acts as a box for inner style components (vl-style-fill, vl-style-stroke, icon ...)\n   */\n  export default {\n    name: 'VlStyle',\n    components: {\n      CircleStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      projTransforms,\n      fillStyleContainer,\n      strokeStyleContainer,\n      textStyleContainer,\n      imageStyleContainer,\n      geometryContainer,\n      style,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * @type {number}\n       */\n      zIndex: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {function}\n       */\n      renderer: Function,\n      /**\n       * @deprecated Use v-if directive.\n       * @todo remove in v0.13.x\n       */\n      condition: [Boolean, Function],\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentZIndex: this.zIndex,\n        currentRenderer: this.renderer,\n      }\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n      image () {\n        if (!(this.rev && this.$image)) return\n\n        return dumpImageStyle(this.$image)\n      },\n      geometryDataProj () {\n        if (!(this.rev && this.$geometry)) return\n\n        return this.writeGeometryInDataProj(this.$geometry)\n      },\n      geometryViewProj () {\n        if (!(this.rev && this.$geometry)) return\n\n        return this.writeGeometryInViewProj(this.$geometry)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setZIndex(this.getZIndex())\n        this.setRenderer(this.getRenderer())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'zIndex',\n        'renderer',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return function (value) {\n          this[setter](value)\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentZIndex',\n        'currentRenderer',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return function (value) {\n          if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n        'text',\n        'image',\n        'geometryDataProj',\n      ], prop => {\n        prop = prop.replace(/(DataProj|ViewProj)$/i, '')\n\n        return {\n          deep: true,\n          handler (value, prev) {\n            if (isEqual(value, prev)) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.condition) {\n          this.$logger.warn(\"'condition' is deprecated. Use v-if directive instead.\")\n        }\n      }\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.condition) {\n          this.$logger.warn(\"'condition' is deprecated. Use v-if directive instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::style.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/style/Style~Style}\n       * @protected\n       */\n      createStyle () {\n        return new Style({\n          zIndex: this.currentZIndex,\n          renderer: this.currentRenderer,\n          fill: this.$fill,\n          stroke: this.$stroke,\n          image: this.$image,\n          text: this.$text,\n          geometry: this.$geometry,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$styleContainer?.addStyle(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.$styleContainer?.removeStyle(this)\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$styleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::style.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n          this::imageStyleContainer.methods.getServices(),\n          this::geometryContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setZIndex(this.getZIndex())\n        this.setRenderer(this.getRenderer())\n      },\n      getFillStyleTarget () {\n        return this.$style\n      },\n      getStrokeStyleTarget () {\n        return this.$style\n      },\n      getTextStyleTarget () {\n        return this.$style\n      },\n      getImageStyleTarget () {\n        return this.$style\n      },\n      getGeometryTarget () {\n        return this.$style\n      },\n      getZIndex () {\n        return coalesce(this.$style?.getZIndex(), this.currentZIndex)\n      },\n      setZIndex (zIndex) {\n        if (zIndex !== this.currentZIndex) {\n          this.currentZIndex = zIndex\n          this.scheduleRefresh()\n        }\n        if (this.$style && zIndex !== this.$style.getZIndex()) {\n          this.$style.setZIndex(zIndex)\n          this.scheduleRefresh()\n        }\n      },\n      getRenderer () {\n        return coalesce(this.$style?.getRenderer(), this.currentRenderer)\n      },\n      setRenderer (renderer) {\n        if (renderer !== this.currentRenderer) {\n          this.currentRenderer = renderer\n          this.scheduleRefresh()\n        }\n        if (this.$style && renderer !== this.$style.getRenderer()) {\n          this.$style.setRenderer(renderer)\n          this.scheduleRefresh()\n        }\n      },\n      // todo add support for geometry function\n      getGeometryFunction () {\n        return this.$style?.getGeometryFunction()\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n    })\n  }\n</script>\n","\n  import { fillStyleContainer, olCmp, strokeStyleContainer, stubVNode } from '../../mixins'\n  import { dumpFillStyle, dumpStrokeStyle } from '../../ol-ext'\n  import { clonePlainObject, isEqual, isObjectLike, makeWatchers, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlStyleBackgroundAdapter',\n    mixins: [\n      stubVNode,\n      fillStyleContainer,\n      strokeStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$strokeStyle)) return\n\n        return dumpStrokeStyle(this.$strokeStyle)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n      ], prop => function (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n      }),\n    },\n    created () {\n      Object.defineProperties(this, {\n        $bgStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.bgStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n        )\n      },\n      getFillStyleTarget () {\n        return {\n          getFill: () => this.$bgStyleContainer?.getBackgroundFill(),\n          setFill: style => this.$bgStyleContainer?.setBackgroundFill(style),\n        }\n      },\n      getStrokeStyleTarget () {\n        return {\n          getStroke: () => this.$bgStyleContainer?.getBackgroundStroke(),\n          setStroke: style => this.$bgStyleContainer?.setBackgroundStroke(style),\n        }\n      },\n    },\n  }\n","<script>\n  import { fillStyleContainer, olCmp, strokeStyleContainer, stubVNode } from '../../mixins'\n  import { dumpFillStyle, dumpStrokeStyle } from '../../ol-ext'\n  import { clonePlainObject, isEqual, isObjectLike, makeWatchers, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlStyleBackgroundAdapter',\n    mixins: [\n      stubVNode,\n      fillStyleContainer,\n      strokeStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$strokeStyle)) return\n\n        return dumpStrokeStyle(this.$strokeStyle)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n      ], prop => function (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n      }),\n    },\n    created () {\n      Object.defineProperties(this, {\n        $bgStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.bgStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n        )\n      },\n      getFillStyleTarget () {\n        return {\n          getFill: () => this.$bgStyleContainer?.getBackgroundFill(),\n          setFill: style => this.$bgStyleContainer?.setBackgroundFill(style),\n        }\n      },\n      getStrokeStyleTarget () {\n        return {\n          getStroke: () => this.$bgStyleContainer?.getBackgroundStroke(),\n          setStroke: style => this.$bgStyleContainer?.setBackgroundStroke(style),\n        }\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { Text as TextStyle } from 'ol/style'\n  import { fillStyleContainer, strokeStyleContainer, style } from '../../mixins'\n  import { dumpFillStyle, dumpStrokeStyle } from '../../ol-ext'\n  import {\n    clonePlainObject,\n    coalesce,\n    isEqual,\n    isObjectLike,\n    lowerFirst,\n    makeWatchers,\n    mergeDescriptors,\n    upperFirst,\n  } from '../../utils'\n  import BackgroundStyle from './background.vue'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  export default {\n    name: 'VlStyleText',\n    components: {\n      BackgroundStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      fillStyleContainer,\n      strokeStyleContainer,\n      style,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      font: {\n        type: String,\n        default: '10px sans-serif', // css font format https://developer.mozilla.org/en-US/docs/Web/CSS/font?v=control\n      },\n      maxAngle: Number,\n      placement: String,\n      offsetX: {\n        type: Number,\n        default: 0,\n      },\n      offsetY: {\n        type: Number,\n        default: 0,\n      },\n      overflow: Boolean,\n      rotateWithView: {\n        type: Boolean,\n        default: false,\n      },\n      rotation: {\n        type: Number,\n        default: 0,\n      },\n      scale: {\n        type: Number,\n        default: 1,\n      },\n      text: String,\n      textAlign: String, // left, right, center, end, start\n      textBaseline: String, // bottom, top, middle, alphabetic, hanging, ideographic\n      padding: {\n        type: Array,\n        default: () => [0, 0, 0, 0],\n        validate: val => val.length && val.length === 4,\n      },\n    },\n    data () {\n      return {\n        currentFont: this.font,\n        currentMaxAngle: this.maxAngle,\n        currentPlacement: this.placement,\n        currentOffsetX: this.offsetX,\n        currentOffsetY: this.offsetY,\n        currentOverflow: this.overflow,\n        currentRotateWithView: this.rotateWithView,\n        currentRotation: this.rotation,\n        currentScale: this.scale,\n        currentText: this.text,\n        currentTextAlign: this.textAlign,\n        currentTextBaseline: this.textBaseline,\n        currentPadding: this.padding?.slice(),\n      }\n    },\n    computed: {\n      inputPadding () {\n        return this.padding?.slice()\n      },\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n      backgroundFill () {\n        if (!(this.rev && this.$bgFill)) return\n\n        return dumpFillStyle(this.$bgFill)\n      },\n      backgroundStroke () {\n        if (!(this.rev && this.$bgStroke)) return\n\n        return dumpStrokeStyle(this.$bgStroke)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setFont(this.getFont())\n        this.setMaxAngle(this.getMaxAngle())\n        this.setPlacement(this.getPlacement())\n        this.setOffsetX(this.getOffsetX())\n        this.setOffsetY(this.getOffsetY())\n        this.setOverflow(this.getOverflow())\n        this.setRotateWithView(this.getRotateWithView())\n        this.setRotation(this.getRotation())\n        this.setScale(this.getScale())\n        this.setText(this.getText())\n        this.setTextAlign(this.getTextAlign())\n        this.setTextBaseline(this.getTextBaseline())\n        this.setPadding(this.getPadding())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'font',\n        'maxAngle',\n        'placement',\n        'offsetX',\n        'offsetY',\n        'overflow',\n        'rotateWithView',\n        'rotation',\n        'scale',\n        'text',\n        'textAlign',\n        'textBaseline',\n        'inputPadding',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return {\n          deep: [\n            'inputPadding',\n          ].includes(inProp),\n          handler (value) {\n            this[setter](value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentFont',\n        'currentMaxAngle',\n        'currentPlacement',\n        'currentOffsetX',\n        'currentOffsetY',\n        'currentOverflow',\n        'currentRotateWithView',\n        'currentRotation',\n        'currentScale',\n        'currentText',\n        'currentTextAlign',\n        'currentTextBaseline',\n        'currentPadding',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return {\n          deep: [\n            'currentPadding',\n          ].includes(curProp),\n          handler (value) {\n            if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n        'backgroundFill',\n        'backgroundStroke',\n      ], prop => ({\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        },\n      })),\n    },\n    created () {\n      this._bgFill = undefined\n      this._bgFillVm = undefined\n      this._bgStroke = undefined\n      this._bgStrokeVm = undefined\n\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @returns {Text}\n       * @protected\n       */\n      createStyle () {\n        return new TextStyle({\n          font: this.currentFont,\n          maxAngle: this.currentMaxAngle,\n          placement: this.currentPlacement,\n          offsetX: this.currentOffsetX,\n          offsetY: this.currentOffsetY,\n          overflow: this.currentOverflow,\n          rotateWithView: this.currentRotateWithView,\n          rotation: this.currentRotation,\n          scale: this.currentScale,\n          text: this.currentText,\n          textAlign: this.currentTextAlign,\n          textBaseline: this.currentTextBaseline,\n          padding: this.currentPadding,\n          fill: this.$fill,\n          stroke: this.$stroke,\n          backgroundFill: this.$bgFill,\n          backgroundStroke: this.$bgStroke,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$textStyleContainer?.setText(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$textStyleContainer?.getTextVm() === this) {\n          await this.$textStyleContainer.setText(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$textStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::style.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n          {\n            get bgStyleContainer () { return vm },\n          },\n        )\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setFont(this.getFont())\n        this.setMaxAngle(this.getMaxAngle())\n        this.setPlacement(this.getPlacement())\n        this.setOffsetX(this.getOffsetX())\n        this.setOffsetY(this.getOffsetY())\n        this.setOverflow(this.getOverflow())\n        this.setRotateWithView(this.getRotateWithView())\n        this.setRotation(this.getRotation())\n        this.setScale(this.getScale())\n        this.setText(this.getText())\n        this.setTextAlign(this.getTextAlign())\n        this.setTextBaseline(this.getTextBaseline())\n        this.setPadding(this.getPadding())\n      },\n      getFont () {\n        return coalesce(this.$style?.getFont(), this.currentFont)\n      },\n      setFont (font) {\n        if (font !== this.currentFont) {\n          this.currentFont = font\n          this.scheduleRefresh()\n        }\n        if (this.$style && font !== this.$style.getFont()) {\n          this.$style.setFont(font)\n          this.scheduleRefresh()\n        }\n      },\n      getMaxAngle () {\n        return coalesce(this.$style?.getMaxAngle(), this.currentMaxAngle)\n      },\n      setMaxAngle (maxAngle) {\n        if (maxAngle !== this.currentMaxAngle) {\n          this.currentMaxAngle = maxAngle\n          this.scheduleRefresh()\n        }\n        if (this.$style && maxAngle !== this.$style.getMaxAngle()) {\n          this.$style.setMaxAngle(maxAngle)\n          this.scheduleRefresh()\n        }\n      },\n      getOffsetX () {\n        return coalesce(this.$style?.getOffsetX(), this.currentOffsetX)\n      },\n      setOffsetX (offsetX) {\n        if (offsetX !== this.currentOffsetX) {\n          this.currentOffsetX = offsetX\n          this.scheduleRefresh()\n        }\n        if (this.$style && offsetX !== this.$style.getOffsetX()) {\n          this.$style.setOffsetX(offsetX)\n          this.scheduleRefresh()\n        }\n      },\n      getOffsetY () {\n        return coalesce(this.$style?.getOffsetY(), this.currentOffsetY)\n      },\n      setOffsetY (offsetY) {\n        if (offsetY !== this.currentOffsetY) {\n          this.currentOffsetY = offsetY\n          this.scheduleRefresh()\n        }\n        if (this.$style && offsetY !== this.$style.getOffsetY()) {\n          this.$style.setOffsetY(offsetY)\n          this.scheduleRefresh()\n        }\n      },\n      getOverflow () {\n        return coalesce(this.$style?.getOverflow(), this.currentOverflow)\n      },\n      setOverflow (overflow) {\n        if (overflow !== this.currentOverflow) {\n          this.currentOverflow = overflow\n          this.scheduleRefresh()\n        }\n        if (this.$style && overflow !== this.$style.getOverflow()) {\n          this.$style.setOverflow(overflow)\n          this.scheduleRefresh()\n        }\n      },\n      getPadding () {\n        return coalesce(this.$style?.getPadding(), this.currentPadding)\n      },\n      setPadding (padding) {\n        padding = padding?.slice()\n\n        if (!isEqual(padding, this.currentPadding)) {\n          this.currentPadding = padding\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(padding, this.$style.getPadding())) {\n          this.$style.setPadding(padding)\n          this.scheduleRefresh()\n        }\n      },\n      getPlacement () {\n        return coalesce(this.$source?.getPlacement(), this.currentPlacement)\n      },\n      setPlacement (placement) {\n        if (placement !== this.currentPlacement) {\n          this.currentPlacement = placement\n          this.scheduleRefresh()\n        }\n        if (this.$style && placement !== this.$style.getPlacement()) {\n          this.$style.setPlacement(placement)\n          this.scheduleRefresh()\n        }\n      },\n      getRotateWithView () {\n        return coalesce(this.$style?.getRotateWithView(), this.currentRotateWithView)\n      },\n      setRotateWithView (rotateWithView) {\n        if (rotateWithView !== this.currentRotateWithView) {\n          this.currentRotateWithView = rotateWithView\n          this.scheduleRefresh()\n        }\n        if (this.$style && rotateWithView !== this.$style.getRotateWithView()) {\n          this.$style.setRotateWithView(rotateWithView)\n          this.scheduleRefresh()\n        }\n      },\n      getRotation () {\n        return coalesce(this.$style?.getRotation(), this.currentRotation)\n      },\n      setRotation (rotation) {\n        if (rotation !== this.currentRotation) {\n          this.currentRotation = rotation\n          this.scheduleRefresh()\n        }\n        if (this.$style && rotation !== this.$style.getRotation()) {\n          this.$style.setRotation(rotation)\n          this.scheduleRefresh()\n        }\n      },\n      getScale () {\n        return coalesce(this.$style?.getScale(), this.currentScale)\n      },\n      setScale (scale) {\n        if (scale !== this.currentScale) {\n          this.currentScale = scale\n          this.scheduleRefresh()\n        }\n        if (this.$style && scale !== this.$style.getScale()) {\n          this.$style.setScale(scale)\n          this.scheduleRefresh()\n        }\n      },\n      getText () {\n        return coalesce(this.$style?.getText(), this.currentText)\n      },\n      setText (text) {\n        if (text !== this.currentText) {\n          this.currentText = text\n          this.scheduleRefresh()\n        }\n        if (this.$style && text !== this.$style.getText()) {\n          this.$style.setText(text)\n          this.scheduleRefresh()\n        }\n      },\n      getTextAlign () {\n        return coalesce(this.$style?.getTextAlign(), this.currentTextAlign)\n      },\n      setTextAlign (textAlign) {\n        if (textAlign !== this.currentTextAlign) {\n          this.currentTextAlign = textAlign\n          this.scheduleRefresh()\n        }\n        if (this.$style && textAlign !== this.$style.getTextAlign()) {\n          this.$style.setTextAlign(textAlign)\n          this.scheduleRefresh()\n        }\n      },\n      getTextBaseline () {\n        return coalesce(this.$style?.getTextBaseline(), this.currentTextBaseline)\n      },\n      setTextBaseline (textBaseline) {\n        if (textBaseline !== this.currentTextBaseline) {\n          this.currentTextBaseline = textBaseline\n          this.scheduleRefresh()\n        }\n        if (this.$style && textBaseline !== this.$style.getTextBaseline()) {\n          this.$style.setTextBaseline(textBaseline)\n          this.scheduleRefresh()\n        }\n      },\n      getFillStyleTarget () {\n        return this.$style\n      },\n      getStrokeStyleTarget () {\n        return this.$style\n      },\n      getBackgroundFill () {\n        return this._bgFill\n      },\n      setBackgroundFill (fill) {\n        fill = fill?.$fill || fill\n        fill || (fill = undefined)\n\n        if (fill !== this._bgFill) {\n          this._bgFill = fill\n          this._bgFillVm = fill?.vm && fill.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$style && fill !== this.$style.getBackgroundFill()) {\n          this.$style.setBackgroundFill(fill)\n          this.scheduleRefresh()\n        }\n      },\n      getBackgroundStroke () {\n        return this._bgStroke\n      },\n      setBackgroundStroke (stroke) {\n        stroke = stroke?.$stroke || stroke\n        stroke || (stroke = undefined)\n\n        if (stroke !== this._bgStroke) {\n          this._bgStroke = stroke\n          this._bgStrokeVm = stroke?.vm && stroke.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$style && stroke !== this.$style.getBackgroundStroke()) {\n          this.$style.setBackgroundStroke(stroke)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $textStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.textStyleContainer,\n      },\n      $bgFill: {\n        enumerable: true,\n        get: this.getBackgroundFill,\n      },\n      $bgFillVm: {\n        enumerable: true,\n        get: () => this._bgFillVm,\n      },\n      $bgStroke: {\n        enumerable: true,\n        get: this.getBackgroundStroke,\n      },\n      $bgStrokeVm: {\n        enumerable: true,\n        get: () => this._bgStrokeVm,\n      },\n    })\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot>\n      <FillStyle\n        :id=\"'vl-' + currentId + '-default-fill-style'\"\n        color=\"#333\" />\n      <StrokeStyle\n        :id=\"'vl-' + currentId + '-default-stroke-style'\"\n        color=\"#eee\" />\n    </slot>\n    <BackgroundStyle :id=\"'vl-' + currentId + '-background-style'\">\n      <slot name=\"background\" />\n    </BackgroundStyle>\n  </i>\n</template>\n\n<script>\n  import { Text as TextStyle } from 'ol/style'\n  import { fillStyleContainer, strokeStyleContainer, style } from '../../mixins'\n  import { dumpFillStyle, dumpStrokeStyle } from '../../ol-ext'\n  import {\n    clonePlainObject,\n    coalesce,\n    isEqual,\n    isObjectLike,\n    lowerFirst,\n    makeWatchers,\n    mergeDescriptors,\n    upperFirst,\n  } from '../../utils'\n  import BackgroundStyle from './background.vue'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  export default {\n    name: 'VlStyleText',\n    components: {\n      BackgroundStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      fillStyleContainer,\n      strokeStyleContainer,\n      style,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      font: {\n        type: String,\n        default: '10px sans-serif', // css font format https://developer.mozilla.org/en-US/docs/Web/CSS/font?v=control\n      },\n      maxAngle: Number,\n      placement: String,\n      offsetX: {\n        type: Number,\n        default: 0,\n      },\n      offsetY: {\n        type: Number,\n        default: 0,\n      },\n      overflow: Boolean,\n      rotateWithView: {\n        type: Boolean,\n        default: false,\n      },\n      rotation: {\n        type: Number,\n        default: 0,\n      },\n      scale: {\n        type: Number,\n        default: 1,\n      },\n      text: String,\n      textAlign: String, // left, right, center, end, start\n      textBaseline: String, // bottom, top, middle, alphabetic, hanging, ideographic\n      padding: {\n        type: Array,\n        default: () => [0, 0, 0, 0],\n        validate: val => val.length && val.length === 4,\n      },\n    },\n    data () {\n      return {\n        currentFont: this.font,\n        currentMaxAngle: this.maxAngle,\n        currentPlacement: this.placement,\n        currentOffsetX: this.offsetX,\n        currentOffsetY: this.offsetY,\n        currentOverflow: this.overflow,\n        currentRotateWithView: this.rotateWithView,\n        currentRotation: this.rotation,\n        currentScale: this.scale,\n        currentText: this.text,\n        currentTextAlign: this.textAlign,\n        currentTextBaseline: this.textBaseline,\n        currentPadding: this.padding?.slice(),\n      }\n    },\n    computed: {\n      inputPadding () {\n        return this.padding?.slice()\n      },\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n      backgroundFill () {\n        if (!(this.rev && this.$bgFill)) return\n\n        return dumpFillStyle(this.$bgFill)\n      },\n      backgroundStroke () {\n        if (!(this.rev && this.$bgStroke)) return\n\n        return dumpStrokeStyle(this.$bgStroke)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setFont(this.getFont())\n        this.setMaxAngle(this.getMaxAngle())\n        this.setPlacement(this.getPlacement())\n        this.setOffsetX(this.getOffsetX())\n        this.setOffsetY(this.getOffsetY())\n        this.setOverflow(this.getOverflow())\n        this.setRotateWithView(this.getRotateWithView())\n        this.setRotation(this.getRotation())\n        this.setScale(this.getScale())\n        this.setText(this.getText())\n        this.setTextAlign(this.getTextAlign())\n        this.setTextBaseline(this.getTextBaseline())\n        this.setPadding(this.getPadding())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'font',\n        'maxAngle',\n        'placement',\n        'offsetX',\n        'offsetY',\n        'overflow',\n        'rotateWithView',\n        'rotation',\n        'scale',\n        'text',\n        'textAlign',\n        'textBaseline',\n        'inputPadding',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return {\n          deep: [\n            'inputPadding',\n          ].includes(inProp),\n          handler (value) {\n            this[setter](value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentFont',\n        'currentMaxAngle',\n        'currentPlacement',\n        'currentOffsetX',\n        'currentOffsetY',\n        'currentOverflow',\n        'currentRotateWithView',\n        'currentRotation',\n        'currentScale',\n        'currentText',\n        'currentTextAlign',\n        'currentTextBaseline',\n        'currentPadding',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return {\n          deep: [\n            'currentPadding',\n          ].includes(curProp),\n          handler (value) {\n            if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n        'backgroundFill',\n        'backgroundStroke',\n      ], prop => ({\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        },\n      })),\n    },\n    created () {\n      this._bgFill = undefined\n      this._bgFillVm = undefined\n      this._bgStroke = undefined\n      this._bgStrokeVm = undefined\n\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @returns {Text}\n       * @protected\n       */\n      createStyle () {\n        return new TextStyle({\n          font: this.currentFont,\n          maxAngle: this.currentMaxAngle,\n          placement: this.currentPlacement,\n          offsetX: this.currentOffsetX,\n          offsetY: this.currentOffsetY,\n          overflow: this.currentOverflow,\n          rotateWithView: this.currentRotateWithView,\n          rotation: this.currentRotation,\n          scale: this.currentScale,\n          text: this.currentText,\n          textAlign: this.currentTextAlign,\n          textBaseline: this.currentTextBaseline,\n          padding: this.currentPadding,\n          fill: this.$fill,\n          stroke: this.$stroke,\n          backgroundFill: this.$bgFill,\n          backgroundStroke: this.$bgStroke,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$textStyleContainer?.setText(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$textStyleContainer?.getTextVm() === this) {\n          await this.$textStyleContainer.setText(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$textStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::style.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n          {\n            get bgStyleContainer () { return vm },\n          },\n        )\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setFont(this.getFont())\n        this.setMaxAngle(this.getMaxAngle())\n        this.setPlacement(this.getPlacement())\n        this.setOffsetX(this.getOffsetX())\n        this.setOffsetY(this.getOffsetY())\n        this.setOverflow(this.getOverflow())\n        this.setRotateWithView(this.getRotateWithView())\n        this.setRotation(this.getRotation())\n        this.setScale(this.getScale())\n        this.setText(this.getText())\n        this.setTextAlign(this.getTextAlign())\n        this.setTextBaseline(this.getTextBaseline())\n        this.setPadding(this.getPadding())\n      },\n      getFont () {\n        return coalesce(this.$style?.getFont(), this.currentFont)\n      },\n      setFont (font) {\n        if (font !== this.currentFont) {\n          this.currentFont = font\n          this.scheduleRefresh()\n        }\n        if (this.$style && font !== this.$style.getFont()) {\n          this.$style.setFont(font)\n          this.scheduleRefresh()\n        }\n      },\n      getMaxAngle () {\n        return coalesce(this.$style?.getMaxAngle(), this.currentMaxAngle)\n      },\n      setMaxAngle (maxAngle) {\n        if (maxAngle !== this.currentMaxAngle) {\n          this.currentMaxAngle = maxAngle\n          this.scheduleRefresh()\n        }\n        if (this.$style && maxAngle !== this.$style.getMaxAngle()) {\n          this.$style.setMaxAngle(maxAngle)\n          this.scheduleRefresh()\n        }\n      },\n      getOffsetX () {\n        return coalesce(this.$style?.getOffsetX(), this.currentOffsetX)\n      },\n      setOffsetX (offsetX) {\n        if (offsetX !== this.currentOffsetX) {\n          this.currentOffsetX = offsetX\n          this.scheduleRefresh()\n        }\n        if (this.$style && offsetX !== this.$style.getOffsetX()) {\n          this.$style.setOffsetX(offsetX)\n          this.scheduleRefresh()\n        }\n      },\n      getOffsetY () {\n        return coalesce(this.$style?.getOffsetY(), this.currentOffsetY)\n      },\n      setOffsetY (offsetY) {\n        if (offsetY !== this.currentOffsetY) {\n          this.currentOffsetY = offsetY\n          this.scheduleRefresh()\n        }\n        if (this.$style && offsetY !== this.$style.getOffsetY()) {\n          this.$style.setOffsetY(offsetY)\n          this.scheduleRefresh()\n        }\n      },\n      getOverflow () {\n        return coalesce(this.$style?.getOverflow(), this.currentOverflow)\n      },\n      setOverflow (overflow) {\n        if (overflow !== this.currentOverflow) {\n          this.currentOverflow = overflow\n          this.scheduleRefresh()\n        }\n        if (this.$style && overflow !== this.$style.getOverflow()) {\n          this.$style.setOverflow(overflow)\n          this.scheduleRefresh()\n        }\n      },\n      getPadding () {\n        return coalesce(this.$style?.getPadding(), this.currentPadding)\n      },\n      setPadding (padding) {\n        padding = padding?.slice()\n\n        if (!isEqual(padding, this.currentPadding)) {\n          this.currentPadding = padding\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(padding, this.$style.getPadding())) {\n          this.$style.setPadding(padding)\n          this.scheduleRefresh()\n        }\n      },\n      getPlacement () {\n        return coalesce(this.$source?.getPlacement(), this.currentPlacement)\n      },\n      setPlacement (placement) {\n        if (placement !== this.currentPlacement) {\n          this.currentPlacement = placement\n          this.scheduleRefresh()\n        }\n        if (this.$style && placement !== this.$style.getPlacement()) {\n          this.$style.setPlacement(placement)\n          this.scheduleRefresh()\n        }\n      },\n      getRotateWithView () {\n        return coalesce(this.$style?.getRotateWithView(), this.currentRotateWithView)\n      },\n      setRotateWithView (rotateWithView) {\n        if (rotateWithView !== this.currentRotateWithView) {\n          this.currentRotateWithView = rotateWithView\n          this.scheduleRefresh()\n        }\n        if (this.$style && rotateWithView !== this.$style.getRotateWithView()) {\n          this.$style.setRotateWithView(rotateWithView)\n          this.scheduleRefresh()\n        }\n      },\n      getRotation () {\n        return coalesce(this.$style?.getRotation(), this.currentRotation)\n      },\n      setRotation (rotation) {\n        if (rotation !== this.currentRotation) {\n          this.currentRotation = rotation\n          this.scheduleRefresh()\n        }\n        if (this.$style && rotation !== this.$style.getRotation()) {\n          this.$style.setRotation(rotation)\n          this.scheduleRefresh()\n        }\n      },\n      getScale () {\n        return coalesce(this.$style?.getScale(), this.currentScale)\n      },\n      setScale (scale) {\n        if (scale !== this.currentScale) {\n          this.currentScale = scale\n          this.scheduleRefresh()\n        }\n        if (this.$style && scale !== this.$style.getScale()) {\n          this.$style.setScale(scale)\n          this.scheduleRefresh()\n        }\n      },\n      getText () {\n        return coalesce(this.$style?.getText(), this.currentText)\n      },\n      setText (text) {\n        if (text !== this.currentText) {\n          this.currentText = text\n          this.scheduleRefresh()\n        }\n        if (this.$style && text !== this.$style.getText()) {\n          this.$style.setText(text)\n          this.scheduleRefresh()\n        }\n      },\n      getTextAlign () {\n        return coalesce(this.$style?.getTextAlign(), this.currentTextAlign)\n      },\n      setTextAlign (textAlign) {\n        if (textAlign !== this.currentTextAlign) {\n          this.currentTextAlign = textAlign\n          this.scheduleRefresh()\n        }\n        if (this.$style && textAlign !== this.$style.getTextAlign()) {\n          this.$style.setTextAlign(textAlign)\n          this.scheduleRefresh()\n        }\n      },\n      getTextBaseline () {\n        return coalesce(this.$style?.getTextBaseline(), this.currentTextBaseline)\n      },\n      setTextBaseline (textBaseline) {\n        if (textBaseline !== this.currentTextBaseline) {\n          this.currentTextBaseline = textBaseline\n          this.scheduleRefresh()\n        }\n        if (this.$style && textBaseline !== this.$style.getTextBaseline()) {\n          this.$style.setTextBaseline(textBaseline)\n          this.scheduleRefresh()\n        }\n      },\n      getFillStyleTarget () {\n        return this.$style\n      },\n      getStrokeStyleTarget () {\n        return this.$style\n      },\n      getBackgroundFill () {\n        return this._bgFill\n      },\n      setBackgroundFill (fill) {\n        fill = fill?.$fill || fill\n        fill || (fill = undefined)\n\n        if (fill !== this._bgFill) {\n          this._bgFill = fill\n          this._bgFillVm = fill?.vm && fill.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$style && fill !== this.$style.getBackgroundFill()) {\n          this.$style.setBackgroundFill(fill)\n          this.scheduleRefresh()\n        }\n      },\n      getBackgroundStroke () {\n        return this._bgStroke\n      },\n      setBackgroundStroke (stroke) {\n        stroke = stroke?.$stroke || stroke\n        stroke || (stroke = undefined)\n\n        if (stroke !== this._bgStroke) {\n          this._bgStroke = stroke\n          this._bgStrokeVm = stroke?.vm && stroke.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$style && stroke !== this.$style.getBackgroundStroke()) {\n          this.$style.setBackgroundStroke(stroke)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $textStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.textStyleContainer,\n      },\n      $bgFill: {\n        enumerable: true,\n        get: this.getBackgroundFill,\n      },\n      $bgFillVm: {\n        enumerable: true,\n        get: () => this._bgFillVm,\n      },\n      $bgStroke: {\n        enumerable: true,\n        get: this.getBackgroundStroke,\n      },\n      $bgStrokeVm: {\n        enumerable: true,\n        get: () => this._bgStrokeVm,\n      },\n    })\n  }\n</script>\n","import { pick } from '../../utils'\nimport CircleStyle from './circle.vue'\nimport FillStyle from './fill.vue'\nimport IconStyle from './icon.vue'\nimport RegShapeStyle from './reg-shape.vue'\nimport StrokeStyle from './stroke.vue'\nimport Style from './style.vue'\nimport TextStyle from './text.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(CircleStyle, options)\n  Object.assign(FillStyle, options)\n  Object.assign(IconStyle, options)\n  Object.assign(RegShapeStyle, options)\n  Object.assign(StrokeStyle, options)\n  Object.assign(Style, options)\n  Object.assign(TextStyle, options)\n\n  Vue.component(CircleStyle.name, CircleStyle)\n  Vue.component(FillStyle.name, FillStyle)\n  Vue.component(IconStyle.name, IconStyle)\n  Vue.component(RegShapeStyle.name, RegShapeStyle)\n  Vue.component(StrokeStyle.name, StrokeStyle)\n  Vue.component(Style.name, Style)\n  Vue.component(TextStyle.name, TextStyle)\n\n  // todo remove in v0.13.x\n  Vue.component('VlStyleBox', {\n    name: 'VlStyleBox',\n    extends: Style,\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        this.$logger.warn('VlStyleBox component is deprecated. Use VlStyle component instead.')\n      }\n    },\n  })\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  CircleStyle,\n  FillStyle,\n  IconStyle,\n  RegShapeStyle,\n  StrokeStyle,\n  Style,\n  TextStyle,\n}\n","\n  import { olCmp, stubVNode, textStyleContainer } from '../../mixins'\n  import { dumpTextStyle } from '../../ol-ext'\n  import { clonePlainObject, isEqual, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleLatStyleAdapter',\n    mixins: [\n      stubVNode,\n      textStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n    },\n    watch: {\n      text: {\n        deep: true,\n        handler (value, prev) {\n          if (!isEqual(value, prev)) return\n\n          this.$emit('update:text', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $latStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.latStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n        )\n      },\n      getTextStyleTarget () {\n        return {\n          getText: () => this.$latStyleContainer?.getLatLabelStyle(),\n          setText: style => this.$latStyleContainer?.setLatLabelStyle(style),\n        }\n      },\n    },\n  }\n","<script>\n  import { olCmp, stubVNode, textStyleContainer } from '../../mixins'\n  import { dumpTextStyle } from '../../ol-ext'\n  import { clonePlainObject, isEqual, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleLatStyleAdapter',\n    mixins: [\n      stubVNode,\n      textStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n    },\n    watch: {\n      text: {\n        deep: true,\n        handler (value, prev) {\n          if (!isEqual(value, prev)) return\n\n          this.$emit('update:text', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $latStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.latStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n        )\n      },\n      getTextStyleTarget () {\n        return {\n          getText: () => this.$latStyleContainer?.getLatLabelStyle(),\n          setText: style => this.$latStyleContainer?.setLatLabelStyle(style),\n        }\n      },\n    },\n  }\n</script>\n","\n  import { olCmp, stubVNode, textStyleContainer } from '../../mixins'\n  import { dumpTextStyle } from '../../ol-ext'\n  import { stubObject, mergeDescriptors, isEqual, clonePlainObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleLonStyleAdapter',\n    mixins: [\n      stubVNode,\n      textStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n    },\n    watch: {\n      text: {\n        deep: true,\n        handler (value, prev) {\n          if (!isEqual(value, prev)) return\n\n          this.$emit('update:text', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $lonStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.lonStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n        )\n      },\n      getTextStyleTarget () {\n        return {\n          getText: () => this.$lonStyleContainer?.getLonLabelStyle(),\n          setText: style => this.$lonStyleContainer?.setLonLabelStyle(style),\n        }\n      },\n    },\n  }\n","<script>\n  import { olCmp, stubVNode, textStyleContainer } from '../../mixins'\n  import { dumpTextStyle } from '../../ol-ext'\n  import { stubObject, mergeDescriptors, isEqual, clonePlainObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleLonStyleAdapter',\n    mixins: [\n      stubVNode,\n      textStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n    },\n    watch: {\n      text: {\n        deep: true,\n        handler (value, prev) {\n          if (!isEqual(value, prev)) return\n\n          this.$emit('update:text', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $lonStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.lonStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n        )\n      },\n      getTextStyleTarget () {\n        return {\n          getText: () => this.$lonStyleContainer?.getLonLabelStyle(),\n          setText: style => this.$lonStyleContainer?.setLonLabelStyle(style),\n        }\n      },\n    },\n  }\n</script>\n","\n  import { olCmp, stubVNode, strokeStyleContainer } from '../../mixins'\n  import { dumpStrokeStyle } from '../../ol-ext'\n  import { stubObject, mergeDescriptors, isEqual, clonePlainObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleStrokeStyleAdapter',\n    mixins: [\n      stubVNode,\n      strokeStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n    },\n    watch: {\n      stroke: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:stroke', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $strokeStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.strokeStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n        )\n      },\n      getStrokeStyleTarget () {\n        return {\n          setStroke: style => this.$strokeStyleContainer.setStrokeStyle(style),\n          getStroke: () => this.$strokeStyleContainer.getStrokeStyle(),\n        }\n      },\n    },\n  }\n","<script>\n  import { olCmp, stubVNode, strokeStyleContainer } from '../../mixins'\n  import { dumpStrokeStyle } from '../../ol-ext'\n  import { stubObject, mergeDescriptors, isEqual, clonePlainObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleStrokeStyleAdapter',\n    mixins: [\n      stubVNode,\n      strokeStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n    },\n    watch: {\n      stroke: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:stroke', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $strokeStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.strokeStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n        )\n      },\n      getStrokeStyleTarget () {\n        return {\n          setStroke: style => this.$strokeStyleContainer.setStrokeStyle(style),\n          getStroke: () => this.$strokeStyleContainer.getStrokeStyle(),\n        }\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import GraticuleLayer from 'ol/layer/Graticule'\n  import { Stroke, Text } from 'ol/style'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { dumpStrokeStyle, dumpTextStyle } from '../../ol-ext'\n  import { assert, clonePlainObject, coalesce, isEqual, map, mergeDescriptors } from '../../utils'\n  import { FillStyle, StrokeStyle, TextStyle } from '../style'\n  import LatStyle from './lat-style.vue'\n  import LonStyle from './lon-style.vue'\n  import GStrokeStyle from './stroke-style.vue'\n\n  export default {\n    name: 'VlLayerGraticule',\n    components: {\n      LonStyle,\n      LatStyle,\n      GStrokeStyle,\n      TextStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      // ol/layer/Graticule\n      maxLines: {\n        type: Number,\n        default: 100,\n      },\n      targetSize: {\n        type: Number,\n        default: 100,\n      },\n      showLabels: {\n        type: Boolean,\n        default: false,\n      },\n      lonLabelFormatter: Function,\n      latLabelFormatter: Function,\n      lonLabelPosition: {\n        type: Number,\n        default: 0,\n      },\n      latLabelPosition: {\n        type: Number,\n        default: 1,\n      },\n      intervals: {\n        type: Array,\n        default: () => [90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001],\n      },\n      wrapX: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    computed: {\n      inputIntervals () {\n        return this.intervals?.slice()\n      },\n      meridians () {\n        if (!this.rev) return []\n\n        return map(this.getMeridians(), geom => this.writeGeometryInDataProj(geom))\n      },\n      parallels () {\n        if (!this.rev) return []\n\n        return map(this.getParallels(), geom => this.writeGeometryInDataProj(geom))\n      },\n      lonLabelStyle () {\n        if (!(this.rev && this.$lonLabelStyle)) return\n\n        return dumpTextStyle(this.$lonLabelStyle)\n      },\n      latLabelStyle () {\n        if (!(this.rev && this.$latLabelStyle)) return\n\n        return dumpTextStyle(this.$latLabelStyle)\n      },\n      strokeStyle () {\n        if (!(this.rev && this.$strokeStyle)) return\n\n        return dumpStrokeStyle(this.$strokeStyle)\n      },\n    },\n    watch: {\n      meridians: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:meridians', clonePlainObject(value))\n        },\n      },\n      parallels: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:parallels', clonePlainObject(value))\n        },\n      },\n      lonLabelStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:lonLabelStyle', value && clonePlainObject(value))\n        },\n      },\n      latLabelStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:latLabelStyle', value && clonePlainObject(value))\n        },\n      },\n      strokeStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:strokeStyle', value && clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'maxLines',\n        'targetSize',\n        'showLabels',\n        'lonLabelFormatter',\n        'latLabelFormatter',\n        'lonLabelPosition',\n        'latLabelPosition',\n        'inputIntervals',\n        'wrapX',\n      ], [\n        'inputIntervals',\n      ]),\n    },\n    created () {\n      this._lonLabelStyle = undefined\n      this._lonLabelStyleVm = undefined\n      this._latLabelStyle = undefined\n      this._latLabelStyleVm = undefined\n      this._strokeStyle = undefined\n      this._strokeStyleVm = undefined\n\n      Object.defineProperties(this, {\n        $lonLabelStyle: {\n          enumerable: true,\n          get: this.getLonLabelStyle,\n        },\n        $lonLabelStyleVm: {\n          enumerable: true,\n          get: this.getLonLabelStyleVm,\n        },\n        $latLabelStyle: {\n          enumerable: true,\n          get: this.getLatLabelStyle,\n        },\n        $latLabelStyleVm: {\n          enumerable: true,\n          get: this.getLatLabelStyleVm,\n        },\n        $strokeStyle: {\n          enumerable: true,\n          get: this.getStrokeStyle,\n        },\n        $strokeStyleVm: {\n          enumerable: true,\n          get: this.getStrokeStyleVm,\n        },\n      })\n    },\n    methods: {\n      createLayer () {\n        return new GraticuleLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          // ol/layer/Vector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/Graticule\n          maxLines: this.maxLines,\n          strokeStyle: this.$strokeStyle,\n          targetSize: this.targetSize,\n          showLabels: this.showLabels,\n          lonLabelFormatter: this.lonLabelFormatter,\n          latLabelFormatter: this.latLabelFormatter,\n          lonLabelPosition: this.lonLabelPosition,\n          latLabelPosition: this.latLabelPosition,\n          lonLabelStyle: this.$lonLabelStyle,\n          latLabelStyle: this.$latLabelStyle,\n          intervals: this.inputIntervals,\n          wrapX: this.wrapX,\n        })\n      },\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::vectorLayer.methods.getServices(),\n          {\n            get lonStyleContainer () { return vm },\n            get latStyleContainer () { return vm },\n            get strokeStyleContainer () { return vm },\n          },\n        )\n      },\n      getMeridians () {\n        return coalesce(this.$layer?.getMeridians(), [])\n      },\n      getParallels () {\n        return coalesce(this.$layer?.getParallels(), [])\n      },\n      getLonLabelStyle () {\n        return this._lonLabelStyle\n      },\n      getLonLabelStyleVm () {\n        return this._lonLabelStyleVm\n      },\n      setLonLabelStyle (style) {\n        style = style?.$style || style\n        style || (style = undefined)\n        assert(!style || style instanceof Text, 'Invalid lon label style')\n\n        if (style === this._lonLabelStyle) return\n\n        this._lonLabelStyle = style\n        this._lonLabelStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('lonLabelStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n      getLatLabelStyle () {\n        return this._latLabelStyle\n      },\n      getLatLabelStyleVm () {\n        return this._latLabelStyleVm\n      },\n      setLatLabelStyle (style) {\n        style = style?.$style || style\n        style || (style = undefined)\n        assert(!style || style instanceof Text, 'Invalid lat label style')\n\n        if (style === this._latLabelStyle) return\n\n        this._latLabelStyle = style\n        this._latLabelStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('latLabelStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n      getStrokeStyle () {\n        return this._strokeStyle\n      },\n      getStrokeStyleVm () {\n        return this._strokeStyleVm\n      },\n      setStrokeStyle (style) {\n        style = style?.$style\n        style || (style = undefined)\n        assert(!style || style instanceof Stroke, 'Invalid stroke style')\n\n        if (style === this._strokeStyle) return\n\n        this._strokeStyle = style\n        this._strokeStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('strokeStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n    },\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <LonStyle :id=\"'vl-' + currentId + '-lon-style'\">\n      <slot name=\"lon\">\n        <TextStyle\n          :id=\"'vl-' + currentId + '-default-text-style'\"\n          font=\"'12px Calibri,sans-serif'\"\n          text-baseline=\"bottom\">\n          <FillStyle\n            :id=\"'vl-' + currentId + '-default-fill-style'\"\n            color=\"rgba(0,0,0,1)\" />\n          <StrokeStyle\n            :id=\"'vl-' + currentId + '-default-stroke-style'\"\n            color=\"rgba(255,255,255,1)\"\n            :width=\"3\" />\n        </TextStyle>\n      </slot>\n    </LonStyle>\n    <LatStyle :id=\"'vl-' + currentId + '-lat-style'\">\n      <slot name=\"lat\">\n        <TextStyle\n          :id=\"'vl-' + currentId + '-default-text-style'\"\n          font=\"'12px Calibri,sans-serif'\"\n          text-align=\"end\">\n          <FillStyle\n            :id=\"'vl-' + currentId + '-default-fill-style'\"\n            color=\"rgba(0,0,0,1)\" />\n          <StrokeStyle\n            :id=\"'vl-' + currentId + '-default-stroke-style'\"\n            color=\"rgba(255,255,255,1)\"\n            :width=\"3\" />\n        </TextStyle>\n      </slot>\n    </LatStyle>\n    <GStrokeStyle :id=\"'vl-' + currentId + '-graticule-style'\">\n      <slot name=\"stroke\">\n        <StrokeStyle\n          :id=\"'vl-' + currentId + '-default-graticule-stroke-style'\"\n          color=\"rgba(0,0,0,0.2)\" />\n      </slot>\n    </GStrokeStyle>\n  </i>\n</template>\n\n<script>\n  import GraticuleLayer from 'ol/layer/Graticule'\n  import { Stroke, Text } from 'ol/style'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { dumpStrokeStyle, dumpTextStyle } from '../../ol-ext'\n  import { assert, clonePlainObject, coalesce, isEqual, map, mergeDescriptors } from '../../utils'\n  import { FillStyle, StrokeStyle, TextStyle } from '../style'\n  import LatStyle from './lat-style.vue'\n  import LonStyle from './lon-style.vue'\n  import GStrokeStyle from './stroke-style.vue'\n\n  export default {\n    name: 'VlLayerGraticule',\n    components: {\n      LonStyle,\n      LatStyle,\n      GStrokeStyle,\n      TextStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      // ol/layer/Graticule\n      maxLines: {\n        type: Number,\n        default: 100,\n      },\n      targetSize: {\n        type: Number,\n        default: 100,\n      },\n      showLabels: {\n        type: Boolean,\n        default: false,\n      },\n      lonLabelFormatter: Function,\n      latLabelFormatter: Function,\n      lonLabelPosition: {\n        type: Number,\n        default: 0,\n      },\n      latLabelPosition: {\n        type: Number,\n        default: 1,\n      },\n      intervals: {\n        type: Array,\n        default: () => [90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001],\n      },\n      wrapX: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    computed: {\n      inputIntervals () {\n        return this.intervals?.slice()\n      },\n      meridians () {\n        if (!this.rev) return []\n\n        return map(this.getMeridians(), geom => this.writeGeometryInDataProj(geom))\n      },\n      parallels () {\n        if (!this.rev) return []\n\n        return map(this.getParallels(), geom => this.writeGeometryInDataProj(geom))\n      },\n      lonLabelStyle () {\n        if (!(this.rev && this.$lonLabelStyle)) return\n\n        return dumpTextStyle(this.$lonLabelStyle)\n      },\n      latLabelStyle () {\n        if (!(this.rev && this.$latLabelStyle)) return\n\n        return dumpTextStyle(this.$latLabelStyle)\n      },\n      strokeStyle () {\n        if (!(this.rev && this.$strokeStyle)) return\n\n        return dumpStrokeStyle(this.$strokeStyle)\n      },\n    },\n    watch: {\n      meridians: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:meridians', clonePlainObject(value))\n        },\n      },\n      parallels: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:parallels', clonePlainObject(value))\n        },\n      },\n      lonLabelStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:lonLabelStyle', value && clonePlainObject(value))\n        },\n      },\n      latLabelStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:latLabelStyle', value && clonePlainObject(value))\n        },\n      },\n      strokeStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:strokeStyle', value && clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'maxLines',\n        'targetSize',\n        'showLabels',\n        'lonLabelFormatter',\n        'latLabelFormatter',\n        'lonLabelPosition',\n        'latLabelPosition',\n        'inputIntervals',\n        'wrapX',\n      ], [\n        'inputIntervals',\n      ]),\n    },\n    created () {\n      this._lonLabelStyle = undefined\n      this._lonLabelStyleVm = undefined\n      this._latLabelStyle = undefined\n      this._latLabelStyleVm = undefined\n      this._strokeStyle = undefined\n      this._strokeStyleVm = undefined\n\n      Object.defineProperties(this, {\n        $lonLabelStyle: {\n          enumerable: true,\n          get: this.getLonLabelStyle,\n        },\n        $lonLabelStyleVm: {\n          enumerable: true,\n          get: this.getLonLabelStyleVm,\n        },\n        $latLabelStyle: {\n          enumerable: true,\n          get: this.getLatLabelStyle,\n        },\n        $latLabelStyleVm: {\n          enumerable: true,\n          get: this.getLatLabelStyleVm,\n        },\n        $strokeStyle: {\n          enumerable: true,\n          get: this.getStrokeStyle,\n        },\n        $strokeStyleVm: {\n          enumerable: true,\n          get: this.getStrokeStyleVm,\n        },\n      })\n    },\n    methods: {\n      createLayer () {\n        return new GraticuleLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          // ol/layer/Vector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/Graticule\n          maxLines: this.maxLines,\n          strokeStyle: this.$strokeStyle,\n          targetSize: this.targetSize,\n          showLabels: this.showLabels,\n          lonLabelFormatter: this.lonLabelFormatter,\n          latLabelFormatter: this.latLabelFormatter,\n          lonLabelPosition: this.lonLabelPosition,\n          latLabelPosition: this.latLabelPosition,\n          lonLabelStyle: this.$lonLabelStyle,\n          latLabelStyle: this.$latLabelStyle,\n          intervals: this.inputIntervals,\n          wrapX: this.wrapX,\n        })\n      },\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::vectorLayer.methods.getServices(),\n          {\n            get lonStyleContainer () { return vm },\n            get latStyleContainer () { return vm },\n            get strokeStyleContainer () { return vm },\n          },\n        )\n      },\n      getMeridians () {\n        return coalesce(this.$layer?.getMeridians(), [])\n      },\n      getParallels () {\n        return coalesce(this.$layer?.getParallels(), [])\n      },\n      getLonLabelStyle () {\n        return this._lonLabelStyle\n      },\n      getLonLabelStyleVm () {\n        return this._lonLabelStyleVm\n      },\n      setLonLabelStyle (style) {\n        style = style?.$style || style\n        style || (style = undefined)\n        assert(!style || style instanceof Text, 'Invalid lon label style')\n\n        if (style === this._lonLabelStyle) return\n\n        this._lonLabelStyle = style\n        this._lonLabelStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('lonLabelStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n      getLatLabelStyle () {\n        return this._latLabelStyle\n      },\n      getLatLabelStyleVm () {\n        return this._latLabelStyleVm\n      },\n      setLatLabelStyle (style) {\n        style = style?.$style || style\n        style || (style = undefined)\n        assert(!style || style instanceof Text, 'Invalid lat label style')\n\n        if (style === this._latLabelStyle) return\n\n        this._latLabelStyle = style\n        this._latLabelStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('latLabelStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n      getStrokeStyle () {\n        return this._strokeStyle\n      },\n      getStrokeStyleVm () {\n        return this._strokeStyleVm\n      },\n      setStrokeStyle (style) {\n        style = style?.$style\n        style || (style = undefined)\n        assert(!style || style instanceof Stroke, 'Invalid stroke style')\n\n        if (style === this._strokeStyle) return\n\n        this._strokeStyle = style\n        this._strokeStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('strokeStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n\n  // todo remove in v0.13.x\n  Vue.component('VlGraticule', {\n    name: 'VlGraticule',\n    extends: Layer,\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        this.$logger.warn('VlGraticule component is deprecated. Use VlLayerGraticule component instead.')\n      }\n    },\n  })\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { Group as GroupLayer } from 'ol/layer'\n  import { baseLayer, layersContainer } from '../../mixins'\n  import { getLayerId } from '../../ol-ext'\n  import { isEqual, map, mergeDescriptors } from '../../utils'\n\n  export default {\n    name: 'VlLayerGroup',\n    mixins: [\n      layersContainer,\n      baseLayer,\n    ],\n    computed: {\n      layers () {\n        if (!this.rev) return []\n\n        return map(this.getLayers(), layer => ({\n          id: getLayerId(layer),\n          type: layer.constructor.name,\n        }))\n      },\n    },\n    watch: {\n      layers: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:layers', value.slice())\n        },\n      },\n    },\n    methods: {\n      createLayer () {\n        return new GroupLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Group\n          layers: this.$layersCollection,\n        })\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::baseLayer.methods.getServices(),\n          this::layersContainer.methods.getServices(),\n        )\n      },\n      subscribeAll () {\n        this::layersContainer.methods.subscribeAll()\n        this::baseLayer.methods.subscribeAll()\n      },\n    },\n  }\n","<script>\n  import { Group as GroupLayer } from 'ol/layer'\n  import { baseLayer, layersContainer } from '../../mixins'\n  import { getLayerId } from '../../ol-ext'\n  import { isEqual, map, mergeDescriptors } from '../../utils'\n\n  export default {\n    name: 'VlLayerGroup',\n    mixins: [\n      layersContainer,\n      baseLayer,\n    ],\n    computed: {\n      layers () {\n        if (!this.rev) return []\n\n        return map(this.getLayers(), layer => ({\n          id: getLayerId(layer),\n          type: layer.constructor.name,\n        }))\n      },\n    },\n    watch: {\n      layers: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:layers', value.slice())\n        },\n      },\n    },\n    methods: {\n      createLayer () {\n        return new GroupLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Group\n          layers: this.$layersCollection,\n        })\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::baseLayer.methods.getServices(),\n          this::layersContainer.methods.getServices(),\n        )\n      },\n      subscribeAll () {\n        this::layersContainer.methods.subscribeAll()\n        this::baseLayer.methods.subscribeAll()\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { Heatmap as HeatmapLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, assert, coalesce, isArray, isEqual, isNumber } from '../../utils'\n\n  export default {\n    name: 'VlLayerHeatmap',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      /**\n       * @type {string[]}\n       */\n      gradient: {\n        type: Array,\n        default: () => ['#0000ff', '#00ffff', '#00ff00', '#ffff00', '#ff0000'],\n      },\n      /**\n       * @type {number}\n       */\n      radius: {\n        type: Number,\n        default: 8,\n      },\n      /**\n       * @type {number}\n       */\n      blur: {\n        type: Number,\n        default: 15,\n      },\n      /**\n       * @type {string}\n       */\n      weight: {\n        type: [String, Function],\n        default: 'weight',\n      },\n    },\n    data () {\n      return {\n        currentGradient: this.gradient.slice(),\n        currentRadius: this.radius,\n        currentBlur: this.blur,\n      }\n    },\n    computed: {\n      inputGradient () {\n        return this.gradient.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$layer) return\n\n        if (!isEqual(this.currentGradient, this.$layer.getGradient())) {\n          this.currentGradient = this.$layer.getGradient()\n        }\n        if (this.currentRadius !== this.$layer.getRadius()) {\n          this.currentRadius = this.$layer.getRadius()\n        }\n        if (this.currentBlur !== this.$layer.getBlur()) {\n          this.currentBlur = this.$layer.getBlur()\n        }\n      },\n      inputGradient (value) {\n        this.setGradient(value)\n      },\n      currentGradient: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputGradient)) return\n\n          this.$emit('update:gradient', value.slice())\n        },\n      },\n      radius (value) {\n        this.setRadius(value)\n      },\n      currentRadius (value) {\n        if (value === this.radius) return\n\n        this.$emit('update:radius', value)\n      },\n      blur (value) {\n        this.setBlur(value)\n      },\n      currentBlur (value) {\n        if (value === this.blur) return\n\n        this.$emit('update:blur', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'weight',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {HeatmapLayer}\n       */\n      createLayer () {\n        return new HeatmapLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/Heatmap\n          blur: this.currentBlur,\n          gradient: this.currentGradient,\n          radius: this.currentRadius,\n          weight: this.weight,\n        })\n      },\n      subscribeAll () {\n        this::vectorLayer.methods.subscribeAll()\n        this::subscribeToLayerEvents()\n      },\n      getBlur () {\n        return coalesce(this.$layer?.getBlur(), this.currentBlur)\n      },\n      setBlur (blur) {\n        blur = Number(blur)\n        assert(isNumber(blur), 'Invalid blur')\n\n        if (blur !== this.currentBlur) {\n          this.currentBlur = blur\n        }\n        if (this.$layer && blur !== this.$layer.getBlur()) {\n          this.$layer.setBlur(blur)\n        }\n      },\n      getGradient () {\n        return coalesce(this.$layer?.getGradient(), this.currentGradient)\n      },\n      setGradient (gradient) {\n        assert(isArray(gradient), 'Invalid gradient')\n        gradient = gradient.slice()\n\n        if (!isEqual(gradient, this.currentGradient)) {\n          this.currentGradient = gradient\n        }\n        if (this.$layer && !isEqual(gradient, this.$layer.getGradient())) {\n          this.$layer.setGradient(gradient)\n        }\n      },\n      getRadius () {\n        return coalesce(this.$layer?.getRadius(), this.currentRadius)\n      },\n      setRadius (radius) {\n        radius = Number(radius)\n        assert(isNumber(radius), 'Invalid radius')\n\n        if (radius !== this.currentRadius) {\n          this.currentRadius = radius\n        }\n        if (this.$layer && radius !== this.$layer.getRadius()) {\n          this.$layer.setRadius(radius)\n        }\n      },\n    },\n  }\n\n  function subscribeToLayerEvents () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$layer, [\n      'blur',\n      'gradient',\n      'radius',\n    ], true, evt => ({\n      ...evt,\n      setter: this[setterKey(evt.prop)],\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n","<script>\n  import { Heatmap as HeatmapLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, assert, coalesce, isArray, isEqual, isNumber } from '../../utils'\n\n  export default {\n    name: 'VlLayerHeatmap',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      /**\n       * @type {string[]}\n       */\n      gradient: {\n        type: Array,\n        default: () => ['#0000ff', '#00ffff', '#00ff00', '#ffff00', '#ff0000'],\n      },\n      /**\n       * @type {number}\n       */\n      radius: {\n        type: Number,\n        default: 8,\n      },\n      /**\n       * @type {number}\n       */\n      blur: {\n        type: Number,\n        default: 15,\n      },\n      /**\n       * @type {string}\n       */\n      weight: {\n        type: [String, Function],\n        default: 'weight',\n      },\n    },\n    data () {\n      return {\n        currentGradient: this.gradient.slice(),\n        currentRadius: this.radius,\n        currentBlur: this.blur,\n      }\n    },\n    computed: {\n      inputGradient () {\n        return this.gradient.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$layer) return\n\n        if (!isEqual(this.currentGradient, this.$layer.getGradient())) {\n          this.currentGradient = this.$layer.getGradient()\n        }\n        if (this.currentRadius !== this.$layer.getRadius()) {\n          this.currentRadius = this.$layer.getRadius()\n        }\n        if (this.currentBlur !== this.$layer.getBlur()) {\n          this.currentBlur = this.$layer.getBlur()\n        }\n      },\n      inputGradient (value) {\n        this.setGradient(value)\n      },\n      currentGradient: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputGradient)) return\n\n          this.$emit('update:gradient', value.slice())\n        },\n      },\n      radius (value) {\n        this.setRadius(value)\n      },\n      currentRadius (value) {\n        if (value === this.radius) return\n\n        this.$emit('update:radius', value)\n      },\n      blur (value) {\n        this.setBlur(value)\n      },\n      currentBlur (value) {\n        if (value === this.blur) return\n\n        this.$emit('update:blur', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'weight',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {HeatmapLayer}\n       */\n      createLayer () {\n        return new HeatmapLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/Heatmap\n          blur: this.currentBlur,\n          gradient: this.currentGradient,\n          radius: this.currentRadius,\n          weight: this.weight,\n        })\n      },\n      subscribeAll () {\n        this::vectorLayer.methods.subscribeAll()\n        this::subscribeToLayerEvents()\n      },\n      getBlur () {\n        return coalesce(this.$layer?.getBlur(), this.currentBlur)\n      },\n      setBlur (blur) {\n        blur = Number(blur)\n        assert(isNumber(blur), 'Invalid blur')\n\n        if (blur !== this.currentBlur) {\n          this.currentBlur = blur\n        }\n        if (this.$layer && blur !== this.$layer.getBlur()) {\n          this.$layer.setBlur(blur)\n        }\n      },\n      getGradient () {\n        return coalesce(this.$layer?.getGradient(), this.currentGradient)\n      },\n      setGradient (gradient) {\n        assert(isArray(gradient), 'Invalid gradient')\n        gradient = gradient.slice()\n\n        if (!isEqual(gradient, this.currentGradient)) {\n          this.currentGradient = gradient\n        }\n        if (this.$layer && !isEqual(gradient, this.$layer.getGradient())) {\n          this.$layer.setGradient(gradient)\n        }\n      },\n      getRadius () {\n        return coalesce(this.$layer?.getRadius(), this.currentRadius)\n      },\n      setRadius (radius) {\n        radius = Number(radius)\n        assert(isNumber(radius), 'Invalid radius')\n\n        if (radius !== this.currentRadius) {\n          this.currentRadius = radius\n        }\n        if (this.$layer && radius !== this.$layer.getRadius()) {\n          this.$layer.setRadius(radius)\n        }\n      },\n    },\n  }\n\n  function subscribeToLayerEvents () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$layer, [\n      'blur',\n      'gradient',\n      'radius',\n    ], true, evt => ({\n      ...evt,\n      setter: this[setterKey(evt.prop)],\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { ImageArcGISRest as ImageArcGISRestSource } from 'ol/source'\n  import { arcgisSource, imageSource, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { and, assert, coalesce, isEmpty, isFunction, isString, negate, noop } from '../../utils'\n\n  const validateUrl = /*#__PURE__*/and(isString, negate(isEmpty))\n\n  export default {\n    name: 'VlSourceImageArcgisRest',\n    mixins: [\n      arcgisSource,\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageArcGISRest\n      crossOrigin: String,\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imageLoadFunc: Function,\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      ratio: {\n        type: Number,\n        default: 1.5,\n      },\n      url: {\n        type: String,\n        required: true,\n        validator: validateUrl,\n      },\n    },\n    data () {\n      return {\n        currentImageLoadFunction: this.imageLoadFunction,\n        currentUrl: this.url,\n      }\n    },\n    computed: {\n      inputImageLoadFunction () {\n        return this.imageLoadFunction || this.imageLoadFunc\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentImageLoadFunction !== this.$source.getImageLoadFunction()) {\n          this.currentImageLoadFunction = this.$source.getImageLoadFunction()\n        }\n        if (this.currentUrl !== this.$source.getUrl()) {\n          this.currentUrl = this.$source.getUrl()\n        }\n      },\n      url (value) {\n        this.setUrl(value)\n      },\n      currentUrl (value) {\n        if (value === this.url) return\n\n        this.$emit('update:url', value)\n      },\n      inputImageLoadFunction (value) {\n        this.setImageLoadFunction(value)\n      },\n      currentImageLoadFunction (value) {\n        if (value === this.imageLoadFunction) return\n\n        this.$emit('update:imageLoadFunction', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'imageSmoothing',\n        'ratio',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n\n      this.currentImageLoadFunction = this.inputImageLoadFunction\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ImageArcGISRestSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/Image\n          resolutions: this.inputResolutions,\n          // ol/source/ImageArcGISRest\n          crossOrigin: this.crossOrigin,\n          hidpi: this.hidpi,\n          imageLoadFunction: this.currentImageLoadFunction,\n          imageSmoothing: this.imageSmoothing,\n          params: this.currentParams,\n          ratio: this.ratio,\n          url: this.currentUrl,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.currentUrl)\n      },\n      setUrl (url) {\n        assert(validateUrl(url), 'Invalid url')\n\n        if (url !== this.currentUrl) {\n          this.currentUrl = url\n        }\n        if (this.$source && url !== this.$source.getUrl()) {\n          this.$source.setUrl(url)\n        }\n      },\n      getImageLoadFunction () {\n        return coalesce(this.$source?.getImageLoadFunction(), this.currentImageLoadFunction)\n      },\n      setImageLoadFunction (func) {\n        assert(isFunction(func), 'Invalid image load function')\n\n        if (func !== this.currentImageLoadFunction) {\n          this.currentImageLoadFunction = func\n        }\n        if (this.$source && func !== this.$source.getImageLoadFunction()) {\n          this.$source.setImageLoadFunction(func)\n        }\n      },\n      stateChanged: noop,\n    },\n  }\n","<script>\n  import { ImageArcGISRest as ImageArcGISRestSource } from 'ol/source'\n  import { arcgisSource, imageSource, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { and, assert, coalesce, isEmpty, isFunction, isString, negate, noop } from '../../utils'\n\n  const validateUrl = /*#__PURE__*/and(isString, negate(isEmpty))\n\n  export default {\n    name: 'VlSourceImageArcgisRest',\n    mixins: [\n      arcgisSource,\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageArcGISRest\n      crossOrigin: String,\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imageLoadFunc: Function,\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      ratio: {\n        type: Number,\n        default: 1.5,\n      },\n      url: {\n        type: String,\n        required: true,\n        validator: validateUrl,\n      },\n    },\n    data () {\n      return {\n        currentImageLoadFunction: this.imageLoadFunction,\n        currentUrl: this.url,\n      }\n    },\n    computed: {\n      inputImageLoadFunction () {\n        return this.imageLoadFunction || this.imageLoadFunc\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentImageLoadFunction !== this.$source.getImageLoadFunction()) {\n          this.currentImageLoadFunction = this.$source.getImageLoadFunction()\n        }\n        if (this.currentUrl !== this.$source.getUrl()) {\n          this.currentUrl = this.$source.getUrl()\n        }\n      },\n      url (value) {\n        this.setUrl(value)\n      },\n      currentUrl (value) {\n        if (value === this.url) return\n\n        this.$emit('update:url', value)\n      },\n      inputImageLoadFunction (value) {\n        this.setImageLoadFunction(value)\n      },\n      currentImageLoadFunction (value) {\n        if (value === this.imageLoadFunction) return\n\n        this.$emit('update:imageLoadFunction', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'imageSmoothing',\n        'ratio',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n\n      this.currentImageLoadFunction = this.inputImageLoadFunction\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ImageArcGISRestSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/Image\n          resolutions: this.inputResolutions,\n          // ol/source/ImageArcGISRest\n          crossOrigin: this.crossOrigin,\n          hidpi: this.hidpi,\n          imageLoadFunction: this.currentImageLoadFunction,\n          imageSmoothing: this.imageSmoothing,\n          params: this.currentParams,\n          ratio: this.ratio,\n          url: this.currentUrl,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.currentUrl)\n      },\n      setUrl (url) {\n        assert(validateUrl(url), 'Invalid url')\n\n        if (url !== this.currentUrl) {\n          this.currentUrl = url\n        }\n        if (this.$source && url !== this.$source.getUrl()) {\n          this.$source.setUrl(url)\n        }\n      },\n      getImageLoadFunction () {\n        return coalesce(this.$source?.getImageLoadFunction(), this.currentImageLoadFunction)\n      },\n      setImageLoadFunction (func) {\n        assert(isFunction(func), 'Invalid image load function')\n\n        if (func !== this.currentImageLoadFunction) {\n          this.currentImageLoadFunction = func\n        }\n        if (this.$source && func !== this.$source.getImageLoadFunction()) {\n          this.$source.setImageLoadFunction(func)\n        }\n      },\n      stateChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { Image as ImageLayer } from 'ol/layer'\n  import { imageLayer } from '../../mixins'\n\n  /**\n   * Layer for server-rendered images that are available for arbitrary extents and resolutions.\n   */\n  export default {\n    name: 'VlLayerImage',\n    mixins: [\n      imageLayer,\n    ],\n    methods: {\n      /**\n       * @return {Image}\n       * @protected\n       */\n      createLayer () {\n        return new ImageLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n        })\n      },\n    },\n  }\n","<script>\n  import { Image as ImageLayer } from 'ol/layer'\n  import { imageLayer } from '../../mixins'\n\n  /**\n   * Layer for server-rendered images that are available for arbitrary extents and resolutions.\n   */\n  export default {\n    name: 'VlLayerImage',\n    mixins: [\n      imageLayer,\n    ],\n    methods: {\n      /**\n       * @return {Image}\n       * @protected\n       */\n      createLayer () {\n        return new ImageLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { ImageStatic as ImageStaticSource } from 'ol/source'\n  import { imageSource, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { coalesce, isEmpty, negate, noop } from '../../utils'\n\n  /**\n   * A layer source for displaying a single, static image.\n   */\n  export default {\n    name: 'VlSourceImageStatic',\n    mixins: [\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageStatic\n      crossOrigin: String,\n      /**\n       * Image extent in the source projection.\n       * @type {number[]}\n       */\n      imageExtent: {\n        type: Array,\n        // required: true,\n        validator: value => value.length === 4,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgExtent: {\n        type: Array,\n        validator: value => value.length === 4,\n      },\n      /**\n       * @deprecated Use `imgExtent` instead.\n       * @todo remove in v0.13.x\n       */\n      extent: {\n        type: Array,\n        validator: value => value.length === 4,\n      },\n      /**\n       * Optional function to load an image given a URL.\n       * @type {function|undefined}\n       */\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgLoadFunc: Function,\n      /**\n       * @deprecated Use `imgLoadFunc` instead.\n       * @todo remove in v0.13.x\n       */\n      loadFunc: Function,\n      /**\n       * Image size in pixels.\n       * @type {number[]}\n       */\n      imageSize: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgSize: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @deprecated Use `imgSize` instead.\n       * @todo remove in v0.13.x\n       */\n      size: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @type {boolean}\n       */\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Image URL.\n       * @type {string}\n       */\n      url: {\n        type: String,\n        required: true,\n        validator: /*#__PURE__*/negate(isEmpty),\n      },\n    },\n    computed: {\n      inputImageExtent () {\n        return coalesce(this.imageExtent, this.imgExtent, this.extent)?.slice()\n      },\n      inputImageLoadFunction () {\n        return coalesce(this.imageLoadFunction, this.imgLoadFunc, this.loadFunc)\n      },\n      inputImageSize () {\n        return coalesce(this.imageSize, this.imgSize, this.size)?.slice()\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'inputImageExtent',\n        'inputImageLoadFunction',\n        'inputImageSize',\n        'imageSmoothing',\n        'url',\n      ], [\n        'inputImageExtent',\n        'inputImageSize',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.extent) {\n          this.$logger.warn(\"'extent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.imgExtent) {\n          this.$logger.warn(\"'imgExtent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.loadFunc) {\n          this.$logger.warn(\"'loadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.imgLoadFunc) {\n          this.$logger.warn(\"'imgLoadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.size) {\n          this.$logger.warn(\"'size' is deprecated. Use `imageSize` prop instead.\")\n        }\n        if (this.imgSize) {\n          this.$logger.warn(\"'imgSize' is deprecated. Use `imageSize` prop instead.\")\n        }\n      }\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.extent) {\n          this.$logger.warn(\"'extent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.imgExtent) {\n          this.$logger.warn(\"'imgExtent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.loadFunc) {\n          this.$logger.warn(\"'loadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.imgLoadFunc) {\n          this.$logger.warn(\"'imgLoadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.size) {\n          this.$logger.warn(\"'size' is deprecated. Use `imageSize` prop instead.\")\n        }\n        if (this.imgSize) {\n          this.$logger.warn(\"'imgSize' is deprecated. Use `imageSize` prop instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {ImageStatic}\n       * @protected\n       */\n      createSource () {\n        return new ImageStaticSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/ImageStatic\n          crossOrigin: this.crossOrigin,\n          imageExtent: this.inputImageExtent,\n          imageLoadFunction: this.inputImageLoadFunction,\n          imageSize: this.inputImageSize,\n          imageSmoothing: this.imageSmoothing,\n          url: this.url,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.url)\n      },\n      getImageExtent () {\n        return coalesce(this.$source?.getImageExtent(), this.inputImageExtent)\n      },\n      stateChanged: noop,\n    },\n  }\n","<script>\n  import { ImageStatic as ImageStaticSource } from 'ol/source'\n  import { imageSource, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { coalesce, isEmpty, negate, noop } from '../../utils'\n\n  /**\n   * A layer source for displaying a single, static image.\n   */\n  export default {\n    name: 'VlSourceImageStatic',\n    mixins: [\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageStatic\n      crossOrigin: String,\n      /**\n       * Image extent in the source projection.\n       * @type {number[]}\n       */\n      imageExtent: {\n        type: Array,\n        // required: true,\n        validator: value => value.length === 4,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgExtent: {\n        type: Array,\n        validator: value => value.length === 4,\n      },\n      /**\n       * @deprecated Use `imgExtent` instead.\n       * @todo remove in v0.13.x\n       */\n      extent: {\n        type: Array,\n        validator: value => value.length === 4,\n      },\n      /**\n       * Optional function to load an image given a URL.\n       * @type {function|undefined}\n       */\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgLoadFunc: Function,\n      /**\n       * @deprecated Use `imgLoadFunc` instead.\n       * @todo remove in v0.13.x\n       */\n      loadFunc: Function,\n      /**\n       * Image size in pixels.\n       * @type {number[]}\n       */\n      imageSize: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgSize: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @deprecated Use `imgSize` instead.\n       * @todo remove in v0.13.x\n       */\n      size: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @type {boolean}\n       */\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Image URL.\n       * @type {string}\n       */\n      url: {\n        type: String,\n        required: true,\n        validator: /*#__PURE__*/negate(isEmpty),\n      },\n    },\n    computed: {\n      inputImageExtent () {\n        return coalesce(this.imageExtent, this.imgExtent, this.extent)?.slice()\n      },\n      inputImageLoadFunction () {\n        return coalesce(this.imageLoadFunction, this.imgLoadFunc, this.loadFunc)\n      },\n      inputImageSize () {\n        return coalesce(this.imageSize, this.imgSize, this.size)?.slice()\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'inputImageExtent',\n        'inputImageLoadFunction',\n        'inputImageSize',\n        'imageSmoothing',\n        'url',\n      ], [\n        'inputImageExtent',\n        'inputImageSize',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.extent) {\n          this.$logger.warn(\"'extent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.imgExtent) {\n          this.$logger.warn(\"'imgExtent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.loadFunc) {\n          this.$logger.warn(\"'loadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.imgLoadFunc) {\n          this.$logger.warn(\"'imgLoadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.size) {\n          this.$logger.warn(\"'size' is deprecated. Use `imageSize` prop instead.\")\n        }\n        if (this.imgSize) {\n          this.$logger.warn(\"'imgSize' is deprecated. Use `imageSize` prop instead.\")\n        }\n      }\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.extent) {\n          this.$logger.warn(\"'extent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.imgExtent) {\n          this.$logger.warn(\"'imgExtent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.loadFunc) {\n          this.$logger.warn(\"'loadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.imgLoadFunc) {\n          this.$logger.warn(\"'imgLoadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.size) {\n          this.$logger.warn(\"'size' is deprecated. Use `imageSize` prop instead.\")\n        }\n        if (this.imgSize) {\n          this.$logger.warn(\"'imgSize' is deprecated. Use `imageSize` prop instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {ImageStatic}\n       * @protected\n       */\n      createSource () {\n        return new ImageStaticSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/ImageStatic\n          crossOrigin: this.crossOrigin,\n          imageExtent: this.inputImageExtent,\n          imageLoadFunction: this.inputImageLoadFunction,\n          imageSize: this.inputImageSize,\n          imageSmoothing: this.imageSmoothing,\n          url: this.url,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.url)\n      },\n      getImageExtent () {\n        return coalesce(this.$source?.getImageExtent(), this.inputImageExtent)\n      },\n      stateChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { ImageWMS as ImageWMSSource } from 'ol/source'\n  import { imageSource, makeChangeOrRecreateWatchers, wmsSource } from '../../mixins'\n  import { and, assert, coalesce, isEmpty, isFunction, isString, negate, noop } from '../../utils'\n\n  const validateUrl = /*#__PURE__*/and(isString, negate(isEmpty))\n\n  export default {\n    name: 'VlSourceImageWms',\n    mixins: [\n      wmsSource,\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageArcGISRest\n      crossOrigin: String,\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imageLoadFunc: Function,\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      ratio: {\n        type: Number,\n        default: 1.5,\n      },\n      url: {\n        type: String,\n        required: true,\n        validator: validateUrl,\n      },\n    },\n    data () {\n      return {\n        currentImageLoadFunction: this.imageLoadFunction,\n        currentUrl: this.url,\n      }\n    },\n    computed: {\n      inputImageLoadFunction () {\n        return this.imageLoadFunction || this.imageLoadFunc\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentUrl !== this.$source.getUrl()) {\n          this.currentUrl = this.$source.getUrl()\n        }\n        if (this.currentImageLoadFunction !== this.$source.getImageLoadFunction()) {\n          this.currentImageLoadFunction = this.$source.getImageLoadFunction()\n        }\n      },\n      url (value) {\n        this.setUrl(value)\n      },\n      currentUrl (value) {\n        if (value === this.url) return\n\n        this.$emit('update:url', value)\n      },\n      inputImageLoadFunction (value) {\n        this.setImageLoadFunction(value)\n      },\n      currentImageLoadFunc (value) {\n        if (value === this.imageLoadFunction) return\n\n        this.$emit('update:imageLoadFunction', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'imageSmoothing',\n        'ratio',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n\n      this.currentImageLoadFunction = this.inputImageLoadFunction\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ImageWMSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/Image\n          resolutions: this.inputResolutions,\n          // ol/source/ImageWMS\n          crossOrigin: this.crossOrigin,\n          hidpi: this.hidpi,\n          serverType: this.serverType,\n          imageLoadFunction: this.currentImageLoadFunction,\n          imageSmoothing: this.imageSmoothing,\n          params: this.currentParams,\n          ratio: this.ratio,\n          url: this.currentUrl,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.currentUrl)\n      },\n      setUrl (url) {\n        assert(validateUrl(url), 'Invalid url')\n\n        if (url !== this.currentUrl) {\n          this.currentUrl = url\n        }\n        if (this.$source && url !== this.$source.getUrl()) {\n          this.$source.setUrls(url)\n        }\n      },\n      getImageLoadFunction () {\n        return coalesce(this.$source?.getImageLoadFunction(), this.currentImageLoadFunction)\n      },\n      setImageLoadFunction (func) {\n        assert(isFunction(func), 'Invalid image load function')\n\n        if (func !== this.currentImageLoadFunction) {\n          this.currentImageLoadFunction = func\n        }\n        if (this.$source && func !== this.$source.getImageLoadFunction()) {\n          this.$source.setImageLoadFunction(func)\n        }\n      },\n      stateChanged: noop,\n    },\n  }\n","<script>\n  import { ImageWMS as ImageWMSSource } from 'ol/source'\n  import { imageSource, makeChangeOrRecreateWatchers, wmsSource } from '../../mixins'\n  import { and, assert, coalesce, isEmpty, isFunction, isString, negate, noop } from '../../utils'\n\n  const validateUrl = /*#__PURE__*/and(isString, negate(isEmpty))\n\n  export default {\n    name: 'VlSourceImageWms',\n    mixins: [\n      wmsSource,\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageArcGISRest\n      crossOrigin: String,\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imageLoadFunc: Function,\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      ratio: {\n        type: Number,\n        default: 1.5,\n      },\n      url: {\n        type: String,\n        required: true,\n        validator: validateUrl,\n      },\n    },\n    data () {\n      return {\n        currentImageLoadFunction: this.imageLoadFunction,\n        currentUrl: this.url,\n      }\n    },\n    computed: {\n      inputImageLoadFunction () {\n        return this.imageLoadFunction || this.imageLoadFunc\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentUrl !== this.$source.getUrl()) {\n          this.currentUrl = this.$source.getUrl()\n        }\n        if (this.currentImageLoadFunction !== this.$source.getImageLoadFunction()) {\n          this.currentImageLoadFunction = this.$source.getImageLoadFunction()\n        }\n      },\n      url (value) {\n        this.setUrl(value)\n      },\n      currentUrl (value) {\n        if (value === this.url) return\n\n        this.$emit('update:url', value)\n      },\n      inputImageLoadFunction (value) {\n        this.setImageLoadFunction(value)\n      },\n      currentImageLoadFunc (value) {\n        if (value === this.imageLoadFunction) return\n\n        this.$emit('update:imageLoadFunction', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'imageSmoothing',\n        'ratio',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n\n      this.currentImageLoadFunction = this.inputImageLoadFunction\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ImageWMSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/Image\n          resolutions: this.inputResolutions,\n          // ol/source/ImageWMS\n          crossOrigin: this.crossOrigin,\n          hidpi: this.hidpi,\n          serverType: this.serverType,\n          imageLoadFunction: this.currentImageLoadFunction,\n          imageSmoothing: this.imageSmoothing,\n          params: this.currentParams,\n          ratio: this.ratio,\n          url: this.currentUrl,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.currentUrl)\n      },\n      setUrl (url) {\n        assert(validateUrl(url), 'Invalid url')\n\n        if (url !== this.currentUrl) {\n          this.currentUrl = url\n        }\n        if (this.$source && url !== this.$source.getUrl()) {\n          this.$source.setUrls(url)\n        }\n      },\n      getImageLoadFunction () {\n        return coalesce(this.$source?.getImageLoadFunction(), this.currentImageLoadFunction)\n      },\n      setImageLoadFunction (func) {\n        assert(isFunction(func), 'Invalid image load function')\n\n        if (func !== this.currentImageLoadFunction) {\n          this.currentImageLoadFunction = func\n        }\n        if (this.$source && func !== this.$source.getImageLoadFunction()) {\n          this.$source.setImageLoadFunction(func)\n        }\n      },\n      stateChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { Vector as VectorLayer } from 'ol/layer'\n  import { vectorLayer } from '../../mixins'\n\n  /**\n   * Layer for data that is rendered client-side.\n   */\n  export default {\n    name: 'VlLayerVector',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      /**\n       * @deprecated Use `vl-layer-vector-image` to render vector layer as image\n       * @todo remove in v0.13.x\n       */\n      renderMode: String,\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.renderMode) {\n          this.$logger.warn(\"'renderMode' is deprecated. Use vl-layer-vector-image to render vector layer as image\")\n        }\n      }\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.renderMode) {\n          this.$logger.warn(\"'renderMode' is deprecated. Use vl-layer-vector-image to render vector layer as image\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {module:ol/layer/Vector~VectorLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n        })\n      },\n    },\n  }\n","<script>\n  import { Vector as VectorLayer } from 'ol/layer'\n  import { vectorLayer } from '../../mixins'\n\n  /**\n   * Layer for data that is rendered client-side.\n   */\n  export default {\n    name: 'VlLayerVector',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      /**\n       * @deprecated Use `vl-layer-vector-image` to render vector layer as image\n       * @todo remove in v0.13.x\n       */\n      renderMode: String,\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.renderMode) {\n          this.$logger.warn(\"'renderMode' is deprecated. Use vl-layer-vector-image to render vector layer as image\")\n        }\n      }\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.renderMode) {\n          this.$logger.warn(\"'renderMode' is deprecated. Use vl-layer-vector-image to render vector layer as image\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {module:ol/layer/Vector~VectorLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { vectorSource } from '../../mixins'\n\n  export default {\n    name: 'VlSourceVector',\n    mixins: [\n      vectorSource,\n    ],\n  }\n","<script>\n  import { vectorSource } from '../../mixins'\n\n  export default {\n    name: 'VlSourceVector',\n    mixins: [\n      vectorSource,\n    ],\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { View } from 'ol'\n  import { get as getProj } from 'ol/proj'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs } from 'rxjs/operators'\n  import { makeChangeOrRecreateWatchers, olCmp, projTransforms, waitForMap } from '../../mixins'\n  import {\n    EPSG_3857,\n    getViewId,\n    initializeView,\n    isGeoJSONGeometry,\n    roundExtent,\n    roundPointCoords,\n    setViewId,\n  } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, assert, coalesce, isArray, isEqual, isFunction, isNumber, noop } from '../../utils'\n\n  /**\n   * Represents a simple **2D view** of the map. This is the component to act upon to change the **center**,\n   * **resolution**, and **rotation** of the map.\n   */\n  export default {\n    name: 'VlView',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty () {\n        return this.vmId\n      },\n    },\n    props: {\n      /**\n       * @type {number[]}\n       */\n      center: {\n        type: Array,\n        default: () => [0, 0],\n        validator: value => value.length === 2 && value.every(isNumber),\n      },\n      /**\n       * @type {boolean}\n       */\n      constrainOnlyCenter: Boolean,\n      /**\n       * @type {number[]|undefined}\n       */\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      /**\n       * @type {boolean}\n       */\n      smoothExtentConstraint: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {number}\n       */\n      rotation: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {boolean}\n       */\n      enableRotation: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {boolean|number}\n       */\n      constrainRotation: {\n        type: [Boolean, Number],\n        default: true,\n      },\n      /**\n       * @type {number|undefined}\n       */\n      resolution: Number,\n      /**\n       * @type {number[]|undefined}\n       */\n      resolutions: {\n        type: Array,\n        validator: value => value.every(isNumber),\n      },\n      /**\n       * @type {number|undefined}\n       */\n      maxResolution: Number,\n      /**\n       * @type {number|undefined}\n       */\n      minResolution: Number,\n      /**\n       * @type {boolean}\n       */\n      constrainResolution: Boolean,\n      /**\n       * @type {boolean}\n       */\n      smoothResolutionConstraint: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {number}\n       */\n      zoom: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {number}\n       */\n      zoomFactor: {\n        type: Number,\n        default: 2,\n      },\n      /**\n       * @type {number}\n       */\n      maxZoom: {\n        type: Number,\n        default: 28,\n      },\n      /**\n       * @type {number}\n       */\n      minZoom: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {boolean}\n       */\n      multiWorld: Boolean,\n      /**\n       * @type {string}\n       */\n      projection: {\n        type: String,\n        default: EPSG_3857,\n        validator: value => getProj(value) != null,\n      },\n      showFullExtent: Boolean,\n    },\n    data () {\n      return {\n        dataProjection: this.projection,\n        currentProjection: this.projection,\n        currentCenterViewProj: roundPointCoords(this.center),\n        currentZoom: this.zoom,\n        currentRotation: this.rotation,\n        currentResolution: this.resolution,\n        currentMinZoom: this.minZoom,\n        currentMaxZoom: this.maxZoom,\n        currentResolutions: this.resolutions?.slice(),\n        currentMaxResolution: this.maxResolution,\n        currentMinResolution: this.minResolution,\n      }\n    },\n    computed: {\n      centerDataProj () {\n        return roundPointCoords(this.center)\n      },\n      centerViewProj () {\n        return this.pointToViewProj(this.center)\n      },\n      currentCenterDataProj () {\n        return this.pointToDataProj(this.currentCenterViewProj)\n      },\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      inputResolutions () {\n        return this.resolutions?.slice()\n      },\n      visibleExtentDataProj () {\n        if (!this.rev) return\n\n        return this.getExtent()?.slice()\n      },\n      visibleExtentViewProj () {\n        if (!this.rev) return\n\n        return this.getExtent(true)?.slice()\n      },\n      animating () {\n        return !!(this.rev && this.getAnimating())\n      },\n      interacting () {\n        return !!(this.rev && this.getInteracting())\n      },\n      resolvedViewProjection () {\n        return this.currentProjection\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$view) return\n\n        if (this.currentProjection !== this.$view.getProjection().getCode()) {\n          this.currentProjection = this.$view.getProjection().getCode()\n        }\n        if (!isEqual(this.currentCenterViewProj, roundPointCoords(this.$view.getCenter()))) {\n          this.currentCenterViewProj = roundPointCoords(this.$view.getCenter())\n        }\n        if (this.currentZoom !== this.$view.getZoom()) {\n          this.currentZoom = this.$view.getZoom()\n        }\n        if (this.currentRotation !== this.$view.getRotation()) {\n          this.currentRotation = this.$view.getRotation()\n        }\n        if (this.currentResolution !== this.$view.getResolution()) {\n          this.currentResolution = this.$view.getResolution()\n        }\n        if (this.currentMinZoom !== this.$view.getMinZoom()) {\n          this.currentMinZoom = this.$view.getMinZoom()\n        }\n        if (this.currentMaxZoom !== this.$view.getMaxZoom()) {\n          this.currentMaxZoom = this.$view.getMaxZoom()\n        }\n        if (!isEqual(this.currentResolutions, this.$view.getResolutions())) {\n          this.currentResolutions = this.$view.getResolutions()\n        }\n        if (this.currentMaxResolution !== this.$view.getMaxResolution()) {\n          this.currentMaxResolution = this.$view.getMaxResolution()\n        }\n        if (this.currentMinResolution !== this.$view.getMinResolution()) {\n          this.currentMinResolution = this.$view.getMinResolution()\n        }\n      },\n      centerViewProj: {\n        deep: true,\n        handler (value) {\n          if (this.getAnimating()) return\n\n          this.setCenter(value, true)\n        },\n      },\n      currentCenterDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.centerDataProj)) return\n\n          this.$emit('update:center', value.slice())\n        },\n      },\n      rotation (value) {\n        if (this.getAnimating()) return\n\n        this.setRotation(value)\n      },\n      currentRotation (value) {\n        if (value === this.rotation) return\n\n        this.$emit('update:rotation', value)\n      },\n      resolution (value) {\n        if (this.getAnimating()) return\n\n        this.setResolution(value)\n      },\n      currentResolution (value) {\n        if (value === this.resolution) return\n\n        this.$emit('update:resolution', value)\n      },\n      constrainResolution (value) {\n        this.setConstrainResolution(value)\n      },\n      zoom (value) {\n        if (this.getAnimating()) return\n\n        this.setZoom(value)\n      },\n      currentZoom (value) {\n        if (value === this.zoom) return\n\n        this.$emit('update:zoom', value)\n      },\n      minZoom (value) {\n        this.setMinZoom(value)\n      },\n      currentMinZoom (value) {\n        if (value === this.minZoom) return\n\n        this.$emit('update:minZoom', value)\n      },\n      maxZoom (value) {\n        this.setMaxZoom(value)\n      },\n      currentMaxZoom (value) {\n        if (value === this.maxZoom) return\n\n        this.$emit('update:maxZoom', value)\n      },\n      inputResolutions: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.currentResolutions)) return\n\n          if (process.env.VUELAYERS_DEBUG) {\n            this.$logger.log(\n              'resolutions changed, scheduling recreate... %O ===> %O',\n              this.currentResolutions,\n              value,\n            )\n          }\n\n          this.currentResolutions = value?.slice()\n\n          return this.scheduleRecreate()\n        },\n      },\n      currentResolutions: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputResolutions)) return\n\n          this.$emit('update:resolutions', value?.slice())\n        },\n      },\n      maxResolution (value) {\n        if (value === this.currentMaxResolution) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'maxResolution changed, scheduling recreate... %O ===> %O',\n            this.currentMaxResolution,\n            value,\n          )\n        }\n\n        this.currentMaxResolution = value\n\n        return this.scheduleRecreate()\n      },\n      currentMaxResolution (value) {\n        if (value === this.maxResolution) return\n\n        this.$emit('update:maxResolution', value)\n      },\n      minResolution (value) {\n        if (value === this.currentMinResolution) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'minResolution changed, scheduling recreate... %O ===> %O',\n            this.currentMinResolution,\n            value,\n          )\n        }\n\n        this.currentMinResolution = value\n\n        return this.scheduleRecreate()\n      },\n      currentMinResolution (value) {\n        if (value === this.minResolution) return\n\n        this.$emit('update:minResolution', value)\n      },\n      projection (value) {\n        if (value === this.currentProjection) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'projection changed, scheduling recreate... %O ===> %O',\n            this.currentProjection,\n            value,\n          )\n        }\n\n        this.currentProjection = this.dataProjection = value\n        // reset current resolution fields to inputs\n        // so zoom fields will take precedence\n        this.currentResolution = this.resolution\n        this.currentResolutions = this.inputResolutions?.slice()\n        this.currentMaxResolution = this.maxResolution\n        this.currentMinResolution = this.minResolution\n\n        return this.scheduleRecreate()\n      },\n      currentProjection (value) {\n        if (value === this.projection) return\n\n        this.$emit('update:projection', value)\n      },\n      animating (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:animating', value)\n      },\n      interacting (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:interacting', value)\n      },\n      visibleExtentDataProj: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:visibleExtent', value?.slice())\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'constrainOnlyCenter',\n        'smoothExtentConstraint',\n        'enableRotation',\n        'constrainRotation',\n        'constrainResolution',\n        'smoothResolutionConstraint',\n        'zoomFactor',\n        'multiWorld',\n        'extentViewProj',\n      ], [\n        'extentViewProj',\n      ]),\n    },\n    created () {\n      this::defineServices()\n\n      this.currentCenterViewProj = this.centerViewProj.slice()\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/View~View}\n       * @protected\n       */\n      createOlObject () {\n        const view = new View({\n          center: this.currentCenterViewProj,\n          constrainOnlyCenter: this.constrainOnlyCenter,\n          extent: this.extentViewProj,\n          smoothExtentConstraint: this.smoothExtentConstraint,\n          rotation: this.currentRotation,\n          enableRotation: this.enableRotation,\n          constrainRotation: this.constrainRotation,\n          resolution: this.currentResolution,\n          resolutions: this.currentResolutions,\n          maxResolution: this.currentMaxResolution,\n          minResolution: this.currentMinResolution,\n          constrainResolution: this.constrainResolution,\n          smoothResolutionConstraint: this.smoothResolutionConstraint,\n          zoom: this.currentZoom,\n          zoomFactor: this.zoomFactor,\n          maxZoom: this.currentMaxZoom,\n          minZoom: this.currentMinZoom,\n          multiWorld: this.multiWorld,\n          projection: this.currentProjection,\n          showFullExtent: this.showFullExtent,\n        })\n        initializeView(view, this.currentId)\n\n        return view\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$viewContainer?.setView(this)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      async unmount () {\n        if (this.$viewContainer?.getViewVm() === this) {\n          this.$viewContainer.setView(null)\n        }\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToEvents()\n      },\n      /**\n       * @return {*}\n       * @protected\n       */\n      getIdInternal () {\n        return getViewId(this.$view)\n      },\n      /**\n       * @param {*} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setViewId(this.$view, id)\n      },\n      /**\n       * @return {Promise<module:ol/View~View>}\n       */\n      resolveView: olCmp.methods.resolveOlObject,\n      /**\n       * @see {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#animate}\n       * @param {...(module:ol/View~AnimationOptions|function(boolean))} args\n       * @return {Promise<boolean>} Resolves when animation completes\n       */\n      async animate (...args) {\n        let cb = noop\n        if (isFunction(args[args.length - 1])) {\n          cb = args[args.length - 1]\n          args = args.slice(0, args.length - 1)\n        }\n        args.forEach(opts => {\n          if (!isArray(opts.center)) return\n          if (!opts.viewProj) {\n            opts.center = this.pointToViewProj(opts.center)\n          }\n        })\n\n        const view = await this.resolveView()\n\n        return new Promise(resolve => {\n          view.animate(...args, complete => {\n            cb(complete)\n            resolve(complete)\n          })\n        })\n      },\n      /**\n       * @see {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#fit}\n       * @param {Object|module:ol/geom/SimpleGeometry~SimpleGeometry|module:ol/extent~Extent} geometryOrExtent\n       * @param {module:ol/View~FitOptions} [options]\n       * @return {Promise<boolean>} Resolves when view changes\n       */\n      async fit (geometryOrExtent, options = {}) {\n        // transform from GeoJSON, vl-feature to ol.Feature\n        if (isGeoJSONGeometry(geometryOrExtent)) {\n          if (options.viewProj) {\n            geometryOrExtent = this.readGeometryInViewProj(geometryOrExtent)\n          } else {\n            geometryOrExtent = this.readGeometryInDataProj(geometryOrExtent)\n          }\n        } else if (isFunction(geometryOrExtent.resolveOlObject)) {\n          geometryOrExtent = await geometryOrExtent.resolveOlObject()\n        }\n\n        const cb = options.callback || noop\n        const view = await this.resolveView()\n\n        return new Promise(resolve => {\n          view.fit(geometryOrExtent, {\n            ...options,\n            callback: complete => {\n              cb(complete)\n              resolve(complete)\n            },\n          })\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async cancelAnimations () {\n        (await this.resolveView()).cancelAnimations()\n      },\n      /**\n       * @return {boolean}\n       */\n      getAnimating () {\n        return coalesce(this.$view?.getAnimating(), false)\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async beginInteraction () {\n        (await this.resolveView()).beginInteraction()\n      },\n      /**\n       * @param {number} [duration]\n       * @param {number} [resolutionDirection]\n       * @param {number[]} [anchor]\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      async endInteraction (duration, resolutionDirection, anchor, viewProj = false) {\n        if (!viewProj) {\n          anchor = this.pointToViewProj(anchor)\n        }\n\n        (await this.resolveView()).endInteraction(duration, resolutionDirection, anchor)\n      },\n      /**\n       * @return {boolean}\n       */\n      getInteracting () {\n        return coalesce(this.$view?.getInteracting(), false)\n      },\n      /**\n       * @param {number[]|undefined} [size]\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async calculateExtent (size, viewProj = false) {\n        const extent = (await this.resolveView()).calculateExtent(size)\n        if (viewProj) {\n          return roundExtent(extent)\n        }\n\n        return this.extentToDataProj(extent)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]|undefined}\n       */\n      getExtent (viewProj = false) {\n        if (!this.$view) return\n\n        const extent = this.$view.calculateExtent()\n        if (viewProj) return roundExtent(extent)\n\n        return this.extentToDataProj(extent)\n      },\n      /**\n       * @param {number[]} coordinate\n       * @param {number[]} size\n       * @param {number[]} position\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      async centerOn (coordinate, size, position, viewProj = false) {\n        if (!viewProj) {\n          coordinate = this.pointToViewProj(coordinate)\n        }\n\n        (await this.resolveView()).centerOn(coordinate, size, position)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCenter (viewProj = false) {\n        if (!this.$view) {\n          return viewProj ? this.currentCenterViewProj : this.currentCenterDataProj\n        }\n\n        const center = this.$view.getCenter()\n        if (viewProj) return center\n\n        return this.pointToDataProj(center)\n      },\n      /**\n       * @param {number[]} center\n       * @param {boolean} [viewProj=false]\n       */\n      setCenter (center, viewProj = false) {\n        assert(isArray(center) && center.length === 2, 'Invalid center')\n\n        if (viewProj) {\n          center = roundPointCoords(center)\n        } else {\n          center = this.pointToViewProj(center)\n        }\n\n        if (this.$view && !isEqual(center, roundPointCoords(this.$view.getCenter()))) {\n          this.$view.setCenter(center)\n        } else if (!isEqual(center, this.currentCenterViewProj)) {\n          this.currentCenterViewProj = center\n        }\n      },\n      /**\n       * @return {number}\n       */\n      getResolution () {\n        return coalesce(this.$view?.getResolution(), this.currentResolution)\n      },\n      /**\n       * @param {number} resolution\n       */\n      setResolution (resolution) {\n        resolution = Number(resolution)\n        assert(isNumber(resolution), 'Invalid resolution')\n\n        if (this.$view && resolution !== this.$view.getResolution()) {\n          this.$view.setResolution(resolution)\n        } else if (resolution !== this.currentResolution) {\n          this.currentResolution = resolution\n        }\n      },\n      /**\n       * @param {number[]} extent\n       * @param {number[]} size\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number>}\n       */\n      async getResolutionForExtent (extent, size, viewProj = false) {\n        if (!viewProj) {\n          extent = this.extentToViewProj(extent)\n        }\n\n        return (await this.resolveView()).getResolutionForExtent(extent, size)\n      },\n      /**\n       * @param {number} zoom\n       * @return {Promise<number>}\n       */\n      async getResolutionForZoom (zoom) {\n        return (await this.resolveView()).getResolutionForZoom(zoom)\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getResolutions () {\n        return coalesce(this.$view?.getResolutions(), this.currentResolutions)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMaxResolution () {\n        return coalesce(this.$view?.getMaxResolution(), this.currentMaxResolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMinResolution () {\n        return coalesce(this.$view?.getMinResolution(), this.currentMinResolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getZoom () {\n        return coalesce(this.$view?.getZoom(), this.currentZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid zoom')\n\n        if (this.$view && zoom !== this.$view.getZoom()) {\n          this.$view.setZoom(zoom)\n        } else if (zoom !== this.currentZoom) {\n          this.currentZoom = zoom\n        }\n      },\n      /**\n       * @param {number} resolution\n       * @return {Promise<number|undefined>}\n       */\n      async getZoomForResolution (resolution) {\n        return (await this.resolveView()).getZoomForResolution(resolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMaxZoom () {\n        return coalesce(this.$view?.getMaxZoom(), this.currentMaxZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setMaxZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid maxZoom')\n\n        if (this.$view && zoom !== this.$view.getMaxZoom()) {\n          this.$view.setMaxZoom(zoom)\n        } else if (zoom !== this.currentMaxZoom) {\n          this.currentMaxZoom = zoom\n        }\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMinZoom () {\n        return coalesce(this.$view?.getMinZoom(), this.currentMinZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setMinZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid minZoom')\n\n        if (this.$view && zoom !== this.$view.getMinZoom()) {\n          this.$view.setMinZoom(zoom)\n        } else if (zoom !== this.currentMinZoom) {\n          this.currentMinZoom = zoom\n        }\n      },\n      /**\n       * @return {module:ol/proj/ProjectionLike}\n       */\n      getProjection () {\n        return coalesce(this.$view?.getProjection(), getProj(this.currentProjection))\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getRotation () {\n        return coalesce(this.$view?.getRotation(), this.currentRotation)\n      },\n      /**\n       * @param {number} rotation\n       */\n      setRotation (rotation) {\n        rotation = Number(rotation)\n        assert(isNumber(rotation), 'Invalid rotation')\n\n        if (this.$view && rotation !== this.$view.getRotation()) {\n          this.$view.setRotation(rotation)\n        } else if (rotation !== this.currentRotation) {\n          this.currentRotation = rotation\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * @type {module:ol/View~View|undefined}\n       */\n      $view: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewContainer: {\n        enumerable: true,\n        get: () => this.$services?.viewContainer,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n    })\n  }\n\n  /**\n   * Subscribe to OpenLayers significant events\n   * @return {void}\n   * @private\n   */\n  async function subscribeToEvents () {\n    const setterKey = addPrefix('set')\n    // const resolutionChanges = obsFromOlChangeEvent(this.$view, 'resolution', true)\n    // const zoomChanges = resolutionChanges.pipe(\n    //   mapObs(() => ({\n    //     prop: 'zoom',\n    //     value: this.getZoom(),\n    //   })),\n    //   distinctUntilKeyChanged('value'),\n    // )\n    const propChanges = mergeObs(\n      obsFromOlChangeEvent(this.$view, [\n        'id',\n        // 'rotation',\n        // 'center',\n      ], true),\n      // resolutionChanges,\n      // zoomChanges,\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: val => {\n          const args = [val]\n          if (evt.prop === 'center') {\n            args.push(true)\n          }\n          this[setterKey(evt.prop)](...args)\n        },\n      })),\n    )\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot\n      :center=\"currentCenterDataProj\"\n      :zoom=\"currentZoom\"\n      :resolution=\"currentResolution\"\n      :rotation=\"currentRotation\"\n      :extent=\"visibleExtentDataProj\" />\n  </i>\n</template>\n\n<script>\n  import { View } from 'ol'\n  import { get as getProj } from 'ol/proj'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs } from 'rxjs/operators'\n  import { makeChangeOrRecreateWatchers, olCmp, projTransforms, waitForMap } from '../../mixins'\n  import {\n    EPSG_3857,\n    getViewId,\n    initializeView,\n    isGeoJSONGeometry,\n    roundExtent,\n    roundPointCoords,\n    setViewId,\n  } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, assert, coalesce, isArray, isEqual, isFunction, isNumber, noop } from '../../utils'\n\n  /**\n   * Represents a simple **2D view** of the map. This is the component to act upon to change the **center**,\n   * **resolution**, and **rotation** of the map.\n   */\n  export default {\n    name: 'VlView',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty () {\n        return this.vmId\n      },\n    },\n    props: {\n      /**\n       * @type {number[]}\n       */\n      center: {\n        type: Array,\n        default: () => [0, 0],\n        validator: value => value.length === 2 && value.every(isNumber),\n      },\n      /**\n       * @type {boolean}\n       */\n      constrainOnlyCenter: Boolean,\n      /**\n       * @type {number[]|undefined}\n       */\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      /**\n       * @type {boolean}\n       */\n      smoothExtentConstraint: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {number}\n       */\n      rotation: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {boolean}\n       */\n      enableRotation: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {boolean|number}\n       */\n      constrainRotation: {\n        type: [Boolean, Number],\n        default: true,\n      },\n      /**\n       * @type {number|undefined}\n       */\n      resolution: Number,\n      /**\n       * @type {number[]|undefined}\n       */\n      resolutions: {\n        type: Array,\n        validator: value => value.every(isNumber),\n      },\n      /**\n       * @type {number|undefined}\n       */\n      maxResolution: Number,\n      /**\n       * @type {number|undefined}\n       */\n      minResolution: Number,\n      /**\n       * @type {boolean}\n       */\n      constrainResolution: Boolean,\n      /**\n       * @type {boolean}\n       */\n      smoothResolutionConstraint: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {number}\n       */\n      zoom: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {number}\n       */\n      zoomFactor: {\n        type: Number,\n        default: 2,\n      },\n      /**\n       * @type {number}\n       */\n      maxZoom: {\n        type: Number,\n        default: 28,\n      },\n      /**\n       * @type {number}\n       */\n      minZoom: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {boolean}\n       */\n      multiWorld: Boolean,\n      /**\n       * @type {string}\n       */\n      projection: {\n        type: String,\n        default: EPSG_3857,\n        validator: value => getProj(value) != null,\n      },\n      showFullExtent: Boolean,\n    },\n    data () {\n      return {\n        dataProjection: this.projection,\n        currentProjection: this.projection,\n        currentCenterViewProj: roundPointCoords(this.center),\n        currentZoom: this.zoom,\n        currentRotation: this.rotation,\n        currentResolution: this.resolution,\n        currentMinZoom: this.minZoom,\n        currentMaxZoom: this.maxZoom,\n        currentResolutions: this.resolutions?.slice(),\n        currentMaxResolution: this.maxResolution,\n        currentMinResolution: this.minResolution,\n      }\n    },\n    computed: {\n      centerDataProj () {\n        return roundPointCoords(this.center)\n      },\n      centerViewProj () {\n        return this.pointToViewProj(this.center)\n      },\n      currentCenterDataProj () {\n        return this.pointToDataProj(this.currentCenterViewProj)\n      },\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      inputResolutions () {\n        return this.resolutions?.slice()\n      },\n      visibleExtentDataProj () {\n        if (!this.rev) return\n\n        return this.getExtent()?.slice()\n      },\n      visibleExtentViewProj () {\n        if (!this.rev) return\n\n        return this.getExtent(true)?.slice()\n      },\n      animating () {\n        return !!(this.rev && this.getAnimating())\n      },\n      interacting () {\n        return !!(this.rev && this.getInteracting())\n      },\n      resolvedViewProjection () {\n        return this.currentProjection\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$view) return\n\n        if (this.currentProjection !== this.$view.getProjection().getCode()) {\n          this.currentProjection = this.$view.getProjection().getCode()\n        }\n        if (!isEqual(this.currentCenterViewProj, roundPointCoords(this.$view.getCenter()))) {\n          this.currentCenterViewProj = roundPointCoords(this.$view.getCenter())\n        }\n        if (this.currentZoom !== this.$view.getZoom()) {\n          this.currentZoom = this.$view.getZoom()\n        }\n        if (this.currentRotation !== this.$view.getRotation()) {\n          this.currentRotation = this.$view.getRotation()\n        }\n        if (this.currentResolution !== this.$view.getResolution()) {\n          this.currentResolution = this.$view.getResolution()\n        }\n        if (this.currentMinZoom !== this.$view.getMinZoom()) {\n          this.currentMinZoom = this.$view.getMinZoom()\n        }\n        if (this.currentMaxZoom !== this.$view.getMaxZoom()) {\n          this.currentMaxZoom = this.$view.getMaxZoom()\n        }\n        if (!isEqual(this.currentResolutions, this.$view.getResolutions())) {\n          this.currentResolutions = this.$view.getResolutions()\n        }\n        if (this.currentMaxResolution !== this.$view.getMaxResolution()) {\n          this.currentMaxResolution = this.$view.getMaxResolution()\n        }\n        if (this.currentMinResolution !== this.$view.getMinResolution()) {\n          this.currentMinResolution = this.$view.getMinResolution()\n        }\n      },\n      centerViewProj: {\n        deep: true,\n        handler (value) {\n          if (this.getAnimating()) return\n\n          this.setCenter(value, true)\n        },\n      },\n      currentCenterDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.centerDataProj)) return\n\n          this.$emit('update:center', value.slice())\n        },\n      },\n      rotation (value) {\n        if (this.getAnimating()) return\n\n        this.setRotation(value)\n      },\n      currentRotation (value) {\n        if (value === this.rotation) return\n\n        this.$emit('update:rotation', value)\n      },\n      resolution (value) {\n        if (this.getAnimating()) return\n\n        this.setResolution(value)\n      },\n      currentResolution (value) {\n        if (value === this.resolution) return\n\n        this.$emit('update:resolution', value)\n      },\n      constrainResolution (value) {\n        this.setConstrainResolution(value)\n      },\n      zoom (value) {\n        if (this.getAnimating()) return\n\n        this.setZoom(value)\n      },\n      currentZoom (value) {\n        if (value === this.zoom) return\n\n        this.$emit('update:zoom', value)\n      },\n      minZoom (value) {\n        this.setMinZoom(value)\n      },\n      currentMinZoom (value) {\n        if (value === this.minZoom) return\n\n        this.$emit('update:minZoom', value)\n      },\n      maxZoom (value) {\n        this.setMaxZoom(value)\n      },\n      currentMaxZoom (value) {\n        if (value === this.maxZoom) return\n\n        this.$emit('update:maxZoom', value)\n      },\n      inputResolutions: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.currentResolutions)) return\n\n          if (process.env.VUELAYERS_DEBUG) {\n            this.$logger.log(\n              'resolutions changed, scheduling recreate... %O ===> %O',\n              this.currentResolutions,\n              value,\n            )\n          }\n\n          this.currentResolutions = value?.slice()\n\n          return this.scheduleRecreate()\n        },\n      },\n      currentResolutions: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputResolutions)) return\n\n          this.$emit('update:resolutions', value?.slice())\n        },\n      },\n      maxResolution (value) {\n        if (value === this.currentMaxResolution) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'maxResolution changed, scheduling recreate... %O ===> %O',\n            this.currentMaxResolution,\n            value,\n          )\n        }\n\n        this.currentMaxResolution = value\n\n        return this.scheduleRecreate()\n      },\n      currentMaxResolution (value) {\n        if (value === this.maxResolution) return\n\n        this.$emit('update:maxResolution', value)\n      },\n      minResolution (value) {\n        if (value === this.currentMinResolution) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'minResolution changed, scheduling recreate... %O ===> %O',\n            this.currentMinResolution,\n            value,\n          )\n        }\n\n        this.currentMinResolution = value\n\n        return this.scheduleRecreate()\n      },\n      currentMinResolution (value) {\n        if (value === this.minResolution) return\n\n        this.$emit('update:minResolution', value)\n      },\n      projection (value) {\n        if (value === this.currentProjection) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'projection changed, scheduling recreate... %O ===> %O',\n            this.currentProjection,\n            value,\n          )\n        }\n\n        this.currentProjection = this.dataProjection = value\n        // reset current resolution fields to inputs\n        // so zoom fields will take precedence\n        this.currentResolution = this.resolution\n        this.currentResolutions = this.inputResolutions?.slice()\n        this.currentMaxResolution = this.maxResolution\n        this.currentMinResolution = this.minResolution\n\n        return this.scheduleRecreate()\n      },\n      currentProjection (value) {\n        if (value === this.projection) return\n\n        this.$emit('update:projection', value)\n      },\n      animating (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:animating', value)\n      },\n      interacting (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:interacting', value)\n      },\n      visibleExtentDataProj: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:visibleExtent', value?.slice())\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'constrainOnlyCenter',\n        'smoothExtentConstraint',\n        'enableRotation',\n        'constrainRotation',\n        'constrainResolution',\n        'smoothResolutionConstraint',\n        'zoomFactor',\n        'multiWorld',\n        'extentViewProj',\n      ], [\n        'extentViewProj',\n      ]),\n    },\n    created () {\n      this::defineServices()\n\n      this.currentCenterViewProj = this.centerViewProj.slice()\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/View~View}\n       * @protected\n       */\n      createOlObject () {\n        const view = new View({\n          center: this.currentCenterViewProj,\n          constrainOnlyCenter: this.constrainOnlyCenter,\n          extent: this.extentViewProj,\n          smoothExtentConstraint: this.smoothExtentConstraint,\n          rotation: this.currentRotation,\n          enableRotation: this.enableRotation,\n          constrainRotation: this.constrainRotation,\n          resolution: this.currentResolution,\n          resolutions: this.currentResolutions,\n          maxResolution: this.currentMaxResolution,\n          minResolution: this.currentMinResolution,\n          constrainResolution: this.constrainResolution,\n          smoothResolutionConstraint: this.smoothResolutionConstraint,\n          zoom: this.currentZoom,\n          zoomFactor: this.zoomFactor,\n          maxZoom: this.currentMaxZoom,\n          minZoom: this.currentMinZoom,\n          multiWorld: this.multiWorld,\n          projection: this.currentProjection,\n          showFullExtent: this.showFullExtent,\n        })\n        initializeView(view, this.currentId)\n\n        return view\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$viewContainer?.setView(this)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      async unmount () {\n        if (this.$viewContainer?.getViewVm() === this) {\n          this.$viewContainer.setView(null)\n        }\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToEvents()\n      },\n      /**\n       * @return {*}\n       * @protected\n       */\n      getIdInternal () {\n        return getViewId(this.$view)\n      },\n      /**\n       * @param {*} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setViewId(this.$view, id)\n      },\n      /**\n       * @return {Promise<module:ol/View~View>}\n       */\n      resolveView: olCmp.methods.resolveOlObject,\n      /**\n       * @see {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#animate}\n       * @param {...(module:ol/View~AnimationOptions|function(boolean))} args\n       * @return {Promise<boolean>} Resolves when animation completes\n       */\n      async animate (...args) {\n        let cb = noop\n        if (isFunction(args[args.length - 1])) {\n          cb = args[args.length - 1]\n          args = args.slice(0, args.length - 1)\n        }\n        args.forEach(opts => {\n          if (!isArray(opts.center)) return\n          if (!opts.viewProj) {\n            opts.center = this.pointToViewProj(opts.center)\n          }\n        })\n\n        const view = await this.resolveView()\n\n        return new Promise(resolve => {\n          view.animate(...args, complete => {\n            cb(complete)\n            resolve(complete)\n          })\n        })\n      },\n      /**\n       * @see {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#fit}\n       * @param {Object|module:ol/geom/SimpleGeometry~SimpleGeometry|module:ol/extent~Extent} geometryOrExtent\n       * @param {module:ol/View~FitOptions} [options]\n       * @return {Promise<boolean>} Resolves when view changes\n       */\n      async fit (geometryOrExtent, options = {}) {\n        // transform from GeoJSON, vl-feature to ol.Feature\n        if (isGeoJSONGeometry(geometryOrExtent)) {\n          if (options.viewProj) {\n            geometryOrExtent = this.readGeometryInViewProj(geometryOrExtent)\n          } else {\n            geometryOrExtent = this.readGeometryInDataProj(geometryOrExtent)\n          }\n        } else if (isFunction(geometryOrExtent.resolveOlObject)) {\n          geometryOrExtent = await geometryOrExtent.resolveOlObject()\n        }\n\n        const cb = options.callback || noop\n        const view = await this.resolveView()\n\n        return new Promise(resolve => {\n          view.fit(geometryOrExtent, {\n            ...options,\n            callback: complete => {\n              cb(complete)\n              resolve(complete)\n            },\n          })\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async cancelAnimations () {\n        (await this.resolveView()).cancelAnimations()\n      },\n      /**\n       * @return {boolean}\n       */\n      getAnimating () {\n        return coalesce(this.$view?.getAnimating(), false)\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async beginInteraction () {\n        (await this.resolveView()).beginInteraction()\n      },\n      /**\n       * @param {number} [duration]\n       * @param {number} [resolutionDirection]\n       * @param {number[]} [anchor]\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      async endInteraction (duration, resolutionDirection, anchor, viewProj = false) {\n        if (!viewProj) {\n          anchor = this.pointToViewProj(anchor)\n        }\n\n        (await this.resolveView()).endInteraction(duration, resolutionDirection, anchor)\n      },\n      /**\n       * @return {boolean}\n       */\n      getInteracting () {\n        return coalesce(this.$view?.getInteracting(), false)\n      },\n      /**\n       * @param {number[]|undefined} [size]\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async calculateExtent (size, viewProj = false) {\n        const extent = (await this.resolveView()).calculateExtent(size)\n        if (viewProj) {\n          return roundExtent(extent)\n        }\n\n        return this.extentToDataProj(extent)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]|undefined}\n       */\n      getExtent (viewProj = false) {\n        if (!this.$view) return\n\n        const extent = this.$view.calculateExtent()\n        if (viewProj) return roundExtent(extent)\n\n        return this.extentToDataProj(extent)\n      },\n      /**\n       * @param {number[]} coordinate\n       * @param {number[]} size\n       * @param {number[]} position\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      async centerOn (coordinate, size, position, viewProj = false) {\n        if (!viewProj) {\n          coordinate = this.pointToViewProj(coordinate)\n        }\n\n        (await this.resolveView()).centerOn(coordinate, size, position)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCenter (viewProj = false) {\n        if (!this.$view) {\n          return viewProj ? this.currentCenterViewProj : this.currentCenterDataProj\n        }\n\n        const center = this.$view.getCenter()\n        if (viewProj) return center\n\n        return this.pointToDataProj(center)\n      },\n      /**\n       * @param {number[]} center\n       * @param {boolean} [viewProj=false]\n       */\n      setCenter (center, viewProj = false) {\n        assert(isArray(center) && center.length === 2, 'Invalid center')\n\n        if (viewProj) {\n          center = roundPointCoords(center)\n        } else {\n          center = this.pointToViewProj(center)\n        }\n\n        if (this.$view && !isEqual(center, roundPointCoords(this.$view.getCenter()))) {\n          this.$view.setCenter(center)\n        } else if (!isEqual(center, this.currentCenterViewProj)) {\n          this.currentCenterViewProj = center\n        }\n      },\n      /**\n       * @return {number}\n       */\n      getResolution () {\n        return coalesce(this.$view?.getResolution(), this.currentResolution)\n      },\n      /**\n       * @param {number} resolution\n       */\n      setResolution (resolution) {\n        resolution = Number(resolution)\n        assert(isNumber(resolution), 'Invalid resolution')\n\n        if (this.$view && resolution !== this.$view.getResolution()) {\n          this.$view.setResolution(resolution)\n        } else if (resolution !== this.currentResolution) {\n          this.currentResolution = resolution\n        }\n      },\n      /**\n       * @param {number[]} extent\n       * @param {number[]} size\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number>}\n       */\n      async getResolutionForExtent (extent, size, viewProj = false) {\n        if (!viewProj) {\n          extent = this.extentToViewProj(extent)\n        }\n\n        return (await this.resolveView()).getResolutionForExtent(extent, size)\n      },\n      /**\n       * @param {number} zoom\n       * @return {Promise<number>}\n       */\n      async getResolutionForZoom (zoom) {\n        return (await this.resolveView()).getResolutionForZoom(zoom)\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getResolutions () {\n        return coalesce(this.$view?.getResolutions(), this.currentResolutions)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMaxResolution () {\n        return coalesce(this.$view?.getMaxResolution(), this.currentMaxResolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMinResolution () {\n        return coalesce(this.$view?.getMinResolution(), this.currentMinResolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getZoom () {\n        return coalesce(this.$view?.getZoom(), this.currentZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid zoom')\n\n        if (this.$view && zoom !== this.$view.getZoom()) {\n          this.$view.setZoom(zoom)\n        } else if (zoom !== this.currentZoom) {\n          this.currentZoom = zoom\n        }\n      },\n      /**\n       * @param {number} resolution\n       * @return {Promise<number|undefined>}\n       */\n      async getZoomForResolution (resolution) {\n        return (await this.resolveView()).getZoomForResolution(resolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMaxZoom () {\n        return coalesce(this.$view?.getMaxZoom(), this.currentMaxZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setMaxZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid maxZoom')\n\n        if (this.$view && zoom !== this.$view.getMaxZoom()) {\n          this.$view.setMaxZoom(zoom)\n        } else if (zoom !== this.currentMaxZoom) {\n          this.currentMaxZoom = zoom\n        }\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMinZoom () {\n        return coalesce(this.$view?.getMinZoom(), this.currentMinZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setMinZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid minZoom')\n\n        if (this.$view && zoom !== this.$view.getMinZoom()) {\n          this.$view.setMinZoom(zoom)\n        } else if (zoom !== this.currentMinZoom) {\n          this.currentMinZoom = zoom\n        }\n      },\n      /**\n       * @return {module:ol/proj/ProjectionLike}\n       */\n      getProjection () {\n        return coalesce(this.$view?.getProjection(), getProj(this.currentProjection))\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getRotation () {\n        return coalesce(this.$view?.getRotation(), this.currentRotation)\n      },\n      /**\n       * @param {number} rotation\n       */\n      setRotation (rotation) {\n        rotation = Number(rotation)\n        assert(isNumber(rotation), 'Invalid rotation')\n\n        if (this.$view && rotation !== this.$view.getRotation()) {\n          this.$view.setRotation(rotation)\n        } else if (rotation !== this.currentRotation) {\n          this.currentRotation = rotation\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * @type {module:ol/View~View|undefined}\n       */\n      $view: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewContainer: {\n        enumerable: true,\n        get: () => this.$services?.viewContainer,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n    })\n  }\n\n  /**\n   * Subscribe to OpenLayers significant events\n   * @return {void}\n   * @private\n   */\n  async function subscribeToEvents () {\n    const setterKey = addPrefix('set')\n    // const resolutionChanges = obsFromOlChangeEvent(this.$view, 'resolution', true)\n    // const zoomChanges = resolutionChanges.pipe(\n    //   mapObs(() => ({\n    //     prop: 'zoom',\n    //     value: this.getZoom(),\n    //   })),\n    //   distinctUntilKeyChanged('value'),\n    // )\n    const propChanges = mergeObs(\n      obsFromOlChangeEvent(this.$view, [\n        'id',\n        // 'rotation',\n        // 'center',\n      ], true),\n      // resolutionChanges,\n      // zoomChanges,\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: val => {\n          const args = [val]\n          if (evt.prop === 'center') {\n            args.push(true)\n          }\n          this[setterKey(evt.prop)](...args)\n        },\n      })),\n    )\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { Map, View } from 'ol'\n  import MapBrowserEventType from 'ol/MapBrowserEventType'\n  import MapEventType from 'ol/MapEventType'\n  import { get as getProj } from 'ol/proj'\n  import RenderEventType from 'ol/render/EventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { distinctUntilChanged, map as mapObs, tap } from 'rxjs/operators'\n  import {\n    controlsContainer,\n    featuresContainer,\n    FRAME_TIME,\n    interactionsContainer,\n    layersContainer,\n    makeChangeOrRecreateWatchers,\n    olCmp,\n    overlaysContainer,\n    projTransforms,\n  } from '../../mixins'\n  import {\n    EPSG_3857,\n    getControlId,\n    getInteractionId,\n    getLayerId,\n    getMapDataProjection,\n    getMapId,\n    getOverlayId,\n    getViewId,\n    roundPointCoords,\n    setMapDataProjection,\n    setMapId,\n  } from '../../ol-ext'\n  import {\n    bufferDebounceTime,\n    fromOlChangeEvent as obsFromOlChangeEvent,\n    fromOlEvent as obsFromOlEvent,\n    fromVueEvent as obsFromVueEvent,\n    fromVueWatcher as obsFromVueWatcher,\n  } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    clonePlainObject,\n    coalesce,\n    isArray,\n    isEqual,\n    map,\n    mergeDescriptors,\n    omit,\n  } from '../../utils'\n  import { Layer as VectorLayerCmp } from '../vector-layer'\n  import { Source as VectorSourceCmp } from '../vector-source'\n  import ViewCmp from './view.vue'\n\n  /**\n   * Container for **layers**, **interactions**, **controls** and **overlays**. It responsible for viewport\n   * rendering and low level interaction events.\n   *\n   * todo make render function that injects VlView if it is not provided by the user,\n   *      then it can be provided to lower components\n   */\n  export default {\n    name: 'VlMap',\n    components: {\n      ViewCmp,\n      VectorLayerCmp,\n      VectorSourceCmp,\n    },\n    mixins: [\n      projTransforms,\n      layersContainer,\n      controlsContainer,\n      interactionsContainer,\n      overlaysContainer,\n      featuresContainer,\n      olCmp,\n    ],\n    props: {\n      /**\n       * Options for default controls added to the map by default. Set to `false` to disable all map controls. Object\n       * value is used to configure controls.\n       * @type {Object|boolean}\n       * @todo remove when vl-control-* components will be ready\n       */\n      defaultControls: {\n        type: [Object, Boolean],\n        default: true,\n      },\n      /**\n       * Options for default interactions added to the map by default. Object\n       * value is used to configure default interactions.\n       * @type {Object|boolean}\n       */\n      defaultInteractions: {\n        type: [Object, Boolean],\n        default: true,\n      },\n      /**\n       * The element to listen to keyboard events on. For example, if this option is set to `document` the keyboard\n       * interactions will always trigger. If this option is not specified, the element the library listens to keyboard\n       * events on is the component root element.\n       * @type {string|Element|Document|undefined}\n       */\n      keyboardEventTarget: [String, Element, Document],\n      /**\n       * The minimum distance in pixels the cursor must move to be detected as a map move event instead of a click.\n       * Increasing this value can make it easier to click on the map.\n       * @type {number}\n       */\n      moveTolerance: {\n        type: Number,\n        default: 1,\n      },\n      /**\n       * The ratio between physical pixels and device-independent pixels (dips) on the device.\n       * @type {number}\n       */\n      pixelRatio: {\n        type: Number,\n        default: () => window.devicePixelRatio || 1,\n      },\n      /**\n       * Maximum number tiles to load simultaneously.\n       * @type {number}\n       */\n      maxTilesLoading: {\n        type: Number,\n        default: 16,\n      },\n      /**\n       * Root element `tabindex` attribute value. Value should be provided to allow keyboard events on map.\n       * @type {number|string}\n       */\n      tabindex: [String, Number],\n      /**\n       * Projection for input/output coordinates in plain data.\n       * @type {string|undefined}\n       */\n      dataProjection: {\n        type: String,\n        validator: value => getProj(value) != null,\n      },\n      /**\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {boolean}\n       */\n      updateWhileAnimating: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * @type {boolean}\n       */\n      updateWhileInteracting: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        withCustomView: false,\n        size: undefined,\n        currentDataProjection: this.dataProjection,\n      }\n    },\n    computed: {\n      resolvedDataProjection () {\n        return coalesce(\n          this.currentDataProjection,\n          this.dataProjection,\n          this.$options?.dataProjection,\n          this.viewProjection,\n        )\n      },\n      view () {\n        if (!(this.rev && this.$view)) return\n\n        return {\n          id: getViewId(this.$view),\n          type: this.$view.constructor.name,\n        }\n      },\n      /**\n       * @returns {string[]}\n       */\n      layers () {\n        if (!this.rev) return []\n\n        return map(this.getLayers(), layer => ({\n          id: getLayerId(layer),\n          type: layer.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      controls () {\n        if (!this.rev) return []\n\n        return map(this.getControls(), control => ({\n          id: getControlId(control),\n          type: control.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      interactions () {\n        if (!this.rev) return []\n\n        return map(this.getInteractions(), interaction => ({\n          id: getInteractionId(interaction),\n          type: interaction.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      overlays () {\n        if (!this.rev) return []\n\n        return map(this.getOverlays(), overlay => ({\n          id: getOverlayId(overlay),\n          type: overlay.constructor.name,\n        }))\n      },\n      /**\n       * @type {Object[]}\n       */\n      featuresDataProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInDataProj(feature))\n      },\n      /**\n       * @type {Object[]}\n       */\n      featuresViewProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInViewProj(feature))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$map) return\n\n        if (!isEqual(this.size, this.$map.getSize())) {\n          this.size = this.$map.getSize()\n        }\n      },\n      size: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:size', value?.slice())\n        },\n      },\n      defaultControls: {\n        deep: true,\n        handler (value) {\n          this.initDefaultControls(value)\n        },\n      },\n      defaultInteractions: {\n        deep: true,\n        handler (value) {\n          this.initDefaultInteractions(value)\n        },\n      },\n      dataProjection (value) {\n        this.setDataProjection(value)\n      },\n      view: {\n        deep: true,\n        handler (value, prev) {\n          if (value === prev) return\n\n          this.$emit('update:view', value)\n        },\n      },\n      layers: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:layers', value.slice())\n        },\n      },\n      controls: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:controls', value.slice())\n        },\n      },\n      interactions: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:interactions', value.slice())\n        },\n      },\n      overlays: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:overlays', value.slice())\n        },\n      },\n      featuresDataProj: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:features', clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'keyboardEventTarget',\n        'moveTolerance',\n        'pixelRatio',\n        'maxTilesLoading',\n      ]),\n    },\n    created () {\n      /**\n       * @type {module:ol/View~View}\n       * @private\n       */\n      this._view = new View({\n        center: [0, 0],\n        zoom: 2,\n      })\n      /**\n       * @type {Object|undefined}\n       */\n      this._viewVm = undefined\n\n      this::defineServices()\n      // todo wrap controls into components and provide vl-control-default\n      this.initDefaultControls(this.defaultControls)\n      // todo initialize without interactions and provide vl-interaction-default component\n      this.initDefaultInteractions(this.defaultInteractions)\n    },\n    methods: {\n      /**\n       * @return {module:ol/Map~Map}\n       * @protected\n       */\n      async createOlObject () {\n        const map = new Map({\n          pixelRatio: this.pixelRatio,\n          moveTolerance: this.moveTolerance,\n          keyboardEventTarget: this.keyboardEventTarget,\n          maxTilesLoading: this.maxTilesLoading,\n          controls: this.$controlsCollection,\n          interactions: this.$interactionsCollection,\n          layers: this.$layersCollection,\n          overlays: this.$overlaysCollection,\n          view: this.$view,\n        })\n        setMapId(map, this.currentId)\n        setMapDataProjection(map, this.resolvedDataProjection)\n        this.size && map.setSize(this.size)\n\n        return map\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.setTarget(this.$el)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.setTarget(null)\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::layersContainer.methods.subscribeAll()\n        this::controlsContainer.methods.subscribeAll()\n        this::interactionsContainer.methods.subscribeAll()\n        this::overlaysContainer.methods.subscribeAll()\n        this::featuresContainer.methods.subscribeAll()\n        this::subscribeToEvents()\n\n        // view projection can be changed in runtime only through vl-view vm\n        this.subscribeTo(\n          obsFromVueWatcher(this, () => this.$viewVm?.resolvedViewProjection),\n          ({ value }) => { this.viewProjection = value || EPSG_3857 },\n        )\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::layersContainer.methods.getServices(),\n          this::controlsContainer.methods.getServices(),\n          this::interactionsContainer.methods.getServices(),\n          this::overlaysContainer.methods.getServices(),\n          this::featuresContainer.methods.getServices(),\n          {\n            get mapVm () { return vm },\n            get viewVm () { return vm.$viewVm },\n            get viewContainer () { return vm },\n          },\n        )\n      },\n      /**\n       * @return {string|number}\n       * @protected\n       */\n      getIdInternal () {\n        return getMapId(this.$map)\n      },\n      /**\n       * @param {string|number} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setMapId(this.$map, id)\n      },\n      /**\n       * @return {Promise<module:ol/Map~Map>}\n       */\n      resolveMap: olCmp.methods.resolveOlObject,\n      /**\n       * @param {number[]} pixel\n       * @param {function} callback\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async forEachFeatureAtPixel (pixel, callback, opts = {}) {\n        return (await this.resolveMap()).forEachFeatureAtPixel(pixel, callback, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {function} callback\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async forEachLayerAtPixel (pixel, callback, opts = {}) {\n        return (await this.resolveMap()).forEachLayerAtPixel(pixel, callback, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>} Coordinates in the map view projection.\n       */\n      async getCoordinateFromPixel (pixel, viewProj = false) {\n        const coordinate = (await this.resolveMap()).getCoordinateFromPixel(pixel)\n        if (viewProj) {\n          return roundPointCoords(coordinate)\n        }\n\n        return this.pointToDataProj(coordinate)\n      },\n      /**\n       * @param {Event} event\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async getEventCoordinate (event, viewProj = false) {\n        const coordinate = (await this.resolveMap()).getEventCoordinate(event)\n        if (viewProj) {\n          return roundPointCoords(coordinate)\n        }\n\n        return this.pointToDataProj(coordinate)\n      },\n      /**\n       * @param {Event} event\n       * @return {Promise<number[]>}\n       */\n      async getEventPixel (event) {\n        return (await this.resolveMap()).getEventPixel(event)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async getFeaturesAtPixel (pixel, opts = {}) {\n        return (await this.resolveMap()).getFeaturesAtPixel(pixel, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {Object} [options]\n       * @return {Promise<boolean>}\n       */\n      async hasFeatureAtPixel (pixel, options = {}) {\n        return (await this.resolveMap()).hasFeatureAtPixel(pixel, options)\n      },\n      /**\n       * @param {number[]} coordinate Coordinates in map view projection\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async getPixelFromCoordinate (coordinate, viewProj = false) {\n        if (!viewProj) {\n          coordinate = this.pointToViewProj(coordinate)\n        }\n\n        return (await this.resolveMap()).getPixelFromCoordinate(coordinate)\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getSize () {\n        return coalesce(this.$map?.getSize(), this.size)\n      },\n      /**\n       * @param {number[]} size\n       */\n      setSize (size) {\n        assert(isArray(size) && size.length === 2, 'Invalid size')\n        size = size.slice()\n\n        if (!isEqual(size, this.size)) {\n          this.size = size\n        }\n        if (this.$map && !isEqual(size, this.$map.getSize())) {\n          this.$map.setSize(size)\n        }\n      },\n      /**\n       * Updates map size.\n       * @return {Promise<void>}\n       */\n      async updateSize () {\n        (await this.resolveMap()).updateSize()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async render () {\n        const map = await this.resolveMap()\n\n        return new Promise(resolve => {\n          map.once('postrender', () => resolve())\n          map.render()\n        })\n      },\n      /**\n       * @return {HTMLElement|undefined}\n       */\n      getTarget () {\n        return coalesce(this.$map?.getTarget(), this.$el)\n      },\n      /**\n       * @param {HTMLElement} target\n       */\n      setTarget (target) {\n        if (this.$map && target !== this.$map.getTarget()) {\n          this.$map.setTarget(target)\n          this.$emit('update:target', target)\n        }\n      },\n      /**\n       * @return {HTMLElement|undefined}\n       */\n      getViewport () {\n        return this.$map?.getViewport()\n      },\n      /**\n       * @return {module:ol/View~View|undefined}\n       */\n      getView () {\n        return coalesce(this.$map?.getView(), this._view)\n      },\n      /**\n       * @return {Object}\n       */\n      getViewVm () {\n        return this._viewVm\n      },\n      /**\n       * @param {module:ol/View~View|Vue|undefined} view\n       */\n      setView (view) {\n        view = view?.$view || view\n        assert(!view || view instanceof View, 'Invalid view')\n\n        if (view !== this._view) {\n          this._view = view\n          this._viewVm = view?.vm && view?.vm[0]\n        }\n        if (this.$map && view !== this.$map.getView()) {\n          this.$map.setView(view)\n        }\n\n        this.scheduleRefresh()\n      },\n      /**\n       * @return {module:ol/proj~ProjectionLike|undefined}\n       */\n      getDataProjection () {\n        return coalesce(this.$map && getMapDataProjection(this.$map), this.resolvedDataProjection)\n      },\n      /**\n       * @param {module:ol/proj~ProjectionLike} projection\n       */\n      setDataProjection (projection) {\n        projection = getProj(projection)\n        assert(projection != null, 'Invalid projection')\n\n        if (projection.getCode() !== this.currentDataProjection) {\n          this.currentDataProjection = projection.getCode()\n        }\n        if (this.$map && projection.getCode() !== getMapDataProjection(this.$map)) {\n          setMapDataProjection(this.$map, projection.getCode())\n        }\n      },\n      /**\n       * Triggers focus on map container.\n       */\n      focus () {\n        this.$el.focus()\n      },\n      /**\n       * Updates map size and re-renders map.\n       * @return {Promise}\n       */\n      async refresh () {\n        await this.updateSize()\n        await this.render()\n\n        return this::olCmp.methods.refresh()\n      },\n      isInteracting () {\n        if (!this.$map) return false\n\n        return this.getInteractions().some(interaction => !!interaction.get('interacting'))\n      },\n      /**\n       * @param {Object} sourceVm\n       * @protected\n       */\n      featuresOverlaySourceCreated (sourceVm) {\n        sourceVm.addFeatures(this.getFeatures())\n\n        const adds = obsFromVueEvent(this, 'addfeature').pipe(\n          mapObs(({ feature }) => feature),\n          bufferDebounceTime(FRAME_TIME),\n        )\n        this.subscribeTo(adds, features => sourceVm.addFeatures(features))\n\n        const removes = obsFromVueEvent(this, 'removefeature').pipe(\n          mapObs(({ feature }) => feature),\n          bufferDebounceTime(FRAME_TIME),\n        )\n        this.subscribeTo(removes, features => sourceVm.removeFeatures(features))\n      },\n      /**\n       * @protected {string} value\n       * @protected\n       */\n      resolvedDataProjectionChanged (value) {\n        if (value === this.dataProjection) return\n\n        this.$emit('update:dataProjection', value)\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * OpenLayers map instance.\n       * @type {module:ol/Map~Map|undefined}\n       */\n      $map: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {module:ol/View~View|undefined}\n       */\n      $view: {\n        enumerable: true,\n        get: this.getView,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: this.getViewVm,\n      },\n      $featuresOverlayVm: {\n        enumerable: true,\n        get: () => this.$refs?.featuresOverlay,\n      },\n      $featuresOverlaySourceVm: {\n        enumerable: true,\n        get: () => this.$refs?.featuresOverlaySource,\n      },\n    })\n  }\n\n  /**\n   * Subscribe to OL map events.\n   *\n   * @return {void}\n   * @private\n   */\n  async function subscribeToEvents () {\n    const setterKey = addPrefix('set')\n    const viewChanges = obsFromOlChangeEvent(this.$map, 'view', true).pipe(\n      tap(({ value: view }) => {\n        if (this._viewSubs) {\n          this.unsubscribe(this._viewSubs)\n        }\n        if (view) {\n          this._viewSubs = this.subscribeTo(\n            obsFromOlChangeEvent(view, 'id', true),\n            ::this.scheduleRefresh,\n          )\n        }\n        this.viewProjection = view?.getProjection().getCode() || EPSG_3857\n        this.withCustomView = view && (!view.vm || view.vm.some(vm => vm !== this.$refs.view))\n      }),\n    )\n    const propChanges = mergeObs(\n      viewChanges,\n      obsFromOlChangeEvent(this.$map, [\n        'dataProjection',\n        'size',\n        'target',\n        // 'layerGroup', FIXME not ready\n      ], true),\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: this[setterKey(evt.prop)],\n      })),\n    )\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n\n    // pointer\n    const pointerEvents = mergeObs(\n      obsFromOlEvent(this.$map, [\n        MapBrowserEventType.CLICK,\n        MapBrowserEventType.DBLCLICK,\n        MapBrowserEventType.SINGLECLICK,\n      ]),\n      obsFromOlEvent(this.$map, [\n        MapBrowserEventType.POINTERDRAG,\n        MapBrowserEventType.POINTERMOVE,\n      ], null, [\n        distinctUntilChanged((a, b) => isEqual({\n          t: a.type,\n          c: a.coordinate,\n        }, {\n          t: b.type,\n          c: b.coordinate,\n        })),\n      ]),\n    ).pipe(\n      mapObs(evt => omit({\n        ...evt,\n        pixel: evt.pixel,\n        coordinate: this.pointToDataProj(evt.coordinate),\n      }, [\n        'pixel_',\n        'coordinate_',\n      ])),\n    )\n    // other\n    const otherEvents = obsFromOlEvent(this.$map, [\n      MapEventType.MOVESTART,\n      MapEventType.MOVEEND,\n      MapEventType.POSTRENDER,\n      RenderEventType.PRECOMPOSE,\n      RenderEventType.POSTCOMPOSE,\n      RenderEventType.RENDERCOMPLETE,\n    ])\n    this.subscribeTo(mergeObs(pointerEvents, otherEvents), evt => this.$emit(evt.type, evt))\n  }\n","<template>\n  <div\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    :tabindex=\"tabindex\">\n    <slot />\n    <ViewCmp\n      v-if=\"!withCustomView\"\n      :id=\"'vl-' + currentId + '-default-view'\"\n      ref=\"view\" />\n    <VectorLayerCmp\n      :id=\"'vl-' + currentId + '-default-layer'\"\n      ref=\"featuresOverlay\"\n      :overlay=\"true\"\n      :update-while-animating=\"updateWhileAnimating\"\n      :update-while-interacting=\"updateWhileInteracting\"\n      @prerender=\"$emit('dl:prerender', $event)\"\n      @postrender=\"$emit('dl:postrender', $event)\">\n      <VectorSourceCmp\n        :id=\"'vl-' + currentId + '-default-source'\"\n        ref=\"featuresOverlaySource\"\n        :wrap-x=\"wrapX\"\n        :projection=\"currentDataProjection\"\n        @created=\"featuresOverlaySourceCreated\">\n        <slot name=\"overlay\" />\n      </VectorSourceCmp>\n    </VectorLayerCmp>\n  </div>\n</template>\n\n<script>\n  import { Map, View } from 'ol'\n  import MapBrowserEventType from 'ol/MapBrowserEventType'\n  import MapEventType from 'ol/MapEventType'\n  import { get as getProj } from 'ol/proj'\n  import RenderEventType from 'ol/render/EventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { distinctUntilChanged, map as mapObs, tap } from 'rxjs/operators'\n  import {\n    controlsContainer,\n    featuresContainer,\n    FRAME_TIME,\n    interactionsContainer,\n    layersContainer,\n    makeChangeOrRecreateWatchers,\n    olCmp,\n    overlaysContainer,\n    projTransforms,\n  } from '../../mixins'\n  import {\n    EPSG_3857,\n    getControlId,\n    getInteractionId,\n    getLayerId,\n    getMapDataProjection,\n    getMapId,\n    getOverlayId,\n    getViewId,\n    roundPointCoords,\n    setMapDataProjection,\n    setMapId,\n  } from '../../ol-ext'\n  import {\n    bufferDebounceTime,\n    fromOlChangeEvent as obsFromOlChangeEvent,\n    fromOlEvent as obsFromOlEvent,\n    fromVueEvent as obsFromVueEvent,\n    fromVueWatcher as obsFromVueWatcher,\n  } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    clonePlainObject,\n    coalesce,\n    isArray,\n    isEqual,\n    map,\n    mergeDescriptors,\n    omit,\n  } from '../../utils'\n  import { Layer as VectorLayerCmp } from '../vector-layer'\n  import { Source as VectorSourceCmp } from '../vector-source'\n  import ViewCmp from './view.vue'\n\n  /**\n   * Container for **layers**, **interactions**, **controls** and **overlays**. It responsible for viewport\n   * rendering and low level interaction events.\n   *\n   * todo make render function that injects VlView if it is not provided by the user,\n   *      then it can be provided to lower components\n   */\n  export default {\n    name: 'VlMap',\n    components: {\n      ViewCmp,\n      VectorLayerCmp,\n      VectorSourceCmp,\n    },\n    mixins: [\n      projTransforms,\n      layersContainer,\n      controlsContainer,\n      interactionsContainer,\n      overlaysContainer,\n      featuresContainer,\n      olCmp,\n    ],\n    props: {\n      /**\n       * Options for default controls added to the map by default. Set to `false` to disable all map controls. Object\n       * value is used to configure controls.\n       * @type {Object|boolean}\n       * @todo remove when vl-control-* components will be ready\n       */\n      defaultControls: {\n        type: [Object, Boolean],\n        default: true,\n      },\n      /**\n       * Options for default interactions added to the map by default. Object\n       * value is used to configure default interactions.\n       * @type {Object|boolean}\n       */\n      defaultInteractions: {\n        type: [Object, Boolean],\n        default: true,\n      },\n      /**\n       * The element to listen to keyboard events on. For example, if this option is set to `document` the keyboard\n       * interactions will always trigger. If this option is not specified, the element the library listens to keyboard\n       * events on is the component root element.\n       * @type {string|Element|Document|undefined}\n       */\n      keyboardEventTarget: [String, Element, Document],\n      /**\n       * The minimum distance in pixels the cursor must move to be detected as a map move event instead of a click.\n       * Increasing this value can make it easier to click on the map.\n       * @type {number}\n       */\n      moveTolerance: {\n        type: Number,\n        default: 1,\n      },\n      /**\n       * The ratio between physical pixels and device-independent pixels (dips) on the device.\n       * @type {number}\n       */\n      pixelRatio: {\n        type: Number,\n        default: () => window.devicePixelRatio || 1,\n      },\n      /**\n       * Maximum number tiles to load simultaneously.\n       * @type {number}\n       */\n      maxTilesLoading: {\n        type: Number,\n        default: 16,\n      },\n      /**\n       * Root element `tabindex` attribute value. Value should be provided to allow keyboard events on map.\n       * @type {number|string}\n       */\n      tabindex: [String, Number],\n      /**\n       * Projection for input/output coordinates in plain data.\n       * @type {string|undefined}\n       */\n      dataProjection: {\n        type: String,\n        validator: value => getProj(value) != null,\n      },\n      /**\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {boolean}\n       */\n      updateWhileAnimating: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * @type {boolean}\n       */\n      updateWhileInteracting: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        withCustomView: false,\n        size: undefined,\n        currentDataProjection: this.dataProjection,\n      }\n    },\n    computed: {\n      resolvedDataProjection () {\n        return coalesce(\n          this.currentDataProjection,\n          this.dataProjection,\n          this.$options?.dataProjection,\n          this.viewProjection,\n        )\n      },\n      view () {\n        if (!(this.rev && this.$view)) return\n\n        return {\n          id: getViewId(this.$view),\n          type: this.$view.constructor.name,\n        }\n      },\n      /**\n       * @returns {string[]}\n       */\n      layers () {\n        if (!this.rev) return []\n\n        return map(this.getLayers(), layer => ({\n          id: getLayerId(layer),\n          type: layer.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      controls () {\n        if (!this.rev) return []\n\n        return map(this.getControls(), control => ({\n          id: getControlId(control),\n          type: control.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      interactions () {\n        if (!this.rev) return []\n\n        return map(this.getInteractions(), interaction => ({\n          id: getInteractionId(interaction),\n          type: interaction.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      overlays () {\n        if (!this.rev) return []\n\n        return map(this.getOverlays(), overlay => ({\n          id: getOverlayId(overlay),\n          type: overlay.constructor.name,\n        }))\n      },\n      /**\n       * @type {Object[]}\n       */\n      featuresDataProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInDataProj(feature))\n      },\n      /**\n       * @type {Object[]}\n       */\n      featuresViewProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInViewProj(feature))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$map) return\n\n        if (!isEqual(this.size, this.$map.getSize())) {\n          this.size = this.$map.getSize()\n        }\n      },\n      size: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:size', value?.slice())\n        },\n      },\n      defaultControls: {\n        deep: true,\n        handler (value) {\n          this.initDefaultControls(value)\n        },\n      },\n      defaultInteractions: {\n        deep: true,\n        handler (value) {\n          this.initDefaultInteractions(value)\n        },\n      },\n      dataProjection (value) {\n        this.setDataProjection(value)\n      },\n      view: {\n        deep: true,\n        handler (value, prev) {\n          if (value === prev) return\n\n          this.$emit('update:view', value)\n        },\n      },\n      layers: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:layers', value.slice())\n        },\n      },\n      controls: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:controls', value.slice())\n        },\n      },\n      interactions: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:interactions', value.slice())\n        },\n      },\n      overlays: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:overlays', value.slice())\n        },\n      },\n      featuresDataProj: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:features', clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'keyboardEventTarget',\n        'moveTolerance',\n        'pixelRatio',\n        'maxTilesLoading',\n      ]),\n    },\n    created () {\n      /**\n       * @type {module:ol/View~View}\n       * @private\n       */\n      this._view = new View({\n        center: [0, 0],\n        zoom: 2,\n      })\n      /**\n       * @type {Object|undefined}\n       */\n      this._viewVm = undefined\n\n      this::defineServices()\n      // todo wrap controls into components and provide vl-control-default\n      this.initDefaultControls(this.defaultControls)\n      // todo initialize without interactions and provide vl-interaction-default component\n      this.initDefaultInteractions(this.defaultInteractions)\n    },\n    methods: {\n      /**\n       * @return {module:ol/Map~Map}\n       * @protected\n       */\n      async createOlObject () {\n        const map = new Map({\n          pixelRatio: this.pixelRatio,\n          moveTolerance: this.moveTolerance,\n          keyboardEventTarget: this.keyboardEventTarget,\n          maxTilesLoading: this.maxTilesLoading,\n          controls: this.$controlsCollection,\n          interactions: this.$interactionsCollection,\n          layers: this.$layersCollection,\n          overlays: this.$overlaysCollection,\n          view: this.$view,\n        })\n        setMapId(map, this.currentId)\n        setMapDataProjection(map, this.resolvedDataProjection)\n        this.size && map.setSize(this.size)\n\n        return map\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.setTarget(this.$el)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.setTarget(null)\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::layersContainer.methods.subscribeAll()\n        this::controlsContainer.methods.subscribeAll()\n        this::interactionsContainer.methods.subscribeAll()\n        this::overlaysContainer.methods.subscribeAll()\n        this::featuresContainer.methods.subscribeAll()\n        this::subscribeToEvents()\n\n        // view projection can be changed in runtime only through vl-view vm\n        this.subscribeTo(\n          obsFromVueWatcher(this, () => this.$viewVm?.resolvedViewProjection),\n          ({ value }) => { this.viewProjection = value || EPSG_3857 },\n        )\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::layersContainer.methods.getServices(),\n          this::controlsContainer.methods.getServices(),\n          this::interactionsContainer.methods.getServices(),\n          this::overlaysContainer.methods.getServices(),\n          this::featuresContainer.methods.getServices(),\n          {\n            get mapVm () { return vm },\n            get viewVm () { return vm.$viewVm },\n            get viewContainer () { return vm },\n          },\n        )\n      },\n      /**\n       * @return {string|number}\n       * @protected\n       */\n      getIdInternal () {\n        return getMapId(this.$map)\n      },\n      /**\n       * @param {string|number} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setMapId(this.$map, id)\n      },\n      /**\n       * @return {Promise<module:ol/Map~Map>}\n       */\n      resolveMap: olCmp.methods.resolveOlObject,\n      /**\n       * @param {number[]} pixel\n       * @param {function} callback\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async forEachFeatureAtPixel (pixel, callback, opts = {}) {\n        return (await this.resolveMap()).forEachFeatureAtPixel(pixel, callback, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {function} callback\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async forEachLayerAtPixel (pixel, callback, opts = {}) {\n        return (await this.resolveMap()).forEachLayerAtPixel(pixel, callback, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>} Coordinates in the map view projection.\n       */\n      async getCoordinateFromPixel (pixel, viewProj = false) {\n        const coordinate = (await this.resolveMap()).getCoordinateFromPixel(pixel)\n        if (viewProj) {\n          return roundPointCoords(coordinate)\n        }\n\n        return this.pointToDataProj(coordinate)\n      },\n      /**\n       * @param {Event} event\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async getEventCoordinate (event, viewProj = false) {\n        const coordinate = (await this.resolveMap()).getEventCoordinate(event)\n        if (viewProj) {\n          return roundPointCoords(coordinate)\n        }\n\n        return this.pointToDataProj(coordinate)\n      },\n      /**\n       * @param {Event} event\n       * @return {Promise<number[]>}\n       */\n      async getEventPixel (event) {\n        return (await this.resolveMap()).getEventPixel(event)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async getFeaturesAtPixel (pixel, opts = {}) {\n        return (await this.resolveMap()).getFeaturesAtPixel(pixel, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {Object} [options]\n       * @return {Promise<boolean>}\n       */\n      async hasFeatureAtPixel (pixel, options = {}) {\n        return (await this.resolveMap()).hasFeatureAtPixel(pixel, options)\n      },\n      /**\n       * @param {number[]} coordinate Coordinates in map view projection\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async getPixelFromCoordinate (coordinate, viewProj = false) {\n        if (!viewProj) {\n          coordinate = this.pointToViewProj(coordinate)\n        }\n\n        return (await this.resolveMap()).getPixelFromCoordinate(coordinate)\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getSize () {\n        return coalesce(this.$map?.getSize(), this.size)\n      },\n      /**\n       * @param {number[]} size\n       */\n      setSize (size) {\n        assert(isArray(size) && size.length === 2, 'Invalid size')\n        size = size.slice()\n\n        if (!isEqual(size, this.size)) {\n          this.size = size\n        }\n        if (this.$map && !isEqual(size, this.$map.getSize())) {\n          this.$map.setSize(size)\n        }\n      },\n      /**\n       * Updates map size.\n       * @return {Promise<void>}\n       */\n      async updateSize () {\n        (await this.resolveMap()).updateSize()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async render () {\n        const map = await this.resolveMap()\n\n        return new Promise(resolve => {\n          map.once('postrender', () => resolve())\n          map.render()\n        })\n      },\n      /**\n       * @return {HTMLElement|undefined}\n       */\n      getTarget () {\n        return coalesce(this.$map?.getTarget(), this.$el)\n      },\n      /**\n       * @param {HTMLElement} target\n       */\n      setTarget (target) {\n        if (this.$map && target !== this.$map.getTarget()) {\n          this.$map.setTarget(target)\n          this.$emit('update:target', target)\n        }\n      },\n      /**\n       * @return {HTMLElement|undefined}\n       */\n      getViewport () {\n        return this.$map?.getViewport()\n      },\n      /**\n       * @return {module:ol/View~View|undefined}\n       */\n      getView () {\n        return coalesce(this.$map?.getView(), this._view)\n      },\n      /**\n       * @return {Object}\n       */\n      getViewVm () {\n        return this._viewVm\n      },\n      /**\n       * @param {module:ol/View~View|Vue|undefined} view\n       */\n      setView (view) {\n        view = view?.$view || view\n        assert(!view || view instanceof View, 'Invalid view')\n\n        if (view !== this._view) {\n          this._view = view\n          this._viewVm = view?.vm && view?.vm[0]\n        }\n        if (this.$map && view !== this.$map.getView()) {\n          this.$map.setView(view)\n        }\n\n        this.scheduleRefresh()\n      },\n      /**\n       * @return {module:ol/proj~ProjectionLike|undefined}\n       */\n      getDataProjection () {\n        return coalesce(this.$map && getMapDataProjection(this.$map), this.resolvedDataProjection)\n      },\n      /**\n       * @param {module:ol/proj~ProjectionLike} projection\n       */\n      setDataProjection (projection) {\n        projection = getProj(projection)\n        assert(projection != null, 'Invalid projection')\n\n        if (projection.getCode() !== this.currentDataProjection) {\n          this.currentDataProjection = projection.getCode()\n        }\n        if (this.$map && projection.getCode() !== getMapDataProjection(this.$map)) {\n          setMapDataProjection(this.$map, projection.getCode())\n        }\n      },\n      /**\n       * Triggers focus on map container.\n       */\n      focus () {\n        this.$el.focus()\n      },\n      /**\n       * Updates map size and re-renders map.\n       * @return {Promise}\n       */\n      async refresh () {\n        await this.updateSize()\n        await this.render()\n\n        return this::olCmp.methods.refresh()\n      },\n      isInteracting () {\n        if (!this.$map) return false\n\n        return this.getInteractions().some(interaction => !!interaction.get('interacting'))\n      },\n      /**\n       * @param {Object} sourceVm\n       * @protected\n       */\n      featuresOverlaySourceCreated (sourceVm) {\n        sourceVm.addFeatures(this.getFeatures())\n\n        const adds = obsFromVueEvent(this, 'addfeature').pipe(\n          mapObs(({ feature }) => feature),\n          bufferDebounceTime(FRAME_TIME),\n        )\n        this.subscribeTo(adds, features => sourceVm.addFeatures(features))\n\n        const removes = obsFromVueEvent(this, 'removefeature').pipe(\n          mapObs(({ feature }) => feature),\n          bufferDebounceTime(FRAME_TIME),\n        )\n        this.subscribeTo(removes, features => sourceVm.removeFeatures(features))\n      },\n      /**\n       * @protected {string} value\n       * @protected\n       */\n      resolvedDataProjectionChanged (value) {\n        if (value === this.dataProjection) return\n\n        this.$emit('update:dataProjection', value)\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * OpenLayers map instance.\n       * @type {module:ol/Map~Map|undefined}\n       */\n      $map: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {module:ol/View~View|undefined}\n       */\n      $view: {\n        enumerable: true,\n        get: this.getView,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: this.getViewVm,\n      },\n      $featuresOverlayVm: {\n        enumerable: true,\n        get: () => this.$refs?.featuresOverlay,\n      },\n      $featuresOverlaySourceVm: {\n        enumerable: true,\n        get: () => this.$refs?.featuresOverlaySource,\n      },\n    })\n  }\n\n  /**\n   * Subscribe to OL map events.\n   *\n   * @return {void}\n   * @private\n   */\n  async function subscribeToEvents () {\n    const setterKey = addPrefix('set')\n    const viewChanges = obsFromOlChangeEvent(this.$map, 'view', true).pipe(\n      tap(({ value: view }) => {\n        if (this._viewSubs) {\n          this.unsubscribe(this._viewSubs)\n        }\n        if (view) {\n          this._viewSubs = this.subscribeTo(\n            obsFromOlChangeEvent(view, 'id', true),\n            ::this.scheduleRefresh,\n          )\n        }\n        this.viewProjection = view?.getProjection().getCode() || EPSG_3857\n        this.withCustomView = view && (!view.vm || view.vm.some(vm => vm !== this.$refs.view))\n      }),\n    )\n    const propChanges = mergeObs(\n      viewChanges,\n      obsFromOlChangeEvent(this.$map, [\n        'dataProjection',\n        'size',\n        'target',\n        // 'layerGroup', FIXME not ready\n      ], true),\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: this[setterKey(evt.prop)],\n      })),\n    )\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n\n    // pointer\n    const pointerEvents = mergeObs(\n      obsFromOlEvent(this.$map, [\n        MapBrowserEventType.CLICK,\n        MapBrowserEventType.DBLCLICK,\n        MapBrowserEventType.SINGLECLICK,\n      ]),\n      obsFromOlEvent(this.$map, [\n        MapBrowserEventType.POINTERDRAG,\n        MapBrowserEventType.POINTERMOVE,\n      ], null, [\n        distinctUntilChanged((a, b) => isEqual({\n          t: a.type,\n          c: a.coordinate,\n        }, {\n          t: b.type,\n          c: b.coordinate,\n        })),\n      ]),\n    ).pipe(\n      mapObs(evt => omit({\n        ...evt,\n        pixel: evt.pixel,\n        coordinate: this.pointToDataProj(evt.coordinate),\n      }, [\n        'pixel_',\n        'coordinate_',\n      ])),\n    )\n    // other\n    const otherEvents = obsFromOlEvent(this.$map, [\n      MapEventType.MOVESTART,\n      MapEventType.MOVEEND,\n      MapEventType.POSTRENDER,\n      RenderEventType.PRECOMPOSE,\n      RenderEventType.POSTCOMPOSE,\n      RenderEventType.RENDERCOMPLETE,\n    ])\n    this.subscribeTo(mergeObs(pointerEvents, otherEvents), evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Map from './map.vue'\nimport View from './view.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Map, options)\n  Object.assign(View, options)\n\n  Vue.component(Map.name, Map)\n  Vue.component(View.name, View)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Map,\n  View,\n}\n","\n  import { source, urlTileSource, xyzSource } from '../../mixins'\n  import { coalesce } from '../../utils'\n\n  const MAPBOX_URL_TEMPLATE = 'https://{a-c}.tiles.mapbox.com/v4/{mapId}/{z}/{x}/{y}{tileNameSuffix}.{tileFormat}?access_token={accessToken}'\n  const MAPBOX_ATTRIBUTIONS = '&copy; <a href=\"https://www.mapbox.com/\" target=\"_blank\">MapBox</a>.'\n\n  export default {\n    name: 'VlSourceMapbox',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: MAPBOX_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: MAPBOX_URL_TEMPLATE,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // custom\n      accessToken: {\n        type: String,\n        required: true,\n      },\n      mapId: {\n        type: String,\n        required: true,\n      },\n      tileFormat: {\n        type: String,\n        default: 'png',\n      },\n    },\n    computed: {\n      /**\n       * @type {string}\n       */\n      tileNameSuffix () {\n        return tileNameSuffix(this.tilePixelRatio)\n      },\n      /**\n       * @type {string[]}\n       */\n      urlTokens () {\n        return ['mapId', 'accessToken', 'tileNameSuffix', 'tileFormat']\n      },\n    },\n  }\n\n  /**\n   * @param {number} [ratio]\n   * @returns {number}\n   * @private\n   */\n  function tileRatio (ratio) {\n    ratio = coalesce(ratio, 1)\n\n    return ratio > 1 ? 2 : 1\n  }\n\n  /**\n   * @param {number} [ratio]\n   * @returns {string}\n   * @private\n   */\n  function tileNameSuffix (ratio) {\n    ratio = tileRatio(ratio)\n\n    return ratio > 1 ? ['@', ratio, 'x'].join('') : ''\n  }\n","<script>\n  import { source, urlTileSource, xyzSource } from '../../mixins'\n  import { coalesce } from '../../utils'\n\n  const MAPBOX_URL_TEMPLATE = 'https://{a-c}.tiles.mapbox.com/v4/{mapId}/{z}/{x}/{y}{tileNameSuffix}.{tileFormat}?access_token={accessToken}'\n  const MAPBOX_ATTRIBUTIONS = '&copy; <a href=\"https://www.mapbox.com/\" target=\"_blank\">MapBox</a>.'\n\n  export default {\n    name: 'VlSourceMapbox',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: MAPBOX_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: MAPBOX_URL_TEMPLATE,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // custom\n      accessToken: {\n        type: String,\n        required: true,\n      },\n      mapId: {\n        type: String,\n        required: true,\n      },\n      tileFormat: {\n        type: String,\n        default: 'png',\n      },\n    },\n    computed: {\n      /**\n       * @type {string}\n       */\n      tileNameSuffix () {\n        return tileNameSuffix(this.tilePixelRatio)\n      },\n      /**\n       * @type {string[]}\n       */\n      urlTokens () {\n        return ['mapId', 'accessToken', 'tileNameSuffix', 'tileFormat']\n      },\n    },\n  }\n\n  /**\n   * @param {number} [ratio]\n   * @returns {number}\n   * @private\n   */\n  function tileRatio (ratio) {\n    ratio = coalesce(ratio, 1)\n\n    return ratio > 1 ? 2 : 1\n  }\n\n  /**\n   * @param {number} [ratio]\n   * @returns {string}\n   * @private\n   */\n  function tileNameSuffix (ratio) {\n    ratio = tileRatio(ratio)\n\n    return ratio > 1 ? ['@', ratio, 'x'].join('') : ''\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { VectorTile as VectorTileLayer } from 'ol/layer'\n  import RenderType from 'ol/layer/VectorTileRenderType'\n  import { makeChangeOrRecreateWatchers, tileLayer, vectorLayer } from '../../mixins'\n\n  export default {\n    name: 'VlLayerVectorTile',\n    mixins: [\n      tileLayer,\n      vectorLayer,\n    ],\n    props: {\n      renderMode: {\n        type: String,\n        default: RenderType.HYBRID,\n        validator: val => Object.values(RenderType).includes(val),\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'renderMode',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {VectorTileLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorTileLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/VectorTile\n          // tile layer props\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n          // vector tile props\n          renderMode: this.renderMode,\n        })\n      },\n    },\n  }\n","<script>\n  import { VectorTile as VectorTileLayer } from 'ol/layer'\n  import RenderType from 'ol/layer/VectorTileRenderType'\n  import { makeChangeOrRecreateWatchers, tileLayer, vectorLayer } from '../../mixins'\n\n  export default {\n    name: 'VlLayerVectorTile',\n    mixins: [\n      tileLayer,\n      vectorLayer,\n    ],\n    props: {\n      renderMode: {\n        type: String,\n        default: RenderType.HYBRID,\n        validator: val => Object.values(RenderType).includes(val),\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'renderMode',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {VectorTileLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorTileLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/VectorTile\n          // tile layer props\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n          // vector tile props\n          renderMode: this.renderMode,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { MapboxVector as MapboxVectorLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { isArray, isString } from '../../utils'\n  import { Layer } from '../vector-tile-layer'\n\n  export default {\n    name: 'VlLayerMapboxVector',\n    extends: Layer,\n    props: {\n      styleUrl: {\n        type: String,\n        required: true,\n      },\n      accessToken: {\n        type: String,\n        required: true,\n      },\n      sourceId: String,\n      layerIds: {\n        type: Array,\n        validate: val => isArray(val) && val.every(isString),\n      },\n      // eslint-disable-next-line vue/require-prop-types\n      declutter: {\n        ...vectorLayer.props.declutter,\n        default: true,\n      },\n    },\n    watch: {\n      /*#__PURE__*/...makeChangeOrRecreateWatchers([\n        'styleUrl',\n        'accessToken',\n        'sourceId',\n        'layerIds',\n      ], [\n        'layerIds',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {HeatmapLayer}\n       */\n      createLayer () {\n        return new MapboxVectorLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          // ol/layer/Tile\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n          // ol/layer/MapboxVector\n          styleUrl: this.styleUrl,\n          accessToken: this.accessToken,\n          source: this.sourceId,\n          layers: this.layerIds,\n        })\n      },\n    },\n  }\n","<script>\n  import { MapboxVector as MapboxVectorLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { isArray, isString } from '../../utils'\n  import { Layer } from '../vector-tile-layer'\n\n  export default {\n    name: 'VlLayerMapboxVector',\n    extends: Layer,\n    props: {\n      styleUrl: {\n        type: String,\n        required: true,\n      },\n      accessToken: {\n        type: String,\n        required: true,\n      },\n      sourceId: String,\n      layerIds: {\n        type: Array,\n        validate: val => isArray(val) && val.every(isString),\n      },\n      // eslint-disable-next-line vue/require-prop-types\n      declutter: {\n        ...vectorLayer.props.declutter,\n        default: true,\n      },\n    },\n    watch: {\n      /*#__PURE__*/...makeChangeOrRecreateWatchers([\n        'styleUrl',\n        'accessToken',\n        'sourceId',\n        'layerIds',\n      ], [\n        'layerIds',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {HeatmapLayer}\n       */\n      createLayer () {\n        return new MapboxVectorLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          // ol/layer/Tile\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n          // ol/layer/MapboxVector\n          styleUrl: this.styleUrl,\n          accessToken: this.accessToken,\n          source: this.sourceId,\n          layers: this.layerIds,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { Collection } from 'ol'\n  import { altKeyOnly, always, primaryAction } from 'ol/events/condition'\n  import { Modify as ModifyInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { assert, instanceOf, isFunction, map, mergeDescriptors } from '../../utils'\n\n  export default {\n    name: 'VlInteractionModify',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event will be\n       * considered to add or move a vertex to the sketch. Default is `ol.events.condition.primaryAction`.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: primaryAction,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default, `ol.events.condition.singleClick` with `ol.events.condition.altKeyOnly` results in a vertex deletion.\n       * @type {function|undefined}\n       */\n      deleteCondition: {\n        type: Function,\n        default: altKeyOnly,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether a new vertex can be added\n       * to the sketch features. Default is `ol.events.condition.always`.\n       * @type {function|undefined}\n       */\n      insertVertexCondition: {\n        type: Function,\n        default: always,\n      },\n      /**\n       * Pixel tolerance for considering the pointer close enough to a segment or vertex for editing.\n       * @type {number}\n       */\n      pixelTolerance: {\n        type: Number,\n        default: 10,\n      },\n      /**\n       * Wrap the world horizontally on the sketch overlay.\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'condition',\n        'deleteCondition',\n        'insertVertexCondition',\n        'pixelTolerance',\n        'wrapX',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (features) {\n            instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n            source = null\n          }\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new ModifyInteraction({\n          source,\n          features,\n          condition: this.condition,\n          deleteCondition: this.deleteCondition,\n          insertVertexCondition: this.insertVertexCondition,\n          pixelTolerance: this.pixelTolerance,\n          wrapX: this.wrapX,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      async getOverlay () {\n        return (await this.resolveInteraction()).getOverlay()\n      },\n      async getPointerCount () {\n        return (await this.resolveInteraction()).getPointerCount()\n      },\n      async removePoint () {\n        return (await this.resolveInteraction()).removePoint()\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    let modifying\n    const start = obsFromOlEvent(this.$interaction, 'modifystart').pipe(\n      tap(evt => {\n        this.setInteracting(true)\n        modifying = []\n        evt.features.forEach(feature => {\n          modifying[feature.getId()] = feature.getRevision()\n        })\n      }),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'modifyend').pipe(\n      mapObs(evt => ({\n        ...evt,\n        modified: evt.features.getArray().reduce((modified, feature, idx) => {\n          if (modifying[feature.getId()] !== feature.getRevision()) {\n            modified[idx] = feature.getId()\n          }\n          return modified\n        }, {}),\n      })),\n      tap(() => this.setInteracting(false)),\n    )\n    const events = mergeObs(start, end).pipe(\n      mapObs(({ type, features, modified }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          modified: modified || {},\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n","<script>\n  import { Collection } from 'ol'\n  import { altKeyOnly, always, primaryAction } from 'ol/events/condition'\n  import { Modify as ModifyInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { assert, instanceOf, isFunction, map, mergeDescriptors } from '../../utils'\n\n  export default {\n    name: 'VlInteractionModify',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event will be\n       * considered to add or move a vertex to the sketch. Default is `ol.events.condition.primaryAction`.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: primaryAction,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default, `ol.events.condition.singleClick` with `ol.events.condition.altKeyOnly` results in a vertex deletion.\n       * @type {function|undefined}\n       */\n      deleteCondition: {\n        type: Function,\n        default: altKeyOnly,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether a new vertex can be added\n       * to the sketch features. Default is `ol.events.condition.always`.\n       * @type {function|undefined}\n       */\n      insertVertexCondition: {\n        type: Function,\n        default: always,\n      },\n      /**\n       * Pixel tolerance for considering the pointer close enough to a segment or vertex for editing.\n       * @type {number}\n       */\n      pixelTolerance: {\n        type: Number,\n        default: 10,\n      },\n      /**\n       * Wrap the world horizontally on the sketch overlay.\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'condition',\n        'deleteCondition',\n        'insertVertexCondition',\n        'pixelTolerance',\n        'wrapX',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (features) {\n            instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n            source = null\n          }\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new ModifyInteraction({\n          source,\n          features,\n          condition: this.condition,\n          deleteCondition: this.deleteCondition,\n          insertVertexCondition: this.insertVertexCondition,\n          pixelTolerance: this.pixelTolerance,\n          wrapX: this.wrapX,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      async getOverlay () {\n        return (await this.resolveInteraction()).getOverlay()\n      },\n      async getPointerCount () {\n        return (await this.resolveInteraction()).getPointerCount()\n      },\n      async removePoint () {\n        return (await this.resolveInteraction()).removePoint()\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    let modifying\n    const start = obsFromOlEvent(this.$interaction, 'modifystart').pipe(\n      tap(evt => {\n        this.setInteracting(true)\n        modifying = []\n        evt.features.forEach(feature => {\n          modifying[feature.getId()] = feature.getRevision()\n        })\n      }),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'modifyend').pipe(\n      mapObs(evt => ({\n        ...evt,\n        modified: evt.features.getArray().reduce((modified, feature, idx) => {\n          if (modifying[feature.getId()] !== feature.getRevision()) {\n            modified[idx] = feature.getId()\n          }\n          return modified\n        }, {}),\n      })),\n      tap(() => this.setInteracting(false)),\n    )\n    const events = mergeObs(start, end).pipe(\n      mapObs(({ type, features, modified }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          modified: modified || {},\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\n  import { OSM as OSMSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, source, urlTileSource, xyzSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  const OSM_ATTRIBUTIONS = '&copy; <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> contributors.'\n  const OSM_URL_TEMPLATE = 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n  const OSM_MAX_ZOOM = 19\n\n  export default {\n    name: 'VlSourceOsm',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: OSM_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: OSM_URL_TEMPLATE,\n      },\n      // ol/source/XYZ\n      maxZoom: {\n        ...xyzSource.props.maxZoom,\n        default: OSM_MAX_ZOOM,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputUrl',\n        'maxZoom',\n      ]),\n    },\n    methods: {\n      createSource () {\n        // always EPSG:3857, size: 256x256, format png\n        return new OSMSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          url: this.currentUrls[0],\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/XYZ\n          maxZoom: this.maxZoom,\n        })\n      },\n      inputUrlChanged (value) {\n        this.setUrl(value)\n      },\n      // skip all other handlers\n      tileClassChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      tilePixelRatioChanged: noop,\n      transitionChanged: noop,\n      zDirectionChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n    },\n  }\n","<script>\n  import { OSM as OSMSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, source, urlTileSource, xyzSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  const OSM_ATTRIBUTIONS = '&copy; <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> contributors.'\n  const OSM_URL_TEMPLATE = 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n  const OSM_MAX_ZOOM = 19\n\n  export default {\n    name: 'VlSourceOsm',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: OSM_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: OSM_URL_TEMPLATE,\n      },\n      // ol/source/XYZ\n      maxZoom: {\n        ...xyzSource.props.maxZoom,\n        default: OSM_MAX_ZOOM,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputUrl',\n        'maxZoom',\n      ]),\n    },\n    methods: {\n      createSource () {\n        // always EPSG:3857, size: 256x256, format png\n        return new OSMSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          url: this.currentUrls[0],\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/XYZ\n          maxZoom: this.maxZoom,\n        })\n      },\n      inputUrlChanged (value) {\n        this.setUrl(value)\n      },\n      // skip all other handlers\n      tileClassChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      tilePixelRatioChanged: noop,\n      transitionChanged: noop,\n      zDirectionChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { Overlay } from 'ol'\n  import { makeChangeOrRecreateWatchers, olCmp, projTransforms, waitForMap } from '../../mixins'\n  import {\n    EPSG_3857,\n    getOverlayId,\n    initializeOverlay,\n    roundPointCoords,\n    setOverlayId,\n    OverlayPositioning,\n  } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    clonePlainObject,\n    coalesce,\n    identity,\n    isArray,\n    isEqual,\n    isPlainObject,\n  } from '../../utils'\n\n  export default {\n    name: 'VlOverlay',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    props: {\n      offset: {\n        type: Array,\n        default: () => [0, 0],\n        validator: value => value.length === 2,\n      },\n      position: {\n        type: Array,\n        validator: value => value.length === 2,\n        // required: true,\n      },\n      positioning: {\n        type: String,\n        default: OverlayPositioning.TOP_LEFT,\n        validator: value => Object.values(OverlayPositioning).includes(value),\n      },\n      stopEvent: {\n        type: Boolean,\n        default: true,\n      },\n      insertFirst: {\n        type: Boolean,\n        default: true,\n      },\n      autoPan: [Boolean, Object],\n      autoPanMargin: Number,\n      autoPanAnimation: Object,\n      autoPanOptions: Object,\n      className: String,\n    },\n    data () {\n      return {\n        visible: false,\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentOffset: this.offset.slice(),\n        currentPositionViewProj: roundPointCoords(this.position),\n        currentPositioning: this.positioning,\n      }\n    },\n    computed: {\n      positionDataProj () {\n        return roundPointCoords(this.position)\n      },\n      positionViewProj () {\n        return this.pointToViewProj(this.position)\n      },\n      currentPositionDataProj () {\n        return this.pointToDataProj(this.currentPositionViewProj)\n      },\n      inputOffset () {\n        return this.offset.slice()\n      },\n      inputAutoPan () {\n        return isPlainObject(this.autoPan)\n          ? clonePlainObject(this.autoPan)\n          : this.autoPan\n      },\n      inputAutoPanAnimation () {\n        return isPlainObject(this.autoPanAnimation)\n          ? clonePlainObject(this.autoPanAnimation)\n          : this.autoPanAnimation\n      },\n      inputAutoPanOptions () {\n        return isPlainObject(this.autoPanOptions)\n          ? clonePlainObject(this.autoPanOptions)\n          : this.autoPanOptions\n      },\n      classes () {\n        return [\n          this.vmClass,\n          this.visible ? 'visible' : undefined,\n        ].filter(identity)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$overlay) return\n\n        if (!isEqual(this.currentOffset, this.$overlay.getOffset())) {\n          this.currentOffset = this.$overlay.getOffset()\n        }\n        if (!isEqual(this.currentPositionViewProj, this.$overlay.getPosition())) {\n          this.currentPositionViewProj = this.$overlay.getPosition()\n        }\n        if (this.currentPositioning !== this.$overlay.getPositioning()) {\n          this.currentPositioning = this.$overlay.getPositioning()\n        }\n      },\n      inputOffset: {\n        deep: true,\n        handler (value) {\n          this.setOffset(value)\n        },\n      },\n      currentOffset: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputOffset)) return\n\n          this.$emit('update:offset', value.slice())\n        },\n      },\n      positionViewProj: {\n        deep: true,\n        handler (value) {\n          this.setPosition(value, true)\n        },\n      },\n      currentPositionDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.positionDataProj)) return\n\n          this.$emit('update:position', value?.slice())\n        },\n      },\n      positioning (value) {\n        this.setPositioning(value)\n      },\n      currentPositioning (value) {\n        if (value === this.positioning) return\n\n        this.$emit('update:positioning', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'stopEvent',\n        'insertFirst',\n        'autoPanMargin',\n        'className',\n        'inputAutoPan',\n        'inputAutoPanAnimation',\n        'inputAutoPanOptions',\n      ], [\n        'inputAutoPan',\n        'inputAutoPanAnimation',\n        'inputAutoPanOptions',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        this::defineServices()\n\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/Overlay~Overlay}\n       * @protected\n       */\n      createOlObject () {\n        const overlay = new Overlay({\n          id: this.currentId,\n          element: this.$el,\n          offset: this.currentOffset,\n          position: this.currentPositionViewProj,\n          positioning: this.currentPositioning,\n          stopEvent: this.stopEvent,\n          insertFirst: this.insertFirst,\n          autoPan: this.inputAutoPan,\n          autoPanMargin: this.autoPanMargin,\n          autoPanAnimation: this.inputAutoPanAnimation,\n          autoPanOptions: this.inputAutoPanOptions,\n          className: this.className,\n        })\n        initializeOverlay(overlay, this.currentId)\n\n        return overlay\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.visible = true\n        this.$overlaysContainer?.addOverlay(this.$overlay)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.$overlaysContainer?.removeOverlay(this.$overlay)\n        this.visible = false\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToOverlayChanges()\n      },\n      /**\n       * @return {*}\n       * @protected\n       */\n      getIdInternal () {\n        return getOverlayId(this.$overlay)\n      },\n      /**\n       * @param {*} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setOverlayId(this.$overlay, id)\n      },\n      /**\n       * @return {Promise<module:ol/Overlay~Overlay>}\n       */\n      resolveOverlay: olCmp.methods.resolveOlObject,\n      getOffset () {\n        return coalesce(this.$overlay?.getOffset(), this.currentOffset)\n      },\n      setOffset (offset) {\n        assert(isArray(offset) && offset.length === 2, 'Invalid offset')\n        offset = offset.slice()\n\n        if (!isEqual(offset, this.currentOffset)) {\n          this.currentOffset = offset\n        }\n        if (this.$overlay && !isEqual(offset, this.$overlay.getOffset())) {\n          this.$overlay.setOffset(offset)\n        }\n      },\n      getPosition (viewProj = false) {\n        if (!this.$overlay) {\n          return viewProj ? this.currentPositionViewProj : this.currentPositionDataProj\n        }\n\n        const position = this.$overlay.getPosition()\n        if (viewProj) return roundPointCoords(position)\n\n        return this.pointToDataProj(position)\n      },\n      setPosition (position, viewProj = false) {\n        assert(position == null || (isArray(position) && position.length === 2), 'Invalid position')\n        position = position?.slice()\n\n        if (!viewProj) {\n          position = this.pointToViewProj(position)\n        }\n\n        if (!isEqual(position, this.currentPositionViewProj)) {\n          this.currentPositionViewProj = position\n        }\n        if (this.$overlay && !isEqual(position, this.$overlay.getPosition())) {\n          this.$overlay.setPosition(position)\n        }\n      },\n      getPositioning () {\n        return this.$overlay?.getPositioning() || this.currentPositioning\n      },\n      setPositioning (positioning) {\n        if (positioning !== this.currentPositioning) {\n          this.currentPositioning = positioning\n        }\n        if (this.$overlay && positioning !== this.$overlay.getPositioning()) {\n          this.$overlay.setPositioning(positioning)\n        }\n      },\n      async panIntoView (options = {}) {\n        (await this.resolveOverlay()).panIntoView(options)\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $overlay: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n      $overlaysContainer: {\n        enumerable: true,\n        get: () => this.$services?.overlaysContainer,\n      },\n    })\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToOverlayChanges () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$overlay, [\n      'offset',\n      'position',\n      'positioning',\n    ], true, evt => ({\n      ...evt,\n      setter: val => {\n        const args = [val]\n        if (evt.prop === 'position') {\n          args.push(true)\n        }\n        this[setterKey(evt.prop)](...args)\n      },\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n","<template>\n  <div\n    :id=\"vmId\"\n    :class=\"classes\">\n    <slot\n      :id=\"currentId\"\n      :position=\"currentPositionDataProj\"\n      :offset=\"currentOffset\"\n      :positioning=\"currentPositioning\" />\n  </div>\n</template>\n\n<script>\n  import { Overlay } from 'ol'\n  import { makeChangeOrRecreateWatchers, olCmp, projTransforms, waitForMap } from '../../mixins'\n  import {\n    EPSG_3857,\n    getOverlayId,\n    initializeOverlay,\n    roundPointCoords,\n    setOverlayId,\n    OverlayPositioning,\n  } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    clonePlainObject,\n    coalesce,\n    identity,\n    isArray,\n    isEqual,\n    isPlainObject,\n  } from '../../utils'\n\n  export default {\n    name: 'VlOverlay',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    props: {\n      offset: {\n        type: Array,\n        default: () => [0, 0],\n        validator: value => value.length === 2,\n      },\n      position: {\n        type: Array,\n        validator: value => value.length === 2,\n        // required: true,\n      },\n      positioning: {\n        type: String,\n        default: OverlayPositioning.TOP_LEFT,\n        validator: value => Object.values(OverlayPositioning).includes(value),\n      },\n      stopEvent: {\n        type: Boolean,\n        default: true,\n      },\n      insertFirst: {\n        type: Boolean,\n        default: true,\n      },\n      autoPan: [Boolean, Object],\n      autoPanMargin: Number,\n      autoPanAnimation: Object,\n      autoPanOptions: Object,\n      className: String,\n    },\n    data () {\n      return {\n        visible: false,\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentOffset: this.offset.slice(),\n        currentPositionViewProj: roundPointCoords(this.position),\n        currentPositioning: this.positioning,\n      }\n    },\n    computed: {\n      positionDataProj () {\n        return roundPointCoords(this.position)\n      },\n      positionViewProj () {\n        return this.pointToViewProj(this.position)\n      },\n      currentPositionDataProj () {\n        return this.pointToDataProj(this.currentPositionViewProj)\n      },\n      inputOffset () {\n        return this.offset.slice()\n      },\n      inputAutoPan () {\n        return isPlainObject(this.autoPan)\n          ? clonePlainObject(this.autoPan)\n          : this.autoPan\n      },\n      inputAutoPanAnimation () {\n        return isPlainObject(this.autoPanAnimation)\n          ? clonePlainObject(this.autoPanAnimation)\n          : this.autoPanAnimation\n      },\n      inputAutoPanOptions () {\n        return isPlainObject(this.autoPanOptions)\n          ? clonePlainObject(this.autoPanOptions)\n          : this.autoPanOptions\n      },\n      classes () {\n        return [\n          this.vmClass,\n          this.visible ? 'visible' : undefined,\n        ].filter(identity)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$overlay) return\n\n        if (!isEqual(this.currentOffset, this.$overlay.getOffset())) {\n          this.currentOffset = this.$overlay.getOffset()\n        }\n        if (!isEqual(this.currentPositionViewProj, this.$overlay.getPosition())) {\n          this.currentPositionViewProj = this.$overlay.getPosition()\n        }\n        if (this.currentPositioning !== this.$overlay.getPositioning()) {\n          this.currentPositioning = this.$overlay.getPositioning()\n        }\n      },\n      inputOffset: {\n        deep: true,\n        handler (value) {\n          this.setOffset(value)\n        },\n      },\n      currentOffset: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputOffset)) return\n\n          this.$emit('update:offset', value.slice())\n        },\n      },\n      positionViewProj: {\n        deep: true,\n        handler (value) {\n          this.setPosition(value, true)\n        },\n      },\n      currentPositionDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.positionDataProj)) return\n\n          this.$emit('update:position', value?.slice())\n        },\n      },\n      positioning (value) {\n        this.setPositioning(value)\n      },\n      currentPositioning (value) {\n        if (value === this.positioning) return\n\n        this.$emit('update:positioning', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'stopEvent',\n        'insertFirst',\n        'autoPanMargin',\n        'className',\n        'inputAutoPan',\n        'inputAutoPanAnimation',\n        'inputAutoPanOptions',\n      ], [\n        'inputAutoPan',\n        'inputAutoPanAnimation',\n        'inputAutoPanOptions',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        this::defineServices()\n\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/Overlay~Overlay}\n       * @protected\n       */\n      createOlObject () {\n        const overlay = new Overlay({\n          id: this.currentId,\n          element: this.$el,\n          offset: this.currentOffset,\n          position: this.currentPositionViewProj,\n          positioning: this.currentPositioning,\n          stopEvent: this.stopEvent,\n          insertFirst: this.insertFirst,\n          autoPan: this.inputAutoPan,\n          autoPanMargin: this.autoPanMargin,\n          autoPanAnimation: this.inputAutoPanAnimation,\n          autoPanOptions: this.inputAutoPanOptions,\n          className: this.className,\n        })\n        initializeOverlay(overlay, this.currentId)\n\n        return overlay\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.visible = true\n        this.$overlaysContainer?.addOverlay(this.$overlay)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.$overlaysContainer?.removeOverlay(this.$overlay)\n        this.visible = false\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToOverlayChanges()\n      },\n      /**\n       * @return {*}\n       * @protected\n       */\n      getIdInternal () {\n        return getOverlayId(this.$overlay)\n      },\n      /**\n       * @param {*} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setOverlayId(this.$overlay, id)\n      },\n      /**\n       * @return {Promise<module:ol/Overlay~Overlay>}\n       */\n      resolveOverlay: olCmp.methods.resolveOlObject,\n      getOffset () {\n        return coalesce(this.$overlay?.getOffset(), this.currentOffset)\n      },\n      setOffset (offset) {\n        assert(isArray(offset) && offset.length === 2, 'Invalid offset')\n        offset = offset.slice()\n\n        if (!isEqual(offset, this.currentOffset)) {\n          this.currentOffset = offset\n        }\n        if (this.$overlay && !isEqual(offset, this.$overlay.getOffset())) {\n          this.$overlay.setOffset(offset)\n        }\n      },\n      getPosition (viewProj = false) {\n        if (!this.$overlay) {\n          return viewProj ? this.currentPositionViewProj : this.currentPositionDataProj\n        }\n\n        const position = this.$overlay.getPosition()\n        if (viewProj) return roundPointCoords(position)\n\n        return this.pointToDataProj(position)\n      },\n      setPosition (position, viewProj = false) {\n        assert(position == null || (isArray(position) && position.length === 2), 'Invalid position')\n        position = position?.slice()\n\n        if (!viewProj) {\n          position = this.pointToViewProj(position)\n        }\n\n        if (!isEqual(position, this.currentPositionViewProj)) {\n          this.currentPositionViewProj = position\n        }\n        if (this.$overlay && !isEqual(position, this.$overlay.getPosition())) {\n          this.$overlay.setPosition(position)\n        }\n      },\n      getPositioning () {\n        return this.$overlay?.getPositioning() || this.currentPositioning\n      },\n      setPositioning (positioning) {\n        if (positioning !== this.currentPositioning) {\n          this.currentPositioning = positioning\n        }\n        if (this.$overlay && positioning !== this.$overlay.getPositioning()) {\n          this.$overlay.setPositioning(positioning)\n        }\n      },\n      async panIntoView (options = {}) {\n        (await this.resolveOverlay()).panIntoView(options)\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $overlay: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n      $overlaysContainer: {\n        enumerable: true,\n        get: () => this.$services?.overlaysContainer,\n      },\n    })\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToOverlayChanges () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$overlay, [\n      'offset',\n      'position',\n      'positioning',\n    ], true, evt => ({\n      ...evt,\n      setter: val => {\n        const args = [val]\n        if (evt.prop === 'position') {\n          args.push(true)\n        }\n        this[setterKey(evt.prop)](...args)\n      },\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Overlay from './overlay.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Overlay, options)\n\n  Vue.component(Overlay.name, Overlay)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Overlay,\n}\n","\n  import { Collection } from 'ol'\n  import RotateInteraction from 'ol-rotate-feature'\n  import { always } from 'ol/events/condition'\n  import { Vector as VectorSource } from 'ol/source'\n  import VectorEventType from 'ol/source/VectorEventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, isPointCoords, roundPointCoords, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent, fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    coalesce,\n    instanceOf,\n    isEqual,\n    isFunction,\n    isNumber,\n    map,\n    mergeDescriptors,\n  } from '../../utils'\n\n  export default {\n    name: 'VlInteractionRotate',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      angle: {\n        type: Number,\n        default: 0,\n      },\n      anchor: {\n        type: Array,\n        validator: val => val.length >= 2,\n      },\n      condition: {\n        type: Function,\n        default: always,\n      },\n      allowAnchorMovement: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    data () {\n      return {\n        currentAnchorViewProj: roundPointCoords(this.anchor),\n        currentAngle: this.angle,\n      }\n    },\n    computed: {\n      anchorDataProj () {\n        return roundPointCoords(this.anchor)\n      },\n      anchorViewProj () {\n        return this.pointToViewProj(this.anchor)\n      },\n      currentAnchorDataProj () {\n        return this.pointToDataProj(this.currentAnchorViewProj)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (!isEqual(this.currentAnchorViewProj, this.$interaction.getAnchor())) {\n          this.currentAnchorViewProj = this.$interaction.getAnchor()\n        }\n        if (this.currentAngle !== this.$interaction.getAngle()) {\n          this.currentAngle = this.$interaction.getAngle()\n        }\n      },\n      anchorViewProj: {\n        deep: true,\n        handler (value) {\n          if (!value) return\n\n          this.setAnchor(value, true)\n        },\n      },\n      currentAnchorDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.anchorDataProj)) return\n\n          this.$emit('update:anchor', value?.slice())\n        },\n      },\n      angle (value) {\n        this.setAngle(value)\n      },\n      currentAngle (value) {\n        if (value === this.angle) return\n\n        this.$emit('update:angle', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'condition',\n        'allowAnchorMovement',\n      ]),\n    },\n    created () {\n      this.currentAnchorViewProj = this.anchorViewProj?.slice()\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        const source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (!features) {\n            features = new Collection(source.getFeatures())\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.ADDFEATURE),\n              ({ feature }) => feature && features.push(feature),\n            )\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.REMOVEFEATURE),\n              ({ feature }) => feature && features.remove(feature),\n            )\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        }\n\n        return new RotateInteraction({\n          features,\n          angle: this.currentAngle,\n          anchor: this.currentAnchorViewProj,\n          allowAnchorMovement: this.allowAnchorMovement,\n          condition: this.condition,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      getAngle () {\n        return coalesce(this.$interaction?.getAngle(), this.currentAngle)\n      },\n      setAngle (angle) {\n        assert(isNumber(angle), 'Invalid angle')\n\n        if (angle !== this.currentAngle) {\n          this.currentAngle = angle\n        }\n        if (this.$interaction && angle !== this.$interaction.getAngle()) {\n          this.$interaction.setAngle(angle)\n        }\n      },\n      getAnchor (viewProj = false) {\n        const anchor = coalesce(this.$interaction?.getAnchor(), this.currentAnchorViewProj)\n\n        return viewProj ? roundPointCoords(anchor) : this.pointToDataProj(anchor)\n      },\n      setAnchor (anchor, viewProj = false) {\n        assert(isPointCoords(anchor), 'Invalid anchor')\n        anchor = viewProj ? roundPointCoords(anchor) : this.pointToViewProj(anchor)\n\n        if (!isEqual(anchor, this.currentAnchorViewProj)) {\n          this.currentAnchorViewProj = anchor\n        }\n        if (this.$interaction && !isEqual(anchor, this.$interaction.getAnchor())) {\n          this.$interaction.setAnchor(anchor)\n        }\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$interaction, [\n      'angle',\n      'anchor',\n    ], true, evt => ({\n      ...evt,\n      setter: val => {\n        const args = [val]\n        if (evt.prop === 'anchor') {\n          args.push(true)\n        }\n        this[setterKey(evt.prop)](...args)\n      },\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n\n    const start = obsFromOlEvent(this.$interaction, 'rotatestart').pipe(\n      tap(() => this.setInteracting(true)),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'rotateend').pipe(\n      tap(() => this.setInteracting(false)),\n    )\n    const progress = obsFromOlEvent(this.$interaction, 'rotating')\n    const events = mergeObs(start, end, progress).pipe(\n      mapObs(({ type, features, angle, anchor }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          angle,\n          anchor: this.pointToDataProj(anchor),\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n","<script>\n  import { Collection } from 'ol'\n  import RotateInteraction from 'ol-rotate-feature'\n  import { always } from 'ol/events/condition'\n  import { Vector as VectorSource } from 'ol/source'\n  import VectorEventType from 'ol/source/VectorEventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, isPointCoords, roundPointCoords, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent, fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    coalesce,\n    instanceOf,\n    isEqual,\n    isFunction,\n    isNumber,\n    map,\n    mergeDescriptors,\n  } from '../../utils'\n\n  export default {\n    name: 'VlInteractionRotate',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      angle: {\n        type: Number,\n        default: 0,\n      },\n      anchor: {\n        type: Array,\n        validator: val => val.length >= 2,\n      },\n      condition: {\n        type: Function,\n        default: always,\n      },\n      allowAnchorMovement: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    data () {\n      return {\n        currentAnchorViewProj: roundPointCoords(this.anchor),\n        currentAngle: this.angle,\n      }\n    },\n    computed: {\n      anchorDataProj () {\n        return roundPointCoords(this.anchor)\n      },\n      anchorViewProj () {\n        return this.pointToViewProj(this.anchor)\n      },\n      currentAnchorDataProj () {\n        return this.pointToDataProj(this.currentAnchorViewProj)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (!isEqual(this.currentAnchorViewProj, this.$interaction.getAnchor())) {\n          this.currentAnchorViewProj = this.$interaction.getAnchor()\n        }\n        if (this.currentAngle !== this.$interaction.getAngle()) {\n          this.currentAngle = this.$interaction.getAngle()\n        }\n      },\n      anchorViewProj: {\n        deep: true,\n        handler (value) {\n          if (!value) return\n\n          this.setAnchor(value, true)\n        },\n      },\n      currentAnchorDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.anchorDataProj)) return\n\n          this.$emit('update:anchor', value?.slice())\n        },\n      },\n      angle (value) {\n        this.setAngle(value)\n      },\n      currentAngle (value) {\n        if (value === this.angle) return\n\n        this.$emit('update:angle', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'condition',\n        'allowAnchorMovement',\n      ]),\n    },\n    created () {\n      this.currentAnchorViewProj = this.anchorViewProj?.slice()\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        const source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (!features) {\n            features = new Collection(source.getFeatures())\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.ADDFEATURE),\n              ({ feature }) => feature && features.push(feature),\n            )\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.REMOVEFEATURE),\n              ({ feature }) => feature && features.remove(feature),\n            )\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        }\n\n        return new RotateInteraction({\n          features,\n          angle: this.currentAngle,\n          anchor: this.currentAnchorViewProj,\n          allowAnchorMovement: this.allowAnchorMovement,\n          condition: this.condition,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      getAngle () {\n        return coalesce(this.$interaction?.getAngle(), this.currentAngle)\n      },\n      setAngle (angle) {\n        assert(isNumber(angle), 'Invalid angle')\n\n        if (angle !== this.currentAngle) {\n          this.currentAngle = angle\n        }\n        if (this.$interaction && angle !== this.$interaction.getAngle()) {\n          this.$interaction.setAngle(angle)\n        }\n      },\n      getAnchor (viewProj = false) {\n        const anchor = coalesce(this.$interaction?.getAnchor(), this.currentAnchorViewProj)\n\n        return viewProj ? roundPointCoords(anchor) : this.pointToDataProj(anchor)\n      },\n      setAnchor (anchor, viewProj = false) {\n        assert(isPointCoords(anchor), 'Invalid anchor')\n        anchor = viewProj ? roundPointCoords(anchor) : this.pointToViewProj(anchor)\n\n        if (!isEqual(anchor, this.currentAnchorViewProj)) {\n          this.currentAnchorViewProj = anchor\n        }\n        if (this.$interaction && !isEqual(anchor, this.$interaction.getAnchor())) {\n          this.$interaction.setAnchor(anchor)\n        }\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$interaction, [\n      'angle',\n      'anchor',\n    ], true, evt => ({\n      ...evt,\n      setter: val => {\n        const args = [val]\n        if (evt.prop === 'anchor') {\n          args.push(true)\n        }\n        this[setterKey(evt.prop)](...args)\n      },\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n\n    const start = obsFromOlEvent(this.$interaction, 'rotatestart').pipe(\n      tap(() => this.setInteracting(true)),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'rotateend').pipe(\n      tap(() => this.setInteracting(false)),\n    )\n    const progress = obsFromOlEvent(this.$interaction, 'rotating')\n    const events = mergeObs(start, end, progress).pipe(\n      mapObs(({ type, features, angle, anchor }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          angle,\n          anchor: this.pointToDataProj(anchor),\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { Feature } from 'ol'\n  import { never, shiftKeyOnly, singleClick } from 'ol/events/condition'\n  import { Select as SelectInteraction } from 'ol/interaction'\n  import { merge as mergeObs } from 'rxjs'\n  import { featuresContainer, interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { dumpStyle, getFeatureId, getLayerId, initializeFeature, isGeoJSONFeature } from '../../ol-ext'\n  import { fromVueEvent as obsFromVueEvent } from '../../rx-ext'\n  import {\n    assert,\n    clonePlainObject,\n    coalesce,\n    constant,\n    forEach, isArray,\n    isEqual,\n    isFunction,\n    isNumber,\n    isObjectLike, isPlainObject,\n    isString,\n    map,\n    mergeDescriptors,\n    or,\n    stubArray,\n  } from '../../utils'\n\n  export default {\n    name: 'VlInteractionSelect',\n    mixins: [\n      featuresContainer,\n      styleContainer,\n      interaction,\n    ],\n    props: {\n      /**\n       * A function that takes an `ol.Feature` and an `ol.layer.Layer` and returns `true` if the feature may be selected or `false` otherwise.\n       * @type {function|undefined}\n       */\n      filter: {\n        type: Function,\n        default: /*#__PURE__*/constant(true),\n      },\n      /**\n       * A list of layers from which features should be selected. Alternatively, a filter function can be provided.\n       * @type {string[]|function|undefined}\n       */\n      layers: {\n        type: [Array, Function],\n        default: undefined,\n      },\n      /**\n       * Hit-detection tolerance. Pixels inside the radius around the given position will be checked for features.\n       * This only works for the canvas renderer and not for WebGL.\n       * @type {number}\n       */\n      hitTolerance: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * A boolean that determines if the default behaviour should select only single features or all (overlapping)\n       * features at the clicked map position.\n       * @type {boolean}\n       */\n      multi: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Selected features as array of GeoJSON features with coordinates in the map view projection.\n       * @type {string[]|number[]|Object[]}\n       */\n      features: {\n        type: Array,\n        default: stubArray,\n        validator: value => value.every(or(isString, isNumber, isGeoJSONFeature)),\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should\n       * be handled. By default, this is `ol.events.condition.never`. Use this if you want to use different events\n       * for `add` and `remove` instead of `toggle`.\n       * @type {function|undefined}\n       */\n      addCondition: {\n        type: Function,\n        default: never,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * This is the event for the selected features as a whole. By default, this is `ol.events.condition.singleClick`.\n       * Clicking on a feature selects that feature and removes any that were in the selection. Clicking outside any feature\n       * removes all from the selection.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: singleClick,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default, this is `ol.events.condition.never`. Use this if you want to use different events for `add` and `remove`\n       * instead of `toggle`.\n       * @type {function|undefined}\n       */\n      removeCondition: {\n        type: Function,\n        default: never,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * This is in addition to the `condition` event. By default, `ol.events.condition.shiftKeyOnly`, i.e. pressing `shift`\n       * as well as the `condition` event, adds that feature to the current selection if it is not currently selected,\n       * and removes it if it is.\n       * @type {function|undefined}\n       */\n      toggleCondition: {\n        type: Function,\n        default: shiftKeyOnly,\n      },\n      useFeatureStyle: Boolean,\n    },\n    data () {\n      return {\n        currentHitTolerance: this.hitTolerance,\n      }\n    },\n    computed: {\n      featuresDataProj () {\n        return map(this.features, feature => {\n          if (isGeoJSONFeature(feature)) {\n            feature = initializeFeature(clonePlainObject(feature))\n          }\n          return feature\n        })\n      },\n      featuresViewProj () {\n        return map(this.features, feature => {\n          if (isGeoJSONFeature(feature)) {\n            feature = this.writeFeatureInViewProj(this.readFeatureInDataProj(feature))\n          }\n          return feature\n        })\n      },\n      currentFeaturesDataProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInDataProj(feature))\n      },\n      currentFeaturesViewProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInViewProj(feature))\n      },\n      currentFeatureIds () {\n        return map(this.currentFeaturesDataProj, feature => getFeatureId(feature))\n      },\n      layerFilter () {\n        return Array.isArray(this.layers)\n          ? layer => this.layers.includes(getLayerId(layer))\n          : this.layers\n      },\n      style () {\n        if (!(this.rev && this.$style)) return\n\n        let style = this.$style\n        if (isFunction(style)) return style\n        if (!style) return\n\n        isArray(style) || (style = [style])\n\n        return style.map(style => dumpStyle(style, geom => this.writeGeometryInDataProj(geom)))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (this.currentHitTolerance !== this.$interaction.getHitTolerance()) {\n          this.currentHitTolerance = this.$interaction.getHitTolerance()\n        }\n      },\n      featuresViewProj: {\n        deep: true,\n        handler (features) {\n          const ids = map(features, feature => isObjectLike(feature) ? getFeatureId(feature) : feature)\n          if (isEqual(ids, this.currentFeatureIds)) return\n\n          this.unselectAll()\n          forEach(features, ::this.select)\n        },\n      },\n      currentFeaturesDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.featuresDataProj)) return\n\n          this.$emit('update:features', value && clonePlainObject(value))\n        },\n      },\n      hitTolerance (value) {\n        this.setHitTolerance(value)\n      },\n      currentHitTolerance (value) {\n        if (value === this.hitTolerance) return\n\n        this.$emit('update:hitTolerance', value)\n      },\n      style: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          if (isPlainObject(value) || isArray(value)) {\n            value = clonePlainObject(value)\n          }\n          this.$emit('update:style', value)\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'filter',\n        'multi',\n        'wrapX',\n        'addCondition',\n        'condition',\n        'removeCondition',\n        'toggleCondition',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Select}\n       * @protected\n       */\n      createInteraction () {\n        return new SelectInteraction({\n          multi: this.multi,\n          filter: this.filter,\n          layers: this.layerFilter,\n          hitTolerance: this.currentHitTolerance,\n          addCondition: this.addCondition,\n          condition: this.condition,\n          removeCondition: this.removeCondition,\n          toggleCondition: this.toggleCondition,\n          style: this.$style,\n          features: this.$featuresCollection,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::featuresContainer.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::featuresContainer.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      /**\n       * @return {StyleLike|undefined}\n       */\n      getStyle () {\n        let style = coalesce(this.getStyleTarget()?.getStyle(), this._style)\n        if (style === undefined && this.useFeatureStyle) {\n          style = null // disable ol/interaction/Select default styles\n        }\n        return style\n      },\n      /**\n       * @param {FeatureLike} feature\n       */\n      select (feature) {\n        feature = this.resolveFeature(feature)\n        if (!feature) return\n\n        this.addFeature(feature)\n      },\n      /**\n       * @param {FeatureLike} feature\n       */\n      unselect (feature) {\n        feature = this.resolveFeature(feature)\n        if (!feature) return\n\n        this.removeFeature(feature)\n      },\n      /**\n       * @return {void}\n       */\n      unselectAll () {\n        this.clearFeatures()\n      },\n      /**\n       * @param {Object|Vue|Feature|string|number} feature\n       * @return {Feature|undefined}\n       * @protected\n       */\n      resolveFeature (feature) {\n        if (!feature) return\n        feature = feature?.$feature || feature\n        if (feature instanceof Feature) return feature\n\n        const featureId = isString(feature) || isNumber(feature) ? feature : getFeatureId(feature)\n        if (!featureId) {\n          throw new Error(`${this.vmName} undefined feature id`)\n        }\n\n        feature = null\n        forEach(this.$mapVm.getLayers(), layer => {\n          if (this.layerFilter && !this.layerFilter(layer)) {\n            return\n          }\n\n          const source = layer.getSource()\n          if (isFunction(source?.getFeatureById)) {\n            feature = source.getFeatureById(featureId)\n          }\n\n          return !feature\n        })\n\n        return feature\n      },\n      updateFeature (feature) { /* disable update here, because wil always work with origin feature */ },\n      getHitTolerance () {\n        return coalesce(this.$interaction?.getHitTolerance(), this.currentHitTolerance)\n      },\n      setHitTolerance (tolerance) {\n        assert(isNumber(tolerance), 'Invalid tolerance')\n\n        if (tolerance !== this.currentHitTolerance) {\n          this.currentHitTolerance = tolerance\n        }\n        if (this.$interaction && tolerance !== this.$interaction.getHitTolerance()) {\n          this.$interaction.setHitTolerance(tolerance)\n        }\n      },\n      async getLayer (feature) {\n        feature = this.resolveFeature(feature)\n\n        return (await this.resolveInteraction()).getLayer(feature)\n      },\n    },\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const select = obsFromVueEvent(this, 'addfeature', evt => ({\n      type: 'select',\n      feature: evt.feature,\n      get json () { return evt.json },\n    }))\n    const unselect = obsFromVueEvent(this, 'removefeature', evt => ({\n      type: 'unselect',\n      feature: evt.feature,\n      get json () { return evt.json },\n    }))\n    const events = mergeObs(select, unselect)\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot :features=\"currentFeaturesDataProj\" />\n  </i>\n</template>\n\n<script>\n  import { Feature } from 'ol'\n  import { never, shiftKeyOnly, singleClick } from 'ol/events/condition'\n  import { Select as SelectInteraction } from 'ol/interaction'\n  import { merge as mergeObs } from 'rxjs'\n  import { featuresContainer, interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { dumpStyle, getFeatureId, getLayerId, initializeFeature, isGeoJSONFeature } from '../../ol-ext'\n  import { fromVueEvent as obsFromVueEvent } from '../../rx-ext'\n  import {\n    assert,\n    clonePlainObject,\n    coalesce,\n    constant,\n    forEach, isArray,\n    isEqual,\n    isFunction,\n    isNumber,\n    isObjectLike, isPlainObject,\n    isString,\n    map,\n    mergeDescriptors,\n    or,\n    stubArray,\n  } from '../../utils'\n\n  export default {\n    name: 'VlInteractionSelect',\n    mixins: [\n      featuresContainer,\n      styleContainer,\n      interaction,\n    ],\n    props: {\n      /**\n       * A function that takes an `ol.Feature` and an `ol.layer.Layer` and returns `true` if the feature may be selected or `false` otherwise.\n       * @type {function|undefined}\n       */\n      filter: {\n        type: Function,\n        default: /*#__PURE__*/constant(true),\n      },\n      /**\n       * A list of layers from which features should be selected. Alternatively, a filter function can be provided.\n       * @type {string[]|function|undefined}\n       */\n      layers: {\n        type: [Array, Function],\n        default: undefined,\n      },\n      /**\n       * Hit-detection tolerance. Pixels inside the radius around the given position will be checked for features.\n       * This only works for the canvas renderer and not for WebGL.\n       * @type {number}\n       */\n      hitTolerance: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * A boolean that determines if the default behaviour should select only single features or all (overlapping)\n       * features at the clicked map position.\n       * @type {boolean}\n       */\n      multi: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Selected features as array of GeoJSON features with coordinates in the map view projection.\n       * @type {string[]|number[]|Object[]}\n       */\n      features: {\n        type: Array,\n        default: stubArray,\n        validator: value => value.every(or(isString, isNumber, isGeoJSONFeature)),\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should\n       * be handled. By default, this is `ol.events.condition.never`. Use this if you want to use different events\n       * for `add` and `remove` instead of `toggle`.\n       * @type {function|undefined}\n       */\n      addCondition: {\n        type: Function,\n        default: never,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * This is the event for the selected features as a whole. By default, this is `ol.events.condition.singleClick`.\n       * Clicking on a feature selects that feature and removes any that were in the selection. Clicking outside any feature\n       * removes all from the selection.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: singleClick,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default, this is `ol.events.condition.never`. Use this if you want to use different events for `add` and `remove`\n       * instead of `toggle`.\n       * @type {function|undefined}\n       */\n      removeCondition: {\n        type: Function,\n        default: never,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * This is in addition to the `condition` event. By default, `ol.events.condition.shiftKeyOnly`, i.e. pressing `shift`\n       * as well as the `condition` event, adds that feature to the current selection if it is not currently selected,\n       * and removes it if it is.\n       * @type {function|undefined}\n       */\n      toggleCondition: {\n        type: Function,\n        default: shiftKeyOnly,\n      },\n      useFeatureStyle: Boolean,\n    },\n    data () {\n      return {\n        currentHitTolerance: this.hitTolerance,\n      }\n    },\n    computed: {\n      featuresDataProj () {\n        return map(this.features, feature => {\n          if (isGeoJSONFeature(feature)) {\n            feature = initializeFeature(clonePlainObject(feature))\n          }\n          return feature\n        })\n      },\n      featuresViewProj () {\n        return map(this.features, feature => {\n          if (isGeoJSONFeature(feature)) {\n            feature = this.writeFeatureInViewProj(this.readFeatureInDataProj(feature))\n          }\n          return feature\n        })\n      },\n      currentFeaturesDataProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInDataProj(feature))\n      },\n      currentFeaturesViewProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInViewProj(feature))\n      },\n      currentFeatureIds () {\n        return map(this.currentFeaturesDataProj, feature => getFeatureId(feature))\n      },\n      layerFilter () {\n        return Array.isArray(this.layers)\n          ? layer => this.layers.includes(getLayerId(layer))\n          : this.layers\n      },\n      style () {\n        if (!(this.rev && this.$style)) return\n\n        let style = this.$style\n        if (isFunction(style)) return style\n        if (!style) return\n\n        isArray(style) || (style = [style])\n\n        return style.map(style => dumpStyle(style, geom => this.writeGeometryInDataProj(geom)))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (this.currentHitTolerance !== this.$interaction.getHitTolerance()) {\n          this.currentHitTolerance = this.$interaction.getHitTolerance()\n        }\n      },\n      featuresViewProj: {\n        deep: true,\n        handler (features) {\n          const ids = map(features, feature => isObjectLike(feature) ? getFeatureId(feature) : feature)\n          if (isEqual(ids, this.currentFeatureIds)) return\n\n          this.unselectAll()\n          forEach(features, ::this.select)\n        },\n      },\n      currentFeaturesDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.featuresDataProj)) return\n\n          this.$emit('update:features', value && clonePlainObject(value))\n        },\n      },\n      hitTolerance (value) {\n        this.setHitTolerance(value)\n      },\n      currentHitTolerance (value) {\n        if (value === this.hitTolerance) return\n\n        this.$emit('update:hitTolerance', value)\n      },\n      style: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          if (isPlainObject(value) || isArray(value)) {\n            value = clonePlainObject(value)\n          }\n          this.$emit('update:style', value)\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'filter',\n        'multi',\n        'wrapX',\n        'addCondition',\n        'condition',\n        'removeCondition',\n        'toggleCondition',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Select}\n       * @protected\n       */\n      createInteraction () {\n        return new SelectInteraction({\n          multi: this.multi,\n          filter: this.filter,\n          layers: this.layerFilter,\n          hitTolerance: this.currentHitTolerance,\n          addCondition: this.addCondition,\n          condition: this.condition,\n          removeCondition: this.removeCondition,\n          toggleCondition: this.toggleCondition,\n          style: this.$style,\n          features: this.$featuresCollection,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::featuresContainer.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::featuresContainer.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      /**\n       * @return {StyleLike|undefined}\n       */\n      getStyle () {\n        let style = coalesce(this.getStyleTarget()?.getStyle(), this._style)\n        if (style === undefined && this.useFeatureStyle) {\n          style = null // disable ol/interaction/Select default styles\n        }\n        return style\n      },\n      /**\n       * @param {FeatureLike} feature\n       */\n      select (feature) {\n        feature = this.resolveFeature(feature)\n        if (!feature) return\n\n        this.addFeature(feature)\n      },\n      /**\n       * @param {FeatureLike} feature\n       */\n      unselect (feature) {\n        feature = this.resolveFeature(feature)\n        if (!feature) return\n\n        this.removeFeature(feature)\n      },\n      /**\n       * @return {void}\n       */\n      unselectAll () {\n        this.clearFeatures()\n      },\n      /**\n       * @param {Object|Vue|Feature|string|number} feature\n       * @return {Feature|undefined}\n       * @protected\n       */\n      resolveFeature (feature) {\n        if (!feature) return\n        feature = feature?.$feature || feature\n        if (feature instanceof Feature) return feature\n\n        const featureId = isString(feature) || isNumber(feature) ? feature : getFeatureId(feature)\n        if (!featureId) {\n          throw new Error(`${this.vmName} undefined feature id`)\n        }\n\n        feature = null\n        forEach(this.$mapVm.getLayers(), layer => {\n          if (this.layerFilter && !this.layerFilter(layer)) {\n            return\n          }\n\n          const source = layer.getSource()\n          if (isFunction(source?.getFeatureById)) {\n            feature = source.getFeatureById(featureId)\n          }\n\n          return !feature\n        })\n\n        return feature\n      },\n      updateFeature (feature) { /* disable update here, because wil always work with origin feature */ },\n      getHitTolerance () {\n        return coalesce(this.$interaction?.getHitTolerance(), this.currentHitTolerance)\n      },\n      setHitTolerance (tolerance) {\n        assert(isNumber(tolerance), 'Invalid tolerance')\n\n        if (tolerance !== this.currentHitTolerance) {\n          this.currentHitTolerance = tolerance\n        }\n        if (this.$interaction && tolerance !== this.$interaction.getHitTolerance()) {\n          this.$interaction.setHitTolerance(tolerance)\n        }\n      },\n      async getLayer (feature) {\n        feature = this.resolveFeature(feature)\n\n        return (await this.resolveInteraction()).getLayer(feature)\n      },\n    },\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const select = obsFromVueEvent(this, 'addfeature', evt => ({\n      type: 'select',\n      feature: evt.feature,\n      get json () { return evt.json },\n    }))\n    const unselect = obsFromVueEvent(this, 'removefeature', evt => ({\n      type: 'unselect',\n      feature: evt.feature,\n      get json () { return evt.json },\n    }))\n    const events = mergeObs(select, unselect)\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\n  import { Collection } from 'ol'\n  import { Snap as SnapInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { interaction, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { assert, instanceOf, isFunction } from '../../utils'\n\n  export default {\n    name: 'VlInteractionSnap',\n    mixins: [\n      interaction,\n    ],\n    props: {\n      /**\n       * Target source identifier from IdentityMap.\n       * @type {string}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * Snap to edges\n       * @type {boolean}\n       */\n      edge: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Snap to vertices.\n       * @type {boolean}\n       */\n      vertex: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Pixel tolerance for considering the pointer close enough to a segment or vertex for snapping.\n       * @type {number}\n       */\n      pixelTolerance: {\n        type: Number,\n        default: 10,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'edge',\n        'vertex',\n        'pixelTolerance',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Snap>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n        let features\n        if (!(source instanceof VectorSource)) {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new SnapInteraction({\n          source,\n          features,\n          edge: this.edge,\n          vertex: this.vertex,\n          pixelTolerance: this.pixelTolerance,\n        })\n      },\n    },\n  }\n","<script>\n  import { Collection } from 'ol'\n  import { Snap as SnapInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { interaction, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { assert, instanceOf, isFunction } from '../../utils'\n\n  export default {\n    name: 'VlInteractionSnap',\n    mixins: [\n      interaction,\n    ],\n    props: {\n      /**\n       * Target source identifier from IdentityMap.\n       * @type {string}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * Snap to edges\n       * @type {boolean}\n       */\n      edge: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Snap to vertices.\n       * @type {boolean}\n       */\n      vertex: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Pixel tolerance for considering the pointer close enough to a segment or vertex for snapping.\n       * @type {number}\n       */\n      pixelTolerance: {\n        type: Number,\n        default: 10,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'edge',\n        'vertex',\n        'pixelTolerance',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Snap>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n        let features\n        if (!(source instanceof VectorSource)) {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new SnapInteraction({\n          source,\n          features,\n          edge: this.edge,\n          vertex: this.vertex,\n          pixelTolerance: this.pixelTolerance,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\n  import { source, urlTileSource, xyzSource } from '../../mixins'\n\n  const SPUTNIK_URL_TEMPLATE = 'http://tiles.maps.sputnik.ru/{z}/{x}/{y}.png?apikey={apikey}'\n  const SPUTNIK_ATTRIBUTIONS = '&copy; <a href=\"http://rt.ru/\" target=\"_blank\">Ростелеком</a>. '\n\n  export default {\n    name: 'VlSourceSputnik',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: SPUTNIK_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: SPUTNIK_URL_TEMPLATE,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // custom\n      apiKey: {\n        type: String,\n      },\n    },\n    computed: {\n      /**\n       * @type {string[]}\n       */\n      urlTokens () {\n        return ['apiKey']\n      },\n    },\n  }\n","<script>\n  import { source, urlTileSource, xyzSource } from '../../mixins'\n\n  const SPUTNIK_URL_TEMPLATE = 'http://tiles.maps.sputnik.ru/{z}/{x}/{y}.png?apikey={apikey}'\n  const SPUTNIK_ATTRIBUTIONS = '&copy; <a href=\"http://rt.ru/\" target=\"_blank\">Ростелеком</a>. '\n\n  export default {\n    name: 'VlSourceSputnik',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: SPUTNIK_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: SPUTNIK_URL_TEMPLATE,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // custom\n      apiKey: {\n        type: String,\n      },\n    },\n    computed: {\n      /**\n       * @type {string[]}\n       */\n      urlTokens () {\n        return ['apiKey']\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { Stamen as StamenSource } from 'ol/source'\n  import { xyzSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceStamen',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      // ol/source/Stamen\n      /**\n       * Stamen layer name\n       *\n       * @type {string}\n       */\n      layer: {\n        type: String,\n        required: true,\n      },\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputTileUrlFunction: noop,\n    },\n    methods: {\n      createSource () {\n        return new StamenSource({\n          // ol/source/Source\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          url: this.currentUrls[0],\n          // ol/source/TileImage\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/XYZ\n          minZoom: this.minZoom,\n          maxZoom: this.maxZoom,\n          // ol/source/Stamen\n          layer: this.layer,\n        })\n      },\n      inputUrlChanged (value) {\n        this.setUrl(value)\n      },\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      crossOriginChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n","<script>\n  import { Stamen as StamenSource } from 'ol/source'\n  import { xyzSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceStamen',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      // ol/source/Stamen\n      /**\n       * Stamen layer name\n       *\n       * @type {string}\n       */\n      layer: {\n        type: String,\n        required: true,\n      },\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputTileUrlFunction: noop,\n    },\n    methods: {\n      createSource () {\n        return new StamenSource({\n          // ol/source/Source\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          url: this.currentUrls[0],\n          // ol/source/TileImage\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/XYZ\n          minZoom: this.minZoom,\n          maxZoom: this.maxZoom,\n          // ol/source/Stamen\n          layer: this.layer,\n        })\n      },\n      inputUrlChanged (value) {\n        this.setUrl(value)\n      },\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      crossOriginChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { Style } from 'ol/style'\n  import {\n    makeChangeOrRecreateWatchers,\n    olCmp,\n    projTransforms,\n    stubVNode,\n    styleContainer,\n    waitForMap,\n  } from '../../mixins'\n  import { EPSG_3857 } from '../../ol-ext'\n  import { mergeDescriptors } from '../../utils'\n\n  /**\n   * Style function component for advanced styling.\n   * Plays the role of both a style that mounts itself to style target component (vl-layer-vector, vl-feature & etc.)\n   * and style target for inner style containers (vl-style-box) as fallback style.\n   */\n  export default {\n    name: 'VlStyleFunc',\n    mixins: [\n      stubVNode,\n      projTransforms,\n      styleContainer,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * @type {function(): function(feature: Feature): Style}\n       */\n      function: {\n        type: Function,\n        // required: true,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      func: Function,\n      /**\n       * @deprecated Use `func` prop instead.\n       * @todo remove in v0.13.x\n       */\n      factory: Function,\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n      }\n    },\n    computed: {\n      inputFunction () {\n        let func = this.function || this.func\n        if (!func && this.factory) {\n          func = this.factory()\n        }\n\n        return func\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputFunction',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.factory) {\n          this.$logger.warn(\"'factory' prop is deprecated. Use 'function' prop instead.\")\n        }\n        if (this.func) {\n          this.$logger.warn(\"'func' prop is deprecated. Use 'function' prop instead.\")\n        }\n      }\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.factory) {\n          this.$logger.warn(\"'factory' prop is deprecated. Use 'function' prop instead.\")\n        }\n        if (this.func) {\n          this.$logger.warn(\"'func' prop is deprecated. Use 'function' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {function(feature: Feature): Style}\n       * @protected\n       */\n      createOlObject () {\n        // user provided style function\n        const providedStyleFunc = this.inputFunction\n        // fallback style function made from inner style containers\n        const fallbackStyleFunc = this.createStyleFunc(this.$style, this.getDefaultStyle())\n\n        const func = function __styleFunc (feature, resolution) {\n          const style = providedStyleFunc(feature, resolution)\n          // not empty or null style\n          if (\n            style == null ||\n            (Array.isArray(style) && style.length) ||\n            style instanceof Style\n          ) {\n            return style\n          }\n          return fallbackStyleFunc(feature, resolution)\n        }\n        func.id = this.currentId\n\n        return func\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$styleContainer?.setStyle(this)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$styleContainer?.getStyle() === this.$styleFunction) {\n          this.$styleContainer.setStyle(null)\n        }\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: async () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            await this.scheduleRecreate()\n          },\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $styleFunction: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $styleContainer: {\n        enumerable: true,\n        get: () => this.$services?.styleContainer,\n      },\n    })\n  }\n","<script>\n  import { Style } from 'ol/style'\n  import {\n    makeChangeOrRecreateWatchers,\n    olCmp,\n    projTransforms,\n    stubVNode,\n    styleContainer,\n    waitForMap,\n  } from '../../mixins'\n  import { EPSG_3857 } from '../../ol-ext'\n  import { mergeDescriptors } from '../../utils'\n\n  /**\n   * Style function component for advanced styling.\n   * Plays the role of both a style that mounts itself to style target component (vl-layer-vector, vl-feature & etc.)\n   * and style target for inner style containers (vl-style-box) as fallback style.\n   */\n  export default {\n    name: 'VlStyleFunc',\n    mixins: [\n      stubVNode,\n      projTransforms,\n      styleContainer,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * @type {function(): function(feature: Feature): Style}\n       */\n      function: {\n        type: Function,\n        // required: true,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      func: Function,\n      /**\n       * @deprecated Use `func` prop instead.\n       * @todo remove in v0.13.x\n       */\n      factory: Function,\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n      }\n    },\n    computed: {\n      inputFunction () {\n        let func = this.function || this.func\n        if (!func && this.factory) {\n          func = this.factory()\n        }\n\n        return func\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputFunction',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.factory) {\n          this.$logger.warn(\"'factory' prop is deprecated. Use 'function' prop instead.\")\n        }\n        if (this.func) {\n          this.$logger.warn(\"'func' prop is deprecated. Use 'function' prop instead.\")\n        }\n      }\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.factory) {\n          this.$logger.warn(\"'factory' prop is deprecated. Use 'function' prop instead.\")\n        }\n        if (this.func) {\n          this.$logger.warn(\"'func' prop is deprecated. Use 'function' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {function(feature: Feature): Style}\n       * @protected\n       */\n      createOlObject () {\n        // user provided style function\n        const providedStyleFunc = this.inputFunction\n        // fallback style function made from inner style containers\n        const fallbackStyleFunc = this.createStyleFunc(this.$style, this.getDefaultStyle())\n\n        const func = function __styleFunc (feature, resolution) {\n          const style = providedStyleFunc(feature, resolution)\n          // not empty or null style\n          if (\n            style == null ||\n            (Array.isArray(style) && style.length) ||\n            style instanceof Style\n          ) {\n            return style\n          }\n          return fallbackStyleFunc(feature, resolution)\n        }\n        func.id = this.currentId\n\n        return func\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$styleContainer?.setStyle(this)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$styleContainer?.getStyle() === this.$styleFunction) {\n          this.$styleContainer.setStyle(null)\n        }\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: async () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            await this.scheduleRecreate()\n          },\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $styleFunction: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $styleContainer: {\n        enumerable: true,\n        get: () => this.$services?.styleContainer,\n      },\n    })\n  }\n</script>\n","import { pick } from '../../utils'\nimport Style from './style.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Style, options)\n\n  Vue.component(Style.name, Style)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Style,\n}\n","\n  import { TileArcGISRest as TileArcGISRestSource } from 'ol/source'\n  import { tileImageSource, arcgisSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceTileArcgisRest',\n    mixins: [\n      arcgisSource,\n      tileImageSource,\n    ],\n    computed: {\n      inputTileUrlFunction: noop,\n    },\n    methods: {\n      createSource () {\n        return new TileArcGISRestSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          urls: this.currentUrls,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/TileArcGISRest\n          hidpi: this.hidpi,\n          params: this.currentParams,\n        })\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n","<script>\n  import { TileArcGISRest as TileArcGISRestSource } from 'ol/source'\n  import { tileImageSource, arcgisSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceTileArcgisRest',\n    mixins: [\n      arcgisSource,\n      tileImageSource,\n    ],\n    computed: {\n      inputTileUrlFunction: noop,\n    },\n    methods: {\n      createSource () {\n        return new TileArcGISRestSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          urls: this.currentUrls,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/TileArcGISRest\n          hidpi: this.hidpi,\n          params: this.currentParams,\n        })\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n\n  Vue.component('VlSourceArcgisRest', {\n    name: 'VlSourceArcgisRest',\n    extends: Source,\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        this.$logger.warn('VlSourceArcgisRest component is deprecated. Use VlSourceTileArcgisRest component instead.')\n      }\n    },\n  })\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { Tile as TileLayer } from 'ol/layer'\n  import { tileLayer } from '../../mixins'\n\n  /**\n   * Layer that provide pre-rendered, tiled images in grid that are organized by zoom levels for\n   * specific resolutions. `vl-tile-layer` component implements a **source container** interface, so it should be\n   * used together with tile-like `vl-source-*` components.\n   */\n  export default {\n    name: 'VlLayerTile',\n    mixins: [\n      tileLayer,\n    ],\n    methods: {\n      /**\n       * @return {Tile}\n       * @protected\n       */\n      createLayer () {\n        return new TileLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseTile\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n        })\n      },\n    },\n  }\n","<script>\n  import { Tile as TileLayer } from 'ol/layer'\n  import { tileLayer } from '../../mixins'\n\n  /**\n   * Layer that provide pre-rendered, tiled images in grid that are organized by zoom levels for\n   * specific resolutions. `vl-tile-layer` component implements a **source container** interface, so it should be\n   * used together with tile-like `vl-source-*` components.\n   */\n  export default {\n    name: 'VlLayerTile',\n    mixins: [\n      tileLayer,\n    ],\n    methods: {\n      /**\n       * @return {Tile}\n       * @protected\n       */\n      createLayer () {\n        return new TileLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseTile\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { TileWMS as TileWMSSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, tileImageSource, wmsSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceTileWms',\n    mixins: [\n      wmsSource,\n      tileImageSource,\n    ],\n    props: {\n      gutter: {\n        type: Number,\n        default: 0,\n      },\n    },\n    computed: {\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'gutter',\n      ]),\n    },\n    methods: {\n      createSource () {\n        return new TileWMSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          urls: this.currentUrls,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          tileClass: this.tileClass,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/TileWMS\n          gutter: this.gutter,\n          hidpi: this.hidpi,\n          serverType: this.serverType,\n          params: this.currentParams,\n        })\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n    },\n  }\n","<script>\n  import { TileWMS as TileWMSSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, tileImageSource, wmsSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceTileWms',\n    mixins: [\n      wmsSource,\n      tileImageSource,\n    ],\n    props: {\n      gutter: {\n        type: Number,\n        default: 0,\n      },\n    },\n    computed: {\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'gutter',\n      ]),\n    },\n    methods: {\n      createSource () {\n        return new TileWMSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          urls: this.currentUrls,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          tileClass: this.tileClass,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/TileWMS\n          gutter: this.gutter,\n          hidpi: this.hidpi,\n          serverType: this.serverType,\n          params: this.currentParams,\n        })\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n\n  // todo remove in v0.13.x\n  Vue.component('VlSourceWms', {\n    name: 'VlSourceWms',\n    extends: Source,\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        this.$logger.warn('VlSourceWms component is deprecated. Use VlSourceTileWms component instead.')\n      }\n    },\n  })\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { Collection } from 'ol'\n  import { Translate as TranslateInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import VectorEventType from 'ol/source/VectorEventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { COORD_PRECISION, getLayerId, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { assert, coalesce, instanceOf, isFunction, isNumber, isString, map } from '../../utils'\n\n  export default {\n    name: 'VlInteractionTranslate',\n    mixins: [\n      interaction,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      source: {\n        type: String,\n        required: true,\n      },\n      layers: [String, Array],\n      filter: Function,\n      hitTolerance: {\n        type: Number,\n        default: 0,\n      },\n    },\n    data () {\n      return {\n        currentHitTolerance: this.hitTolerance,\n      }\n    },\n    computed: {\n      inputFilter () {\n        if (isFunction(this.filter)) return this.filter\n\n        let layers = this.layers\n        if (!layers) return\n\n        if (isString(layers)) layers = [layers]\n\n        return (feature, layer) => layers.includes(getLayerId(layer))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (this.currentHitTolerance !== this.$interaction.getHitTolerance()) {\n          this.currentHitTolerance = this.$interaction.getHitTolerance()\n        }\n      },\n      hitTolerance (value) {\n        this.setHitTolerance(value)\n      },\n      currentHitTolerance (value) {\n        if (value === this.hitTolerance) return\n\n        this.$emit('update:hitTolerance', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'inputFilter',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        const source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (!features) {\n            features = new Collection(source.getFeatures())\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.ADDFEATURE),\n              ({ feature }) => feature && features.push(feature),\n            )\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.REMOVEFEATURE),\n              ({ feature }) => feature && features.remove(feature),\n            )\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        }\n\n        return new TranslateInteraction({\n          features,\n          filter: this.inputFilter,\n          hitTolerance: this.currentHitTolerance,\n        })\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      getHitTolerance () {\n        return coalesce(this.$interaction?.getHitTolerance(), this.currentHitTolerance)\n      },\n      setHitTolerance (tolerance) {\n        assert(isNumber(tolerance), 'Invalid hit tolerance')\n\n        if (tolerance !== this.currentHitTolerance) {\n          this.currentHitTolerance = tolerance\n        }\n        if (this.$interaction && tolerance !== this.$interaction.getHitTolerance()) {\n          this.$interaction.setHitTolerance(tolerance)\n        }\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const start = obsFromOlEvent(this.$interaction, 'translatestart').pipe(\n      tap(() => this.setInteracting(true)),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'translateend').pipe(\n      tap(() => this.setInteracting(false)),\n    )\n    const progress = obsFromOlEvent(this.$interaction, 'translating')\n    const events = mergeObs(start, end, progress).pipe(\n      mapObs(({ type, features, coordinate, startCoordinate }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          coordinate: this.pointToDataProj(coordinate),\n          startCoordinate: this.pointToDataProj(startCoordinate),\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n","<script>\n  import { Collection } from 'ol'\n  import { Translate as TranslateInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import VectorEventType from 'ol/source/VectorEventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { COORD_PRECISION, getLayerId, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { assert, coalesce, instanceOf, isFunction, isNumber, isString, map } from '../../utils'\n\n  export default {\n    name: 'VlInteractionTranslate',\n    mixins: [\n      interaction,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      source: {\n        type: String,\n        required: true,\n      },\n      layers: [String, Array],\n      filter: Function,\n      hitTolerance: {\n        type: Number,\n        default: 0,\n      },\n    },\n    data () {\n      return {\n        currentHitTolerance: this.hitTolerance,\n      }\n    },\n    computed: {\n      inputFilter () {\n        if (isFunction(this.filter)) return this.filter\n\n        let layers = this.layers\n        if (!layers) return\n\n        if (isString(layers)) layers = [layers]\n\n        return (feature, layer) => layers.includes(getLayerId(layer))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (this.currentHitTolerance !== this.$interaction.getHitTolerance()) {\n          this.currentHitTolerance = this.$interaction.getHitTolerance()\n        }\n      },\n      hitTolerance (value) {\n        this.setHitTolerance(value)\n      },\n      currentHitTolerance (value) {\n        if (value === this.hitTolerance) return\n\n        this.$emit('update:hitTolerance', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'inputFilter',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        const source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (!features) {\n            features = new Collection(source.getFeatures())\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.ADDFEATURE),\n              ({ feature }) => feature && features.push(feature),\n            )\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.REMOVEFEATURE),\n              ({ feature }) => feature && features.remove(feature),\n            )\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        }\n\n        return new TranslateInteraction({\n          features,\n          filter: this.inputFilter,\n          hitTolerance: this.currentHitTolerance,\n        })\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      getHitTolerance () {\n        return coalesce(this.$interaction?.getHitTolerance(), this.currentHitTolerance)\n      },\n      setHitTolerance (tolerance) {\n        assert(isNumber(tolerance), 'Invalid hit tolerance')\n\n        if (tolerance !== this.currentHitTolerance) {\n          this.currentHitTolerance = tolerance\n        }\n        if (this.$interaction && tolerance !== this.$interaction.getHitTolerance()) {\n          this.$interaction.setHitTolerance(tolerance)\n        }\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const start = obsFromOlEvent(this.$interaction, 'translatestart').pipe(\n      tap(() => this.setInteracting(true)),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'translateend').pipe(\n      tap(() => this.setInteracting(false)),\n    )\n    const progress = obsFromOlEvent(this.$interaction, 'translating')\n    const events = mergeObs(start, end, progress).pipe(\n      mapObs(({ type, features, coordinate, startCoordinate }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          coordinate: this.pointToDataProj(coordinate),\n          startCoordinate: this.pointToDataProj(startCoordinate),\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\n  import { VectorImage as VectorImageLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n\n  /**\n   * Layer for data that is rendered client-side.\n   */\n  export default {\n    name: 'VlLayerVectorImage',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      // ol/layer/VectorImage\n      /**\n       * @type {number}\n       */\n      imageRatio: {\n        type: Number,\n        default: 1,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'imageRatio',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {VectorImageLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorImageLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/VectorImage\n          imageRatio: this.imageRatio,\n        })\n      },\n    },\n  }\n","<script>\n  import { VectorImage as VectorImageLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n\n  /**\n   * Layer for data that is rendered client-side.\n   */\n  export default {\n    name: 'VlLayerVectorImage',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      // ol/layer/VectorImage\n      /**\n       * @type {number}\n       */\n      imageRatio: {\n        type: Number,\n        default: 1,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'imageRatio',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {VectorImageLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorImageLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/VectorImage\n          imageRatio: this.imageRatio,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\n  import { Feature } from 'ol'\n  import { createTileUrlFunctionFromTemplates } from 'ol-tilecache'\n  import { VectorTile as VectorTileSource } from 'ol/source'\n  import TileEventType from 'ol/source/TileEventType'\n  import { createXYZ } from 'ol/tilegrid'\n  import { featureHelper, makeChangeOrRecreateWatchers, tileSource, urlTileSource } from '../../mixins'\n  import { createMvtFmt, extentFromProjection, roundExtent } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { and, coalesce, forEach, isArray, isFunction, isNumber, noop, or, sealFactory } from '../../utils'\n\n  const validateTileSize = /*#__PURE__*/or(isNumber, and(isArray, value => value.length === 2 && value.every(isNumber)))\n\n  export default {\n    name: 'VlSourceVectorTile',\n    mixins: [\n      urlTileSource,\n      featureHelper,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Tile\n      cacheSize: {\n        ...tileSource.props.cacheSize,\n        default: 128,\n      },\n      zDirection: {\n        ...tileSource.props.zDirection,\n        default: 1,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // ol/source/VectorTile\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      formatFactory: {\n        type: Function,\n        default: createMvtFmt,\n      },\n      overlaps: {\n        type: Boolean,\n        default: true,\n      },\n      tileClass: Function,\n      maxZoom: {\n        type: Number,\n        default: 22,\n      },\n      minZoom: {\n        type: Number,\n        default: 0,\n        validator: value => value >= 0,\n      },\n      maxResolution: Number,\n      tileSize: {\n        type: [Number, Array],\n        default: () => [512, 512],\n        validator: validateTileSize,\n      },\n    },\n    data () {\n      return {\n        format: undefined,\n      }\n    },\n    computed: {\n      inputTileSize () {\n        return isArray(this.tileSize) ? this.tileSize : [this.tileSize, this.tileSize]\n      },\n      derivedTileGridFactory () {\n        if (isFunction(this.tileGridFactory)) {\n          return this.tileGridFactory\n        }\n\n        const extent = this.extentDataProj || extentFromProjection(this.resolvedDataProjection)\n        const maxZoom = this.maxZoom\n        const minZoom = this.minZoom\n        const maxResolution = this.maxResolution\n        const tileSize = this.inputTileSize\n\n        return () => createXYZ({ extent, maxZoom, minZoom, maxResolution, tileSize })\n      },\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      formatIdent () {\n        if (!this.olObjIdent) return\n\n        return this.makeIdent(this.olObjIdent, 'format')\n      },\n      inputFormatFactory () {\n        return sealFactory(::this.formatFactory)\n      },\n      inputTileUrlFunction () {\n        const urlFunc = coalesce(this.tileUrlFunction, this.tileUrlFunc)\n        if (isFunction(urlFunc)) return urlFunc\n        if (this.currentUrls.length === 0) return\n\n        return createTileUrlFunctionFromTemplates(this.currentUrls, this.tileGrid)\n      },\n    },\n    watch: {\n      formatIdent (value, prevValue) {\n        if (value && prevValue) {\n          this.moveInstance(value, prevValue)\n        } else if (value && !prevValue && this.format) {\n          this.setInstance(value, this.format)\n        } else if (!value && prevValue) {\n          this.unsetInstance(prevValue)\n        }\n      },\n      inputFormatFactory (value) {\n        while (this.hasInstance(this.formatIdent)) {\n          this.unsetInstance(this.formatIdent)\n        }\n\n        if (isFunction(value)) {\n          this.format = this.instanceFactoryCall(this.formatIdent, this::value)\n        } else {\n          this.format = undefined\n        }\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'extentViewProj',\n        'overlaps',\n        'tileClass',\n      ], [\n        'extentViewProj',\n      ]),\n    },\n    created () {\n      if (isFunction(this.inputFormatFactory)) {\n        this.format = this.instanceFactoryCall(this.formatIdent, ::this.inputFormatFactory)\n      }\n    },\n    methods: {\n      /**\n       * @return {VectorTileSource}\n       */\n      createSource () {\n        return new VectorTileSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          attributionsCollapsible: this.attributionsCollapsible,\n          projection: this.resolvedDataProjection,\n          state: this.currentState,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          zDirection: this.zDirection,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          tileUrlFunction: this.currentTileUrlFunction,\n          // ol/source/VectorTile\n          format: this.format,\n          extent: this.extentViewProj,\n          overlaps: this.overlaps,\n          tileClass: this.tileClass,\n        })\n      },\n      /**\n       * @returns {void}\n       */\n      subscribeAll () {\n        this::urlTileSource.methods.subscribeAll()\n        this::subscribeToSourceEvents()\n      },\n      async getFeaturesInExtent (extent, viewProj = false) {\n        extent = viewProj ? roundExtent(extent) : this.extentToViewProj(extent)\n\n        return (await this.resolveSource()).getFeaturesInExtent(extent)\n      },\n      async clear () {\n        (await this.resolveSource()).clear()\n      },\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n    },\n  }\n\n  function subscribeToSourceEvents () {\n    this.subscribeTo(obsFromOlEvent(this.$source, TileEventType.TILELOADEND), evt => {\n      if (!evt.tile) return\n\n      forEach(evt.tile.getFeatures(), feature => {\n        if (!(feature instanceof Feature)) return\n        this.initializeFeature(feature)\n      })\n    })\n  }\n","<script>\n  import { Feature } from 'ol'\n  import { createTileUrlFunctionFromTemplates } from 'ol-tilecache'\n  import { VectorTile as VectorTileSource } from 'ol/source'\n  import TileEventType from 'ol/source/TileEventType'\n  import { createXYZ } from 'ol/tilegrid'\n  import { featureHelper, makeChangeOrRecreateWatchers, tileSource, urlTileSource } from '../../mixins'\n  import { createMvtFmt, extentFromProjection, roundExtent } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { and, coalesce, forEach, isArray, isFunction, isNumber, noop, or, sealFactory } from '../../utils'\n\n  const validateTileSize = /*#__PURE__*/or(isNumber, and(isArray, value => value.length === 2 && value.every(isNumber)))\n\n  export default {\n    name: 'VlSourceVectorTile',\n    mixins: [\n      urlTileSource,\n      featureHelper,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Tile\n      cacheSize: {\n        ...tileSource.props.cacheSize,\n        default: 128,\n      },\n      zDirection: {\n        ...tileSource.props.zDirection,\n        default: 1,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // ol/source/VectorTile\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      formatFactory: {\n        type: Function,\n        default: createMvtFmt,\n      },\n      overlaps: {\n        type: Boolean,\n        default: true,\n      },\n      tileClass: Function,\n      maxZoom: {\n        type: Number,\n        default: 22,\n      },\n      minZoom: {\n        type: Number,\n        default: 0,\n        validator: value => value >= 0,\n      },\n      maxResolution: Number,\n      tileSize: {\n        type: [Number, Array],\n        default: () => [512, 512],\n        validator: validateTileSize,\n      },\n    },\n    data () {\n      return {\n        format: undefined,\n      }\n    },\n    computed: {\n      inputTileSize () {\n        return isArray(this.tileSize) ? this.tileSize : [this.tileSize, this.tileSize]\n      },\n      derivedTileGridFactory () {\n        if (isFunction(this.tileGridFactory)) {\n          return this.tileGridFactory\n        }\n\n        const extent = this.extentDataProj || extentFromProjection(this.resolvedDataProjection)\n        const maxZoom = this.maxZoom\n        const minZoom = this.minZoom\n        const maxResolution = this.maxResolution\n        const tileSize = this.inputTileSize\n\n        return () => createXYZ({ extent, maxZoom, minZoom, maxResolution, tileSize })\n      },\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      formatIdent () {\n        if (!this.olObjIdent) return\n\n        return this.makeIdent(this.olObjIdent, 'format')\n      },\n      inputFormatFactory () {\n        return sealFactory(::this.formatFactory)\n      },\n      inputTileUrlFunction () {\n        const urlFunc = coalesce(this.tileUrlFunction, this.tileUrlFunc)\n        if (isFunction(urlFunc)) return urlFunc\n        if (this.currentUrls.length === 0) return\n\n        return createTileUrlFunctionFromTemplates(this.currentUrls, this.tileGrid)\n      },\n    },\n    watch: {\n      formatIdent (value, prevValue) {\n        if (value && prevValue) {\n          this.moveInstance(value, prevValue)\n        } else if (value && !prevValue && this.format) {\n          this.setInstance(value, this.format)\n        } else if (!value && prevValue) {\n          this.unsetInstance(prevValue)\n        }\n      },\n      inputFormatFactory (value) {\n        while (this.hasInstance(this.formatIdent)) {\n          this.unsetInstance(this.formatIdent)\n        }\n\n        if (isFunction(value)) {\n          this.format = this.instanceFactoryCall(this.formatIdent, this::value)\n        } else {\n          this.format = undefined\n        }\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'extentViewProj',\n        'overlaps',\n        'tileClass',\n      ], [\n        'extentViewProj',\n      ]),\n    },\n    created () {\n      if (isFunction(this.inputFormatFactory)) {\n        this.format = this.instanceFactoryCall(this.formatIdent, ::this.inputFormatFactory)\n      }\n    },\n    methods: {\n      /**\n       * @return {VectorTileSource}\n       */\n      createSource () {\n        return new VectorTileSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          attributionsCollapsible: this.attributionsCollapsible,\n          projection: this.resolvedDataProjection,\n          state: this.currentState,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          zDirection: this.zDirection,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          tileUrlFunction: this.currentTileUrlFunction,\n          // ol/source/VectorTile\n          format: this.format,\n          extent: this.extentViewProj,\n          overlaps: this.overlaps,\n          tileClass: this.tileClass,\n        })\n      },\n      /**\n       * @returns {void}\n       */\n      subscribeAll () {\n        this::urlTileSource.methods.subscribeAll()\n        this::subscribeToSourceEvents()\n      },\n      async getFeaturesInExtent (extent, viewProj = false) {\n        extent = viewProj ? roundExtent(extent) : this.extentToViewProj(extent)\n\n        return (await this.resolveSource()).getFeaturesInExtent(extent)\n      },\n      async clear () {\n        (await this.resolveSource()).clear()\n      },\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n    },\n  }\n\n  function subscribeToSourceEvents () {\n    this.subscribeTo(obsFromOlEvent(this.$source, TileEventType.TILELOADEND), evt => {\n      if (!evt.tile) return\n\n      forEach(evt.tile.getFeatures(), feature => {\n        if (!(feature instanceof Feature)) return\n        this.initializeFeature(feature)\n      })\n    })\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { getHeight as getExtentHeight, getWidth as getExtentWidth } from 'ol/extent'\n  import { toSize } from 'ol/size'\n  import { WMTS as WMTSSource } from 'ol/source'\n  import { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from 'ol/tilegrid/common'\n  import WMTSTileGrid from 'ol/tilegrid/WMTS'\n  import { makeChangeOrRecreateWatchers, tileImageSource } from '../../mixins'\n  import {\n    extentFromProjection,\n    getCorner as getExtentCorner,\n    roundExtent,\n    roundPointCoords,\n    ExtentCorner,\n  } from '../../ol-ext'\n  import { coalesce, isArray, isFunction, isNumber, isString, noop, or, range } from '../../utils'\n\n  export default {\n    name: 'VlSourceWmts',\n    mixins: [\n      tileImageSource,\n    ],\n    props: {\n      // ol/source/WMTS\n      layerName: {\n        type: String,\n        required: true,\n      },\n      styleName: {\n        type: String,\n        required: true,\n      },\n      matrixSet: {\n        type: String,\n        required: true,\n      },\n      dimensions: Object,\n      format: {\n        type: String,\n        default: 'image/jpeg',\n      },\n      requestEncoding: {\n        type: String,\n        default: 'KVP',\n      },\n      version: {\n        type: String,\n        default: '1.0.0',\n      },\n      // custom\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      resolutions: {\n        type: Array,\n        validator: value => value.every(isNumber),\n      },\n      origin: {\n        type: Array,\n        validator: value => value.length === 2 && value.every(isNumber),\n      },\n      matrixIds: {\n        type: Array,\n        validator: value => value.every(or(isNumber, isString)),\n      },\n      maxZoom: {\n        type: Number,\n        default: DEFAULT_MAX_ZOOM,\n      },\n      minZoom: {\n        type: Number,\n        default: 0,\n      },\n      tileSize: {\n        type: [Number, Array],\n        default: () => [DEFAULT_TILE_SIZE, DEFAULT_TILE_SIZE],\n      },\n    },\n    computed: {\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      originDataProj () {\n        return roundPointCoords(this.origin)\n      },\n      originViewProj () {\n        return this.pointToViewProj(this.origin)\n      },\n      inputTileSize () {\n        return isArray(this.tileSize) ? this.tileSize : [this.tileSize, this.tileSize]\n      },\n      derivedTileGridFactory () {\n        if (isFunction(this.tileGridFactory)) {\n          return this.tileGridFactory\n        }\n\n        const extent = this.extentDataProj || extentFromProjection(this.resolvedDataProjection)\n        const resolutions = this.resolutions || resolutionsFromExtent(extent, this.maxZoom, this.inputTileSize)\n        const origin = this.originDataProj || getExtentCorner(extent, ExtentCorner.TOP_LEFT)\n        const matrixIds = this.matrixIds || range(this.minZoom, resolutions.length)\n        const tileSize = this.inputTileSize\n        const minZoom = this.minZoom\n\n        return () => (new WMTSTileGrid({ extent, origin, resolutions, minZoom, matrixIds, tileSize }))\n      },\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'dimensions',\n        'format',\n        'layerName',\n        'styleName',\n        'matrixSet',\n        'requestEncoding',\n        'version',\n      ], [\n        'dimensions',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {WMTS}\n       * @protected\n       */\n      createSource () {\n        return new WMTSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          tilePixelRatio: this.tilePixelRatio,\n          transition: this.transition,\n          zDirection: this.zDirection,\n          // ol/source/UrlTile\n          urls: this.currentUrls,\n          tileLoadFunction: this.currentTileLoadFunction,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          tileClass: this.tileClass,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/WMTS\n          dimensions: this.dimensions,\n          format: this.format,\n          layer: this.layerName,\n          style: this.styleName,\n          matrixSet: this.matrixSet,\n          requestEncoding: this.requestEncoding,\n          version: this.version,\n        })\n      },\n      getDimensions () {\n        return coalesce(this.$source?.getDimensions(), this.dimensions)\n      },\n      getFormat () {\n        return coalesce(this.$source?.getFormat(), this.format)\n      },\n      getLayer () {\n        return coalesce(this.$source?.getLayer(), this.layerName)\n      },\n      getMatrixSet () {\n        return coalesce(this.$source?.getMatrixSet(), this.matrixSet)\n      },\n      getRequestEncoding () {\n        return coalesce(this.$source?.getRequestEncoding(), this.requestEncoding)\n      },\n      getStyle () {\n        return coalesce(this.$source?.getStyle(), this.styleName)\n      },\n      getVersion () {\n        return coalesce(this.$source?.getVersion(), this.version)\n      },\n      attributionsCollapsibleChanged: noop,\n      stateChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n    },\n  }\n\n  function resolutionsFromExtent (extent, maxZoom, tileSize, maxResolution) {\n    maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM\n\n    const height = getExtentHeight(extent)\n    const width = getExtentWidth(extent)\n\n    tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE)\n    maxResolution = maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1])\n\n    const length = maxZoom + 1\n    const resolutions = new Array(length)\n    for (let z = 0; z < length; ++z) {\n      resolutions[z] = maxResolution / Math.pow(2, z)\n    }\n\n    return resolutions\n  }\n","<script>\n  import { getHeight as getExtentHeight, getWidth as getExtentWidth } from 'ol/extent'\n  import { toSize } from 'ol/size'\n  import { WMTS as WMTSSource } from 'ol/source'\n  import { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from 'ol/tilegrid/common'\n  import WMTSTileGrid from 'ol/tilegrid/WMTS'\n  import { makeChangeOrRecreateWatchers, tileImageSource } from '../../mixins'\n  import {\n    extentFromProjection,\n    getCorner as getExtentCorner,\n    roundExtent,\n    roundPointCoords,\n    ExtentCorner,\n  } from '../../ol-ext'\n  import { coalesce, isArray, isFunction, isNumber, isString, noop, or, range } from '../../utils'\n\n  export default {\n    name: 'VlSourceWmts',\n    mixins: [\n      tileImageSource,\n    ],\n    props: {\n      // ol/source/WMTS\n      layerName: {\n        type: String,\n        required: true,\n      },\n      styleName: {\n        type: String,\n        required: true,\n      },\n      matrixSet: {\n        type: String,\n        required: true,\n      },\n      dimensions: Object,\n      format: {\n        type: String,\n        default: 'image/jpeg',\n      },\n      requestEncoding: {\n        type: String,\n        default: 'KVP',\n      },\n      version: {\n        type: String,\n        default: '1.0.0',\n      },\n      // custom\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      resolutions: {\n        type: Array,\n        validator: value => value.every(isNumber),\n      },\n      origin: {\n        type: Array,\n        validator: value => value.length === 2 && value.every(isNumber),\n      },\n      matrixIds: {\n        type: Array,\n        validator: value => value.every(or(isNumber, isString)),\n      },\n      maxZoom: {\n        type: Number,\n        default: DEFAULT_MAX_ZOOM,\n      },\n      minZoom: {\n        type: Number,\n        default: 0,\n      },\n      tileSize: {\n        type: [Number, Array],\n        default: () => [DEFAULT_TILE_SIZE, DEFAULT_TILE_SIZE],\n      },\n    },\n    computed: {\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      originDataProj () {\n        return roundPointCoords(this.origin)\n      },\n      originViewProj () {\n        return this.pointToViewProj(this.origin)\n      },\n      inputTileSize () {\n        return isArray(this.tileSize) ? this.tileSize : [this.tileSize, this.tileSize]\n      },\n      derivedTileGridFactory () {\n        if (isFunction(this.tileGridFactory)) {\n          return this.tileGridFactory\n        }\n\n        const extent = this.extentDataProj || extentFromProjection(this.resolvedDataProjection)\n        const resolutions = this.resolutions || resolutionsFromExtent(extent, this.maxZoom, this.inputTileSize)\n        const origin = this.originDataProj || getExtentCorner(extent, ExtentCorner.TOP_LEFT)\n        const matrixIds = this.matrixIds || range(this.minZoom, resolutions.length)\n        const tileSize = this.inputTileSize\n        const minZoom = this.minZoom\n\n        return () => (new WMTSTileGrid({ extent, origin, resolutions, minZoom, matrixIds, tileSize }))\n      },\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'dimensions',\n        'format',\n        'layerName',\n        'styleName',\n        'matrixSet',\n        'requestEncoding',\n        'version',\n      ], [\n        'dimensions',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {WMTS}\n       * @protected\n       */\n      createSource () {\n        return new WMTSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          tilePixelRatio: this.tilePixelRatio,\n          transition: this.transition,\n          zDirection: this.zDirection,\n          // ol/source/UrlTile\n          urls: this.currentUrls,\n          tileLoadFunction: this.currentTileLoadFunction,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          tileClass: this.tileClass,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/WMTS\n          dimensions: this.dimensions,\n          format: this.format,\n          layer: this.layerName,\n          style: this.styleName,\n          matrixSet: this.matrixSet,\n          requestEncoding: this.requestEncoding,\n          version: this.version,\n        })\n      },\n      getDimensions () {\n        return coalesce(this.$source?.getDimensions(), this.dimensions)\n      },\n      getFormat () {\n        return coalesce(this.$source?.getFormat(), this.format)\n      },\n      getLayer () {\n        return coalesce(this.$source?.getLayer(), this.layerName)\n      },\n      getMatrixSet () {\n        return coalesce(this.$source?.getMatrixSet(), this.matrixSet)\n      },\n      getRequestEncoding () {\n        return coalesce(this.$source?.getRequestEncoding(), this.requestEncoding)\n      },\n      getStyle () {\n        return coalesce(this.$source?.getStyle(), this.styleName)\n      },\n      getVersion () {\n        return coalesce(this.$source?.getVersion(), this.version)\n      },\n      attributionsCollapsibleChanged: noop,\n      stateChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n    },\n  }\n\n  function resolutionsFromExtent (extent, maxZoom, tileSize, maxResolution) {\n    maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM\n\n    const height = getExtentHeight(extent)\n    const width = getExtentWidth(extent)\n\n    tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE)\n    maxResolution = maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1])\n\n    const length = maxZoom + 1\n    const resolutions = new Array(length)\n    for (let z = 0; z < length; ++z) {\n      resolutions[z] = maxResolution / Math.pow(2, z)\n    }\n\n    return resolutions\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\n  import { xyzSource } from '../../mixins'\n\n  export default {\n    name: 'VlSourceXyz',\n    mixins: [\n      xyzSource,\n    ],\n  }\n","<script>\n  import { xyzSource } from '../../mixins'\n\n  export default {\n    name: 'VlSourceXyz',\n    mixins: [\n      xyzSource,\n    ],\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","import {\n  BingmapsSource,\n  ClusterSource,\n  DrawInteraction,\n  Feature,\n  Geoloc,\n  GraticuleLayer,\n  GroupLayer,\n  HeatmapLayer,\n  ImageArcgisRestSource,\n  ImageLayer,\n  ImageStaticSource,\n  ImageWmsSource,\n  Map,\n  MapboxSource,\n  MapboxVectorLayer,\n  ModifyInteraction,\n  OsmSource,\n  Overlay,\n  RotateInteraction,\n  SelectInteraction,\n  SnapInteraction,\n  SputnikSource,\n  StamenSource,\n  Style,\n  StyleFunc,\n  TileArcgisRestSource,\n  TileLayer,\n  TileWmsSource,\n  TranslateInteraction,\n  VectorImageLayer,\n  VectorLayer,\n  VectorSource,\n  VectorTileLayer,\n  VectorTileSource,\n  WmtsSource,\n  XyzSource,\n} from './components'\nimport './styles/main.scss'\n\n/**\n * @const {string} VueLayers version.\n */\nexport const VERSION = 'C_PKG_VERSION'\n\n/**\n * @typedef {Object} VueLayersOptions\n * @property {string} [dataProjection] Projection for all properties, events and other plain values.\n */\n/**\n * Registers all VueLayers components.\n * @param {Vue|VueConstructor} Vue\n * @param {VueLayersOptions} [options]\n */\nexport default function plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  // install components\n  Vue.use(BingmapsSource, options)\n  Vue.use(ClusterSource, options)\n  Vue.use(DrawInteraction, options)\n  Vue.use(Feature, options)\n  Vue.use(Geoloc, options)\n  Vue.use(GraticuleLayer, options)\n  Vue.use(GroupLayer, options)\n  Vue.use(HeatmapLayer, options)\n  Vue.use(ImageArcgisRestSource, options)\n  Vue.use(ImageLayer, options)\n  Vue.use(ImageStaticSource, options)\n  Vue.use(ImageWmsSource, options)\n  Vue.use(Map, options)\n  Vue.use(MapboxSource, options)\n  Vue.use(MapboxVectorLayer, options)\n  Vue.use(ModifyInteraction, options)\n  Vue.use(OsmSource, options)\n  Vue.use(Overlay, options)\n  Vue.use(RotateInteraction, options)\n  Vue.use(SelectInteraction, options)\n  Vue.use(SnapInteraction, options)\n  Vue.use(SputnikSource, options)\n  Vue.use(StamenSource, options)\n  Vue.use(Style, options)\n  Vue.use(StyleFunc, options)\n  Vue.use(TileArcgisRestSource, options)\n  Vue.use(TileLayer, options)\n  Vue.use(TileWmsSource, options)\n  Vue.use(TranslateInteraction, options)\n  Vue.use(VectorImageLayer, options)\n  Vue.use(VectorLayer, options)\n  Vue.use(VectorSource, options)\n  Vue.use(VectorTileLayer, options)\n  Vue.use(VectorTileSource, options)\n  Vue.use(WmtsSource, options)\n  Vue.use(XyzSource, options)\n}\n\nexport {\n  plugin as install,\n  // components\n  BingmapsSource,\n  ClusterSource,\n  DrawInteraction,\n  Feature,\n  Geoloc,\n  GraticuleLayer,\n  GroupLayer,\n  HeatmapLayer,\n  ImageArcgisRestSource,\n  ImageLayer,\n  ImageStaticSource,\n  ImageWmsSource,\n  Map,\n  MapboxSource,\n  MapboxVectorLayer,\n  ModifyInteraction,\n  OsmSource,\n  Overlay,\n  RotateInteraction,\n  SelectInteraction,\n  SnapInteraction,\n  SputnikSource,\n  StamenSource,\n  Style,\n  StyleFunc,\n  TileArcgisRestSource,\n  TileLayer,\n  TileWmsSource,\n  TranslateInteraction,\n  VectorImageLayer,\n  VectorLayer,\n  VectorSource,\n  VectorTileLayer,\n  VectorTileSource,\n  WmtsSource,\n  XyzSource,\n}\n"],"names":["name","mixins","tileImageSource","props","hidpi","type","Boolean","default","culture","String","apiKey","required","imagerySet","maxZoom","Number","computed","tileGridIdent","noop","inputTileGridFactory","inputUrl","inputUrls","inputTileUrlFunction","inputAttributions","watch","makeChangeOrRecreateWatchers","methods","createSource","BingMapsSource","wrapX","cacheSize","opaque","transition","tileLoadFunction","currentTileLoadFunction","reprojectionErrorThreshold","imageSmoothing","key","getApiKey","coalesce","$source","getImagerySet","stateChanged","attributionsCollapsibleChanged","projectionChanged","tileGridIdentChanged","inputTileGridFactoryChanged","tileGridChanged","tileKeyChanged","tilePixelRatioChanged","zDirectionChanged","inputTileUrlFunctionChanged","inputUrlsChanged","crossOriginChanged","tileClassChanged","__vue_script__","script","plugin","Vue","options","installed","pick","Object","assign","Source","component","stubVNode","sourceContainer","olCmp","empty","attrs","id","vmId","class","vmClass","source","rev","getSourceId","constructor","deep","handler","value","prev","isEqual","$emit","clonePlainObject","created","defineProperties","$innerSourceContainer","enumerable","get","$services","innerSourceContainer","createOlObject","obj","stubObject","currentId","getServices","mergeDescriptors","getSourceTarget","getSource","getInnerSource","setSource","setInnerSource","components","InnerSource","vectorSource","distance","geometryFunction","Function","geomFunc","geomFuncFactory","data","currentDistance","inputGeometryFunction","defaultGeomFunc","innerSource","$innerSource","inputLoader","inputLoadingStrategy","formatIdent","inputFormatFactory","getDistance","setDistance","process","env","NODE_ENV","$logger","warn","_innerSource","undefined","_innerSourceVm","defineServices","updated","ClusterSource","attributions","currentAttributions","vm","assert","isNumber","getInnerSourceVm","scheduleRefresh","inputUrlChanged","inputLoaderChanged","inputLoadingStrategyChanged","inputFormatFactoryChanged","formatIdentChanged","formatChanged","overlapsChanged","useSpatialIndexChanged","$innerSourceVm","feature","geometry","getGeometry","coordinate","findPointOnSurface","createPointGeom","transformType","upperFirst","camelCase","interaction","styleContainer","clickTolerance","snapTolerance","validator","values","GeometryType","includes","stopClick","maxPoints","minPoints","finishCondition","geometryName","condition","noModifierKeys","freehand","freehandCondition","shiftKeyOnly","dragVertexDelay","inputType","createInteraction","_source","getInstance","features","VectorSource","isFunction","getFeaturesCollection","getFeatures","instanceOf","Collection","DrawInteraction","style","$style","subscribeAll","subscribeToInteractionChanges","getStyleTarget","getStyle","_style","setStyle","VUELAYERS_DEBUG","log","scheduleRecreate","getOverlay","resolveInteraction","abortDrawing","finishDrawing","appendCoordinates","coordinates","viewProj","roundLineCoords","lineToViewProj","removeLastPoint","getPointerCount","start","obsFromOlEvent","$interaction","pipe","mapObs","evt","initializeFeature","tap","setInteracting","sourceUpdObs","length","obsOf","delay","FRAME_TIME","obsFromVueEvent","first","end","mergeMap","mapTo","events","mergeObs","resolvedViewProjection","dataProj","resolvedDataProjection","json","_json","writeGeoJsonFeature","COORD_PRECISION","subscribeTo","Interaction","simpleGeometry","isPointCoords","radius","radiusProjection","getProj","currentRadiusViewProj","constant","CIRCLE","resolvedRadiusProjection","radiusDataProj","round","radiusViewProj","radiusToViewProj","coordinatesDataProj","currentRadiusDataProj","radiusToDataProj","setRadius","createGeometry","Circle","currentCoordinatesViewProj","getCoordinates","getCenter","setCoordinates","setCenter","center","$geometry","roundPointCoords","pointToDataProj","pointToViewProj","getRadius","setCenterAndRadius","transformDistance","POINT","Point","PointGeom","isLineCoords","LINE_STRING","LineString","isMultiLineCoords","MULTI_LINE_STRING","MultiLineString","isMultiPointCoords","MULTI_POINT","MultiPoint","isMultiPolygonCoords","MULTI_POLYGON","MultiPolygon","isPolygonCoords","POLYGON","Polygon","Feature","CircleGeom","LineStringGeom","PolygonGeom","MultiPointGeom","MultiLineStringGeom","MultiPolygonGeom","validateProjection","and","isString","projTransforms","waitForMap","tracking","trackingOptions","projection","viewProjection","EPSG_3857","dataProjection","currentTracking","currentTrackingOptions","currentProjection","$options","accuracy","getAccuracy","accuracyGeometryDataProj","writeGeometryInDataProj","getAccuracyGeometry","accuracyGeometryViewProj","writeGeometryInViewProj","altitude","getAltitude","altitudeAccuracy","getAltitudeAccuracy","heading","getHeading","speed","getSpeed","positionDataProj","getPosition","positionViewProj","$geolocation","getTracking","getTrackingOptions","getProjection","getCode","setTracking","tracingOptions","setTrackingOptions","setProjection","currentAltitude","beforeInit","Promise","all","geoloc","Geolocation","set","mount","unmount","subscribeToGeolocation","resolveGeolocation","resolveOlObject","getIdInternal","setIdInternal","$olObject","$mapVm","mapVm","$viewVm","viewVm","setterKey","addPrefix","setPropsChanges","obsFromOlChangeEvent","setter","val","prop","otherChanged","Geoloc","color","Array","currentColor","normalizeColor","inputColor","setColor","getColor","slice","createStyle","FillStyle","$fillStyleContainer","setFill","getFillVm","refresh","syncNonObservable","fillStyleContainer","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","width","currentLineCap","currentLineJoin","currentLineDash","currentLineDashOffset","currentMiterLimit","currentWidth","inputLineDash","setLineCap","getLineCap","setLineJoin","getLineJoin","setLineDash","getLineDash","setLineDashOffset","getLineDashOffset","setMiterLimit","getMiterLimit","setWidth","getWidth","makeWatchers","inProp","lowerFirst","curProp","isObjectLike","StrokeStyle","$strokeStyleContainer","setStroke","getStrokeVm","strokeStyleContainer","regShapeStyle","currentRadius","CircleStyle","displacement","inputDisplacement","fill","$fill","stroke","$stroke","radiusChanged","pointsChanged","radius1Changed","radius2Changed","angleChanged","imageStyle","src","size","img","Image","imgSize","anchor","anchorOrigin","IconOrigin","TOP_LEFT","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits","crossOrigin","offset","offsetOrigin","currentAnchor","inputSize","inputImgSize","inputAnchor","inputOffset","setAnchor","getAnchor","isEmpty","IconStyle","opacity","currentOpacity","scale","currentScale","rotateWithView","currentRotateWithView","rotation","currentRotation","transformAnchor","getSize","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","getImage","pixelRatio","getPixelRatio","getOrigin","getSrc","load","resolveStyle","RegularShapeStyle","points","radius1","radius2","angle","textStyleContainer","imageStyleContainer","geometryContainer","zIndex","renderer","currentZIndex","currentRenderer","dumpStrokeStyle","dumpFillStyle","text","$text","dumpTextStyle","image","$image","dumpImageStyle","geometryDataProj","geometryViewProj","setZIndex","getZIndex","setRenderer","getRenderer","replace","Style","$styleContainer","addStyle","removeStyle","getFillStyleTarget","getStrokeStyleTarget","getTextStyleTarget","getImageStyleTarget","getGeometryTarget","getGeometryFunction","$strokeStyle","$bgStyleContainer","bgStyleContainer","getFill","getBackgroundFill","setBackgroundFill","getStroke","getBackgroundStroke","setBackgroundStroke","BackgroundStyle","font","maxAngle","placement","offsetX","offsetY","overflow","textAlign","textBaseline","padding","validate","currentFont","currentMaxAngle","currentPlacement","currentOffsetX","currentOffsetY","currentOverflow","currentText","currentTextAlign","currentTextBaseline","currentPadding","inputPadding","backgroundFill","$bgFill","backgroundStroke","$bgStroke","setFont","getFont","setMaxAngle","getMaxAngle","setPlacement","getPlacement","setOffsetX","getOffsetX","setOffsetY","getOffsetY","setOverflow","getOverflow","setRotateWithView","getRotateWithView","setRotation","getRotation","setScale","getScale","setText","getText","setTextAlign","getTextAlign","setTextBaseline","getTextBaseline","setPadding","getPadding","_bgFill","_bgFillVm","_bgStroke","_bgStrokeVm","TextStyle","$textStyleContainer","getTextVm","$bgFillVm","$bgStrokeVm","RegShapeStyle","extends","$latStyleContainer","latStyleContainer","getLatLabelStyle","setLatLabelStyle","$lonStyleContainer","lonStyleContainer","getLonLabelStyle","setLonLabelStyle","setStrokeStyle","getStrokeStyle","LonStyle","LatStyle","GStrokeStyle","vectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","intervals","inputIntervals","meridians","map","getMeridians","geom","parallels","getParallels","lonLabelStyle","$lonLabelStyle","latLabelStyle","$latLabelStyle","strokeStyle","_lonLabelStyle","_lonLabelStyleVm","_latLabelStyle","_latLabelStyleVm","_strokeStyle","_strokeStyleVm","$lonLabelStyleVm","getLonLabelStyleVm","$latLabelStyleVm","getLatLabelStyleVm","$strokeStyleVm","getStrokeStyleVm","createLayer","GraticuleLayer","className","visible","currentVisible","extent","currentExtentViewProj","minResolution","currentMinResolution","maxResolution","currentMaxResolution","minZoom","currentMinZoom","currentMaxZoom","render","renderOrder","renderBuffer","declutter","updateWhileAnimating","updateWhileInteracting","$layer","Text","Stroke","Layer","layersContainer","baseLayer","layers","getLayers","layer","getLayerId","GroupLayer","$layersCollection","gradient","blur","weight","currentGradient","currentBlur","inputGradient","getGradient","getBlur","setGradient","setBlur","HeatmapLayer","subscribeToLayerEvents","isArray","propChanges","validateUrl","negate","arcgisSource","imageSource","imageLoadFunction","imageLoadFunc","ratio","url","currentImageLoadFunction","currentUrl","inputImageLoadFunction","getImageLoadFunction","getUrl","setUrl","setImageLoadFunction","ImageArcGISRestSource","resolutions","inputResolutions","params","currentParams","func","imageLayer","ImageLayer","imageExtent","imgExtent","imgLoadFunc","loadFunc","imageSize","inputImageExtent","inputImageSize","ImageStaticSource","getImageExtent","wmsSource","currentImageLoadFunc","ImageWMSSource","serverType","setUrls","renderMode","VectorLayer","every","constrainOnlyCenter","smoothExtentConstraint","enableRotation","constrainRotation","resolution","constrainResolution","smoothResolutionConstraint","zoom","zoomFactor","multiWorld","showFullExtent","currentCenterViewProj","currentZoom","currentResolution","currentResolutions","centerDataProj","centerViewProj","currentCenterDataProj","extentDataProj","roundExtent","extentViewProj","extentToViewProj","visibleExtentDataProj","getExtent","visibleExtentViewProj","animating","getAnimating","interacting","getInteracting","$view","getZoom","getResolution","getMinZoom","getMaxZoom","getResolutions","getMaxResolution","getMinResolution","setResolution","setConstrainResolution","setZoom","setMinZoom","setMaxZoom","view","View","initializeView","$viewContainer","setView","getViewVm","subscribeToEvents","getViewId","setViewId","resolveView","animate","args","cb","forEach","opts","resolve","complete","fit","geometryOrExtent","isGeoJSONGeometry","readGeometryInViewProj","readGeometryInDataProj","callback","cancelAnimations","beginInteraction","endInteraction","duration","resolutionDirection","calculateExtent","extentToDataProj","centerOn","position","getResolutionForExtent","getResolutionForZoom","getZoomForResolution","viewContainer","push","ViewCmp","VectorLayerCmp","VectorSourceCmp","controlsContainer","interactionsContainer","overlaysContainer","featuresContainer","defaultControls","defaultInteractions","keyboardEventTarget","Element","Document","moveTolerance","window","devicePixelRatio","maxTilesLoading","tabindex","withCustomView","currentDataProjection","controls","getControls","control","getControlId","interactions","getInteractions","getInteractionId","overlays","getOverlays","overlay","getOverlayId","featuresDataProj","writeFeatureInDataProj","featuresViewProj","writeFeatureInViewProj","$map","initDefaultControls","initDefaultInteractions","setDataProjection","_view","_viewVm","Map","$controlsCollection","$interactionsCollection","$overlaysCollection","setMapId","setMapDataProjection","setSize","setTarget","$el","obsFromVueWatcher","getMapId","resolveMap","forEachFeatureAtPixel","pixel","forEachLayerAtPixel","getCoordinateFromPixel","getEventCoordinate","event","getEventPixel","getFeaturesAtPixel","hasFeatureAtPixel","getPixelFromCoordinate","updateSize","once","getTarget","target","getViewport","getView","getDataProjection","getMapDataProjection","focus","isInteracting","some","featuresOverlaySourceCreated","sourceVm","addFeatures","adds","bufferDebounceTime","removes","removeFeatures","resolvedDataProjectionChanged","$featuresOverlayVm","$refs","featuresOverlay","$featuresOverlaySourceVm","featuresOverlaySource","viewChanges","_viewSubs","unsubscribe","pointerEvents","MapBrowserEventType","CLICK","DBLCLICK","SINGLECLICK","POINTERDRAG","POINTERMOVE","distinctUntilChanged","a","b","t","c","omit","otherEvents","MapEventType","MOVESTART","MOVEEND","POSTRENDER","RenderEventType","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","MAPBOX_URL_TEMPLATE","MAPBOX_ATTRIBUTIONS","xyzSource","urlTileSource","accessToken","mapId","tileFormat","tileNameSuffix","tilePixelRatio","urlTokens","tileRatio","join","tileLayer","RenderType","HYBRID","VectorTileLayer","preload","currentPreload","useInterimTilesOnError","currentUseInterimTilesOnError","styleUrl","sourceId","layerIds","MapboxVectorLayer","primaryAction","deleteCondition","altKeyOnly","insertVertexCondition","always","pixelTolerance","ModifyInteraction","removePoint","modifying","getId","getRevision","modified","getArray","reduce","idx","OSM_ATTRIBUTIONS","OSM_URL_TEMPLATE","OSM_MAX_ZOOM","OSMSource","currentUrls","transitionChanged","positioning","OverlayPositioning","stopEvent","insertFirst","autoPan","autoPanMargin","autoPanAnimation","autoPanOptions","currentOffset","currentPositionViewProj","currentPositioning","currentPositionDataProj","inputAutoPan","isPlainObject","inputAutoPanAnimation","inputAutoPanOptions","classes","filter","identity","$overlay","getOffset","getPositioning","setOffset","setPosition","setPositioning","Overlay","element","initializeOverlay","$overlaysContainer","addOverlay","removeOverlay","subscribeToOverlayChanges","setOverlayId","resolveOverlay","panIntoView","allowAnchorMovement","currentAnchorViewProj","currentAngle","anchorDataProj","anchorViewProj","currentAnchorDataProj","getAngle","setAngle","VectorEventType","ADDFEATURE","REMOVEFEATURE","remove","RotateInteraction","progress","hitTolerance","multi","stubArray","or","isGeoJSONFeature","addCondition","never","singleClick","removeCondition","toggleCondition","useFeatureStyle","currentHitTolerance","readFeatureInDataProj","currentFeaturesDataProj","currentFeaturesViewProj","currentFeatureIds","getFeatureId","layerFilter","dumpStyle","getHitTolerance","ids","unselectAll","select","setHitTolerance","SelectInteraction","$featuresCollection","resolveFeature","addFeature","unselect","removeFeature","clearFeatures","$feature","featureId","Error","vmName","getFeatureById","updateFeature","tolerance","getLayer","edge","vertex","SnapInteraction","SPUTNIK_URL_TEMPLATE","SPUTNIK_ATTRIBUTIONS","StamenSource","function","factory","inputFunction","providedStyleFunc","fallbackStyleFunc","createStyleFunc","getDefaultStyle","__styleFunc","$styleFunction","TileArcGISRestSource","tileGrid","urls","opaqueChanged","TileLayer","gutter","TileWMSSource","tileClass","inputFilter","TranslateInteraction","startCoordinate","imageRatio","VectorImageLayer","validateTileSize","featureHelper","tileSource","zDirection","formatFactory","createMvtFmt","overlaps","tileSize","format","inputTileSize","derivedTileGridFactory","tileGridFactory","extentFromProjection","createXYZ","olObjIdent","makeIdent","sealFactory","urlFunc","tileUrlFunction","tileUrlFunc","createTileUrlFunctionFromTemplates","prevValue","moveInstance","setInstance","unsetInstance","hasInstance","instanceFactoryCall","VectorTileSource","attributionsCollapsible","state","currentState","currentTileUrlFunction","subscribeToSourceEvents","getFeaturesInExtent","resolveSource","clear","TileEventType","TILELOADEND","tile","layerName","styleName","matrixSet","dimensions","requestEncoding","version","origin","matrixIds","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","originDataProj","originViewProj","resolutionsFromExtent","getExtentCorner","ExtentCorner","range","WMTSTileGrid","WMTSSource","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getVersion","height","getExtentHeight","getExtentWidth","toSize","Math","max","z","pow","VERSION","use","BingmapsSource","ImageArcgisRestSource","ImageWmsSource","MapboxSource","OsmSource","SputnikSource","StyleFunc","TileArcgisRestSource","TileWmsSource","WmtsSource","XyzSource"],"mappings":"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"}