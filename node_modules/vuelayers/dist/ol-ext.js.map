{"version":3,"file":"ol-ext.js","sources":["../src/ol-ext/control.js","../src/ol-ext/enums.js","../src/ol-ext/coord.js","../src/ol-ext/extent.js","../src/ol-ext/geom.js","../src/ol-ext/proj.js","../src/ol-ext/style.js","../src/ol-ext/format.js","../src/ol-ext/feature.js","../src/ol-ext/interaction.js","../src/ol-ext/layer.js","../src/ol-ext/map.js","../src/ol-ext/overlay.js","../src/ol-ext/source.js","../src/ol-ext/tilegrid.js","../src/ol-ext/view.js","../src/ol-ext/index.js"],"sourcesContent":["import { Control } from 'ol/control'\nimport { v4 as uuid } from 'uuid'\n\nexport function getControlId (control) {\n  if (control instanceof Control) {\n    return control.get('id')\n  }\n\n  throw new Error('Illegal control argument')\n}\n\nexport function setControlId (control, controlId) {\n  if (control instanceof Control) {\n    control.set('id', controlId)\n\n    return control\n  }\n\n  throw new Error('Illegal control argument')\n}\n\nexport function initializeControl (control, defaultControlId) {\n  if (getControlId(control) == null) {\n    setControlId(control, defaultControlId || uuid())\n  }\n\n  return control\n}\n","export const GeometryType = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n}\n\nexport const ExtentCorner = {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n}\n\nexport const OverlayPositioning = {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n}\n\nexport const SourceState = {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n}\n\nexport const WMSServerType = {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis',\n}\n","import { GeometryType } from './enums'\nimport { and, every, isArray, isEqual, isNumber, round } from '../utils'\n\nexport const COORD_PRECISION = 6\n\nexport function roundExtent (extent, precision = COORD_PRECISION) {\n  if (!extent) return\n\n  return extent.map(x => round(x, precision))\n}\n\nexport function roundPointCoords (coordinates, precision = COORD_PRECISION) {\n  if (!coordinates) return\n\n  return coordinates.map(x => round(x, precision))\n}\n\nexport function roundLineCoords (coordinates, precision = COORD_PRECISION) {\n  if (!coordinates) return\n\n  return coordinates.map(point => roundPointCoords(point, precision))\n}\n\nexport function roundPolygonCoords (coordinates, precision = COORD_PRECISION) {\n  if (!coordinates) return\n\n  return coordinates.map(line => roundLineCoords(line, precision))\n}\n\nexport function roundMultiPointCoords (coordinates, precision = COORD_PRECISION) {\n  return roundLineCoords(coordinates, precision)\n}\n\nexport function roundMultiLineCoords (coordinates, precision = COORD_PRECISION) {\n  return roundPolygonCoords(coordinates, precision)\n}\n\nexport function roundMultiPolygonCoords (coordinates, precision = COORD_PRECISION) {\n  if (!coordinates) return\n\n  return coordinates.map(polygon => roundPolygonCoords(polygon, precision))\n}\n\nexport function roundCoords (geomType, coordinates, precision = COORD_PRECISION) {\n  switch (geomType) {\n    case GeometryType.POINT:\n    case GeometryType.CIRCLE:\n      return roundPointCoords(coordinates, precision)\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_POINT:\n      return roundLineCoords(coordinates, precision)\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_LINE_STRING:\n      return roundPolygonCoords(coordinates, precision)\n    case GeometryType.MULTI_POLYGON:\n      return roundMultiPolygonCoords(coordinates, precision)\n  }\n}\n\nexport function flatCoords (geomType, coordinates) {\n  const polygonReducer = (coords, lineString) => coords.concat(lineString)\n\n  switch (geomType) {\n    case GeometryType.POINT:\n      return [coordinates]\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_POINT:\n      return coordinates\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_LINE_STRING:\n      return coordinates.reduce(polygonReducer, [])\n    case GeometryType.MULTI_POLYGON:\n      return coordinates.reduce((coords, polygon) => coords.concat(polygon.reduce(polygonReducer, [])), [])\n    default:\n      // todo maybe return null?\n      return []\n  }\n}\n\n/**\n * @param {{coordinates: number[], extent: number[]}} a\n * @param {{coordinates: number[], extent: number[]}} b\n * @returns {boolean}\n */\nexport function isEqualCoord (a, b) {\n  return isEqual(a.extent, b.extent)\n    ? isEqual(a.coordinates, b.coordinates)\n    : false\n}\n\nexport function calcDistance (point1, point2, precision = COORD_PRECISION) {\n  const dx = point2[0] - point1[0]\n  const dy = point2[1] - point1[1]\n  const squared = dx * dx + dy * dy\n\n  return round(Math.sqrt(squared), COORD_PRECISION)\n}\n\nexport const isPointCoords = /*#__PURE__*/and(\n  isArray,\n  point => point.length >= 2,\n  point => every(point, isNumber),\n)\nexport const isLineCoords = /*#__PURE__*/and(\n  isArray,\n  line => line.length >= 0,\n  line => every(line, isPointCoords),\n)\nexport const isPolygonCoords = /*#__PURE__*/and(\n  isArray,\n  polygon => polygon.length >= 0,\n  polygon => every(polygon, isLineCoords),\n)\nexport const isMultiPointCoords = isLineCoords\nexport const isMultiLineCoords = isPolygonCoords\nexport const isMultiPolygonCoords = /*#__PURE__*/and(\n  isArray,\n  multiPolygon => multiPolygon.length >= 0,\n  multiPolygon => every(multiPolygon, isPolygonCoords),\n)\n","// copy-paste from ol/extent\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from 'ol/extent'\nimport { ExtentCorner } from './enums'\nimport { assert } from '../utils'\n\nexport function createOrUpdate (minX, minY, maxX, maxY, extent) {\n  if (extent) {\n    extent[0] = minX\n    extent[1] = minY\n    extent[2] = maxX\n    extent[3] = maxY\n    return extent\n  }\n  return [minX, minY, maxX, maxY]\n}\n\nexport function getCorner (extent, corner) {\n  let coordinate\n  if (corner === ExtentCorner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent)\n  } else if (corner === ExtentCorner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent)\n  } else if (corner === ExtentCorner.TOP_LEFT) {\n    coordinate = getTopLeft(extent)\n  } else if (corner === ExtentCorner.TOP_RIGHT) {\n    coordinate = getTopRight(extent)\n  } else {\n    assert(false, 'Invalid extent corner')\n  }\n  return coordinate\n}\n","import pointOnFeature from '@turf/point-on-feature'\nimport {\n  Circle,\n  Geometry,\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from 'ol/geom'\nimport { circular as circularPolygon } from 'ol/geom/Polygon'\nimport { v4 as uuid } from 'uuid'\nimport { isPlainObject } from '../utils'\nimport { COORD_PRECISION, roundCoords } from './coord'\nimport { GeometryType } from './enums'\n\n/**\n * @param {number|number[]} lonOrCoordinates\n * @param {number} [lat]\n * @return {Point}\n */\nexport function createPointGeom (lonOrCoordinates, lat) {\n  const coordinates = Array.isArray(lonOrCoordinates)\n    ? lonOrCoordinates\n    : [lonOrCoordinates, lat]\n\n  return new Point(coordinates)\n}\n\n/**\n * @param {Array<number[]>} points\n * @returns {LineString}\n */\nexport function createLineGeom (points) {\n  return new LineString(points)\n}\n\n/**\n * @param {Array<Array<number[]>>} rings\n * @returns {Polygon}\n */\nexport function createPolygonGeom (rings) {\n  return new Polygon(rings)\n}\n\n/**\n * @param {Array<number[]>} points\n * @returns {MultiPoint}\n */\nexport function createMultiPointGeom (points) {\n  return new MultiPoint(points)\n}\n\n/**\n * @param {Array<Array<number[]>>} lines\n * @returns {MultiLineString}\n */\nexport function createMultiLineGeom (lines) {\n  return new MultiLineString(lines)\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} polygons\n * @returns {MultiPolygon}\n */\nexport function createMultiPolygonGeom (polygons) {\n  return new MultiPolygon(polygons)\n}\n\n/**\n * @param {Geometry[]} geoms\n * @returns {GeometryCollection}\n */\nexport function createGeomCollection (geoms) {\n  return new GeometryCollection(geoms)\n}\n\n/**\n * @param {Coordinate|number[]} center\n * @param {number} radius\n * @return {Polygon}\n */\nexport function createCircularPolygon (center, radius) {\n  return circularPolygon(center, radius)\n}\n\n/**\n * @param {Geometry|Object} geom\n * @return {boolean}\n * @throws {Error}\n */\nexport function isMultiGeom (geom) {\n  const multiTypes = [\n    GeometryType.MULTI_POINT,\n    GeometryType.MULTI_LINE_STRING,\n    GeometryType.MULTI_POLYGON,\n    GeometryType.GEOMETRY_COLLECTION,\n  ]\n\n  return multiTypes.includes(geom.type || geom.getType())\n}\n\n/**\n * @param {Geometry|Object} geom\n * @return {SimpleGeometry|Object}\n * @throws {Error}\n */\nexport function toSimpleGeom (geom) {\n  if (geom instanceof Circle) {\n    geom = createPointGeom(geom.getCenter())\n  } else if (geom.type === GeometryType.CIRCLE) {\n    geom = { ...geom, type: GeometryType.POINT }\n  }\n\n  const type = geom.type || geom.getType()\n  const complexTypes = [\n    GeometryType.GEOMETRY_COLLECTION,\n  ]\n\n  if (complexTypes.includes(type) === false) {\n    return geom\n  }\n\n  return (geom.geometries || geom.getGeometries())[0]\n}\n\n/**\n * @param {Geometry|Object} geom\n * @param {number} [precision=COORD_PRECISION]\n * @return {Coordinate|undefined}\n */\nexport function findPointOnSurface (geom, precision = COORD_PRECISION) {\n  const simpleGeom = toSimpleGeom(geom)\n  const pointFeature = pointOnFeature({\n    type: simpleGeom.type || simpleGeom.getType(),\n    coordinates: simpleGeom.coordinates || simpleGeom.getCoordinates(),\n  })\n  if (pointFeature?.geometry) {\n    return roundCoords(\n      pointFeature.geometry.type,\n      pointFeature.geometry.coordinates,\n      precision,\n    )\n  }\n}\n\nexport function getGeometryId (geometry) {\n  if (geometry instanceof Geometry) {\n    return geometry.get('id')\n  } else if (isPlainObject(geometry)) {\n    return geometry.id\n  }\n\n  throw new Error('Illegal geometry argument')\n}\n\nexport function setGeometryId (geometry, geometryId) {\n  if (geometry instanceof Geometry) {\n    geometry.set('id', geometryId)\n\n    return geometry\n  } else if (isPlainObject(geometry)) {\n    geometry.id = geometryId\n\n    return geometry\n  }\n\n  throw new Error('Illegal geometry argument')\n}\n\nexport function initializeGeometry (geometry, defaultGeometryId) {\n  if (getGeometryId(geometry) == null) {\n    setGeometryId(geometry, defaultGeometryId || uuid())\n  }\n\n  return geometry\n}\n\n/**\n * @param value\n * @return {boolean}\n */\nexport function isCircleGeom (value) {\n  return getGeomType(value) === GeometryType.CIRCLE\n}\n\nexport function getGeomCoords (geom) {\n  if (!geom) return\n\n  const type = getGeomType(geom)\n  switch (type) {\n    case GeometryType.CIRCLE:\n      return roundCoords(type, geom.coordinates || geom.getCenter())\n    default:\n      return roundCoords(type, geom.coordinates || geom.getCoordinates())\n  }\n}\n\nexport function getGeomType (geom) {\n  if (geom instanceof Geometry) {\n    return geom.getType()\n  }\n  return geom?.type\n}\n","import { fromLonLat, toLonLat, transform as baseTransform, transformExtent as baseTransformExtent } from 'ol/proj'\nimport { GeometryType } from './enums'\nimport { calcDistance, COORD_PRECISION, roundCoords, roundExtent } from './coord'\n\nexport const EPSG_4326 = 'EPSG:4326'\nexport const EPSG_3857 = 'EPSG:3857'\n\n/**\n * @param {number[]} coordinate\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Coordinate|number[]}\n */\nexport function pointToLonLat (\n  coordinate,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinate) return\n\n  return roundCoords(GeometryType.POINT, toLonLat(coordinate, projection), precision)\n}\n\n/**\n * @param {number[]} coordinate\n * @param {module:ol/proj.ProjectionLike} [projection]\n * @param {number} [precision=COORD_PRECISION]\n * @return {number[]}\n */\nexport function pointFromLonLat (\n  coordinate,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinate) return\n\n  return roundCoords(GeometryType.POINT, fromLonLat(coordinate, projection), precision)\n}\n\n/**\n * @param {number[]} coordinate\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @returns {number[]}\n */\nexport function transformPoint (\n  coordinate,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinate) return\n\n  return transform(coordinate, sourceProjection, destProjection, precision)\n}\n\n/**\n * @param {number[]} coordinate\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @returns {number[]}\n */\nexport function transform (\n  coordinate,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinate) return\n  let coord = baseTransform(coordinate, sourceProjection, destProjection)\n  if (coord.some(x => isNaN(x))) {\n    coord = baseTransform(baseTransform(coordinate, sourceProjection, EPSG_4326), EPSG_4326, destProjection)\n  }\n  return roundCoords(GeometryType.POINT, coord, precision)\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function lineToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => pointToLonLat(point, projection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function lineFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => pointFromLonLat(point, projection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @returns {number[]}\n */\nexport function transformLine (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => transformPoint(point, sourceProjection, destProjection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function polygonToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => lineToLonLat(line, projection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function polygonFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => lineFromLonLat(line, projection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @returns {*}\n */\nexport function transformPolygon (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => transformLine(line, sourceProjection, destProjection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function multiPointToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => pointToLonLat(point, projection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function multiPointFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => pointFromLonLat(point, projection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function transformMultiPoint (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => transformPoint(point, sourceProjection, destProjection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function multiLineToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => lineToLonLat(line, projection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function multiLineFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => lineFromLonLat(line, projection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function transformMultiLine (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => transformLine(line, sourceProjection, destProjection, precision))\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<Array<number[]>>>}\n */\nexport function multiPolygonToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(polygon => polygonToLonLat(polygon, projection, precision))\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<Array<number[]>>>}\n */\nexport function multiPolygonFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(polygon => polygonFromLonLat(polygon, projection, precision))\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<Array<number[]>>>}\n */\nexport function transformMultiPolygon (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(polygon => transformPolygon(polygon, sourceProjection, destProjection, precision))\n}\n\n/**\n * Transforms by geom type\n * @type {Object<string, function>}\n */\nexport const transforms = /*#__PURE__*/{\n  [GeometryType.POINT]: {\n    toLonLat: pointToLonLat,\n    fromLonLat: pointFromLonLat,\n    transform: transformPoint,\n  },\n  [GeometryType.LINE_STRING]: {\n    toLonLat: lineToLonLat,\n    fromLonLat: lineFromLonLat,\n    transform: transformLine,\n  },\n  [GeometryType.POLYGON]: {\n    toLonLat: polygonToLonLat,\n    fromLonLat: polygonFromLonLat,\n    transform: transformPolygon,\n  },\n  [GeometryType.MULTI_POINT]: {\n    toLonLat: multiPointToLonLat,\n    fromLonLat: multiPointFromLonLat,\n    transform: transformMultiPoint,\n  },\n  [GeometryType.MULTI_LINE_STRING]: {\n    toLonLat: multiLineToLonLat,\n    fromLonLat: multiLineFromLonLat,\n    transform: transformMultiLine,\n  },\n  [GeometryType.MULTI_POLYGON]: {\n    toLonLat: multiPolygonToLonLat,\n    fromLonLat: multiPolygonFromLonLat,\n    transform: transformMultiPolygon,\n  },\n  [GeometryType.CIRCLE]: {\n    toLonLat: pointToLonLat,\n    fromLonLat: pointFromLonLat,\n    transform: transformPoint,\n  },\n}\n\n/**\n * @param {number[]} extent\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @return {number[]}\n */\nexport function transformExtent (\n  extent,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!extent) return\n  if (extent.every(x => !isFinite(x))) return extent\n  let ext = baseTransformExtent(extent, sourceProjection, destProjection)\n  if (ext.some(x => isNaN(x))) {\n    ext = baseTransformExtent(baseTransformExtent(extent, sourceProjection, EPSG_4326), EPSG_4326, destProjection)\n  }\n  return roundExtent(ext, precision)\n}\n\n/**\n * @param {number[]} extent\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG:3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {number[]}\n */\nexport function extentFromLonLat (\n  extent,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!extent) return\n\n  return transformExtent(extent, EPSG_4326, projection, precision)\n}\n\n/**\n * @param {number[]} extent\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG:3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {number[]}\n */\nexport function extentToLonLat (\n  extent,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!extent) return\n\n  return transformExtent(extent, projection, EPSG_4326, precision)\n}\n\nexport function transformDistance (\n  distance,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!distance) return\n\n  const line = transformLine(\n    [[0, 0], [distance, 0]],\n    sourceProjection,\n    destProjection,\n    precision,\n  )\n\n  return calcDistance(line[0], line[1], precision)\n}\n","import { Geometry } from 'ol/geom'\nimport { Circle, Fill, Icon, Image as ImageStyle, RegularShape, Stroke, Style, Text } from 'ol/style'\nimport parseColor from 'parse-color'\nimport { v4 as uuid } from 'uuid'\nimport { GeometryType } from './enums'\nimport { addPrefix, filter, identity, isArray, isFunction, isNumeric, reduce } from '../utils'\n\nfunction isStyle (style) {\n  return style instanceof Style ||\n    style instanceof ImageStyle ||\n    style instanceof Fill ||\n    style instanceof Stroke ||\n    style instanceof Text ||\n    style instanceof Function\n}\n\nexport function getStyleId (style) {\n  if (isStyle(style)) {\n    return style.id\n  }\n\n  throw new Error('Illegal style argument')\n}\n\nexport function setStyleId (style, styleId) {\n  if (isStyle(style)) {\n    style.id = styleId\n\n    return style\n  }\n\n  throw new Error('Illegal style argument')\n}\n\nexport function initializeStyle (style, defaultStyleId) {\n  if (getStyleId(style) == null) {\n    setStyleId(style, defaultStyleId || uuid())\n  }\n\n  return style\n}\n\n/**\n * @return {VlStyle[]}\n */\nexport function defaultStyle () {\n  return [\n    {\n      fillColor: [255, 255, 255, 0.4],\n      strokeColor: '#3399cc',\n      strokeWidth: 1.25,\n      imageRadius: 5,\n    },\n  ]\n}\n\n/**\n * @return {Object<GeometryType, VlStyle[]>}\n */\nexport function defaultEditStyle () {\n  /** @type {Object<GeometryType, VlStyle[]>} */\n  const styles = {}\n  const white = [255, 255, 255, 1]\n  const blue = [0, 153, 255, 1]\n  const width = 3\n\n  styles[GeometryType.LINE_STRING] = [\n    {\n      strokeColor: white,\n      strokeWidth: width + 2,\n    }, {\n      strokeColor: blue,\n      strokeWidth: width,\n    },\n  ]\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING]\n\n  styles[GeometryType.POLYGON] = [\n    {\n      fillColor: [255, 255, 255, 0.5],\n    },\n  ].concat(styles[GeometryType.LINE_STRING])\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON]\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING])\n\n  styles[GeometryType.POINT] = [\n    {\n      imageRadius: width * 2,\n      fillColor: blue,\n      strokeColor: white,\n      strokeWidth: width / 2,\n      zIndex: Infinity,\n    },\n  ]\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT]\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING],\n    styles[GeometryType.POINT],\n  )\n\n  return styles\n}\n\nconst isEmpty = x => {\n  if (x == null) return true\n  if (typeof x === 'number') return false\n\n  return ((typeof x === 'string' || Array.isArray(x)) && !x.length) || !Object.keys(x).length\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {function} [geomReader=identity]\n * @return {Style|undefined}\n */\nexport function createStyle (vlStyle, geomReader = identity) {\n  if (isEmpty(vlStyle)) return\n\n  const olStyle = {\n    text: createTextStyle(vlStyle, 'text'),\n    fill: createFillStyle(vlStyle, 'fill'),\n    stroke: createStrokeStyle(vlStyle, 'stroke'),\n    image: createImageStyle(vlStyle, 'image'),\n    geometry: createGeomStyle(vlStyle, geomReader),\n    zIndex: vlStyle.zIndex,\n    renderer: vlStyle.renderer,\n  }\n\n  if (!isEmpty(olStyle)) {\n    return new Style(olStyle)\n  }\n}\n\n/**\n * @param {*} color\n * @returns {*}\n */\nexport function normalizeColor (color) {\n  let c = color\n\n  if (typeof color === 'string') {\n    c = parseColor(color).rgba\n  }\n\n  return c\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Fill|undefined}\n */\nexport function createFillStyle (vlStyle, prefix = '') {\n  const prefixKey = addPrefix(prefix)\n  // check on already compiled style existence\n  if (vlStyle[prefixKey()] instanceof Fill) return vlStyle[prefixKey()]\n\n  const keys = [\n    'color',\n  ].reduce((keys, key) => ({\n    ...keys,\n    [prefixKey(key)]: key,\n  }), {})\n  const fillStyle = reduce(vlStyle, (style, value, name) => {\n    if (!keys[name] || value == null) return style\n\n    switch (keys[name]) {\n      case 'color':\n        value = normalizeColor(value)\n        break\n    }\n\n    style[keys[name]] = value\n\n    return style\n  }, {})\n\n  if (!isEmpty(fillStyle)) {\n    return new Fill(fillStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Stroke|undefined}\n */\nexport function createStrokeStyle (vlStyle, prefix = '') {\n  const prefixKey = addPrefix(prefix)\n  if (vlStyle[prefixKey()] instanceof Stroke) return vlStyle[prefixKey()]\n\n  const keys = [\n    'color',\n    'width',\n    'miterLimit',\n    'lineCap',\n    'lineJoin',\n    'lineDash',\n    'lineDashOffset',\n  ].reduce((keys, key) => ({\n    ...keys,\n    [prefixKey(key)]: key,\n  }), {})\n  const strokeStyle = reduce(vlStyle, (style, value, name) => {\n    if (!keys[name] || value == null) return style\n\n    switch (keys[name]) {\n      case 'color':\n        value = normalizeColor(value)\n        break\n    }\n\n    style[keys[name]] = value\n\n    return style\n  }, {})\n\n  if (!isEmpty(strokeStyle)) {\n    return new Stroke(strokeStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Image|undefined}\n * @todo split to separate circle, regShape, Icon\n */\nexport function createImageStyle (vlStyle, prefix = '') {\n  const prefixKey = addPrefix(prefix)\n\n  if (\n    isEmpty(vlStyle[prefixKey('src')]) &&\n    isEmpty(vlStyle.image) &&\n    isEmpty(vlStyle[prefixKey('points')]) &&\n    !isNumeric(vlStyle[prefixKey('radius')])\n  ) {\n    return\n  }\n\n  if (vlStyle.image instanceof ImageStyle) return vlStyle.image\n\n  let imageStyle, Ctor\n\n  if (!isEmpty(vlStyle[prefixKey('src')]) || !isEmpty(vlStyle.image)) {\n    // icon construction\n    Ctor = Icon\n    // then create Icon options\n    imageStyle = {\n      anchor: vlStyle[prefixKey('anchor')],\n      anchorOrigin: vlStyle[prefixKey('anchorOrigin')],\n      anchorXUnits: vlStyle[prefixKey('anchorXUnits')],\n      anchorYUnits: vlStyle[prefixKey('anchorYUnits')],\n      color: vlStyle[prefixKey('color')],\n      offset: vlStyle[prefixKey('offset')],\n      offsetOrigin: vlStyle[prefixKey('offsetOrigin')],\n      size: vlStyle[prefixKey('size')],\n      img: vlStyle.image,\n      imgSize: vlStyle[prefixKey('imgSize')],\n      src: vlStyle[prefixKey('src')],\n      crossOrigin: vlStyle[prefixKey('crossOrigin')],\n    }\n  } else if (vlStyle[prefixKey('points')] != null) {\n    // regular shape construction\n    Ctor = RegularShape\n    // create RegularShape options\n    imageStyle = {\n      points: vlStyle[prefixKey('points')],\n      radius: vlStyle[prefixKey('radius')],\n      radius1: vlStyle[prefixKey('radius1')],\n      radius2: vlStyle[prefixKey('radius2')],\n      angle: vlStyle[prefixKey('angle')],\n    }\n  } else {\n    // circle construction\n    Ctor = Circle\n    // create Circle options\n    imageStyle = {\n      radius: vlStyle[prefixKey('radius')],\n    }\n  }\n\n  imageStyle = {\n    ...imageStyle,\n    fill: createFillStyle(vlStyle, prefixKey('fill')),\n    stroke: createStrokeStyle(vlStyle, prefixKey('stroke')),\n    opacity: vlStyle[prefixKey('opacity')],\n    scale: vlStyle[prefixKey('scale')],\n    rotation: vlStyle[prefixKey('rotation')],\n    rotateWithView: vlStyle[prefixKey('rotateWithView')],\n    displacement: vlStyle[prefixKey('displacement')],\n  }\n\n  if (!isEmpty(imageStyle)) {\n    return new Ctor(imageStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Text|undefined}\n */\nexport function createTextStyle (vlStyle, prefix = '') {\n  if (vlStyle.text == null) return\n  if (vlStyle.text instanceof Text) return vlStyle.text\n\n  const prefixKey = addPrefix(prefix)\n  const textStyle = {\n    text: vlStyle.text,\n    textAlign: vlStyle.textAlign,\n    textBaseline: vlStyle.textBaseline,\n    font: vlStyle[prefixKey('font')],\n    scale: vlStyle[prefixKey('scale')],\n    offsetX: vlStyle[prefixKey('offsetX')],\n    offsetY: vlStyle[prefixKey('offsetY')],\n    rotation: vlStyle[prefixKey('rotation')],\n    rotateWithView: vlStyle[prefixKey('rotateWithView')],\n    padding: vlStyle[prefixKey('padding')],\n    maxAngle: vlStyle[prefixKey('maxAngle')],\n    overflow: vlStyle[prefixKey('overflow')],\n    placement: vlStyle[prefixKey('placement')],\n    fill: createFillStyle(vlStyle, prefixKey('fill')),\n    stroke: createStrokeStyle(vlStyle, prefixKey('stroke')),\n    backgroundFill: createFillStyle(vlStyle, prefixKey('backgroundFill')),\n    backgroundStroke: createStrokeStyle(vlStyle, prefixKey('backgroundStroke')),\n  }\n\n  if (!isEmpty(textStyle)) {\n    return new Text(textStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {function} [geomReader=identity]\n * @return {Geometry|Object|function|undefined}\n */\nexport function createGeomStyle (vlStyle, geomReader = identity) {\n  if (isFunction(vlStyle.geom)) {\n    return function __styleGeomFunc (feature) {\n      return vlStyle.geom(feature)\n    }\n  }\n  if (vlStyle.geom instanceof Geometry) {\n    return vlStyle.geom\n  }\n  if (vlStyle.geom) {\n    return geomReader(vlStyle.geom)\n  }\n  return null\n}\n\nexport function dumpStyle (olStyle, geomWriter = identity) {\n  if (!olStyle || isFunction(olStyle)) return\n\n  return {\n    ...dumpFillStyle(olStyle.getFill(), 'fill'),\n    ...dumpStrokeStyle(olStyle.getStroke(), 'stroke'),\n    ...dumpImageStyle(olStyle.getImage(), 'image'),\n    ...dumpTextStyle(olStyle.getText(), 'text'),\n    ...dumpGeomStyle(olStyle.getGeometry(), geomWriter),\n    zIndex: olStyle.getZIndex(),\n    // renderer: olStyle.getRenderer(),\n  }\n}\n\nexport function dumpFillStyle (fillStyle, prefix = '') {\n  if (!fillStyle) return {}\n\n  const prefixKey = addPrefix(prefix)\n\n  return {\n    [prefixKey('color')]: fillStyle.getColor(),\n  }\n}\n\nexport function dumpStrokeStyle (strokeStyle, prefix = '') {\n  if (!strokeStyle) return {}\n\n  const prefixKey = addPrefix(prefix)\n\n  return {\n    [prefixKey('color')]: strokeStyle.getColor(),\n    [prefixKey('width')]: strokeStyle.getWidth(),\n    [prefixKey('miterLimit')]: strokeStyle.getMiterLimit(),\n    [prefixKey('lineCap')]: strokeStyle.getLineCap(),\n    [prefixKey('lineJoin')]: strokeStyle.getLineJoin(),\n    [prefixKey('lineDash')]: strokeStyle.getLineDash(),\n    [prefixKey('lineDashOffset')]: strokeStyle.getLineDashOffset(),\n  }\n}\n\nexport function dumpImageStyle (imageStyle, prefix = '') {\n  if (!imageStyle) return {}\n\n  const prefixKey = addPrefix(prefix)\n  const common = {\n    [prefixKey('opacity')]: imageStyle.getOpacity(),\n    [prefixKey('scale')]: imageStyle.getScale(),\n    [prefixKey('rotation')]: imageStyle.getRotation(),\n    [prefixKey('rotateWithView')]: imageStyle.getRotateWithView(),\n    [prefixKey('displacement')]: imageStyle.getDisplacement(),\n  }\n\n  switch (true) {\n    case imageStyle instanceof Icon:\n      return {\n        ...common,\n        // fixme avoid using of internal fields, but currently Icon haven't getters for several fields\n        [prefixKey('anchor')]: imageStyle.anchor_.slice(),\n        [prefixKey('anchorOrigin')]: imageStyle.anchorOrigin_,\n        [prefixKey('anchorXUnits')]: imageStyle.anchorXUnits_,\n        [prefixKey('anchorYUnits')]: imageStyle.anchorYUnits_,\n        [prefixKey('color')]: isArray(imageStyle.getColor()) ? imageStyle.getColor().slice() : imageStyle.getColor(),\n        [prefixKey('offset')]: imageStyle.offset_.slice(),\n        [prefixKey('offsetOrigin')]: imageStyle.offsetOrigin_,\n        [prefixKey('size')]: isArray(imageStyle.getSize()) ? imageStyle.getSize().slice() : imageStyle.getSize(),\n        [prefixKey('src')]: imageStyle.getSrc(),\n        [prefixKey('crossOrigin')]: imageStyle.crossOrigin_,\n      }\n    case imageStyle instanceof Circle:\n      return {\n        ...common,\n        ...dumpFillStyle(imageStyle.getFill(), prefixKey('fill')),\n        ...dumpStrokeStyle(imageStyle.getStroke(), prefixKey('stroke')),\n        [prefixKey('radius')]: imageStyle.getRadius(),\n      }\n    case imageStyle instanceof RegularShape:\n      return {\n        ...common,\n        ...dumpFillStyle(imageStyle.getFill(), prefixKey('fill')),\n        ...dumpStrokeStyle(imageStyle.getStroke(), prefixKey('stroke')),\n        [prefixKey('points')]: imageStyle.getPoints(),\n        [prefixKey('radius')]: imageStyle.getRadius(),\n        [prefixKey('radius2')]: imageStyle.getRadius2(),\n        [prefixKey('angle')]: imageStyle.getAngle(),\n      }\n    default:\n      return {\n        ...common,\n      }\n  }\n}\n\nexport function dumpTextStyle (textStyle, prefix = '') {\n  if (!textStyle) return {}\n\n  const prefixKey = addPrefix(prefix)\n\n  return filter({\n    text: textStyle.getText(),\n    textAlign: textStyle.getTextAlign(),\n    textBaseline: textStyle.getTextBaseline(),\n    [prefixKey('font')]: textStyle.getFont(),\n    [prefixKey('scale')]: textStyle.getScale(),\n    [prefixKey('rotation')]: textStyle.getRotation(),\n    [prefixKey('offsetX')]: textStyle.getOffsetX(),\n    [prefixKey('offsetY')]: textStyle.getOffsetY(),\n    [prefixKey('rotateWithView')]: textStyle.getRotateWithView(),\n    [prefixKey('padding')]: textStyle.getPadding(),\n    [prefixKey('maxAngle')]: textStyle.getMaxAngle(),\n    [prefixKey('overflow')]: textStyle.getOverflow(),\n    [prefixKey('placement')]: textStyle.getPlacement(),\n    ...dumpFillStyle(textStyle.getFill(), prefixKey('fill')),\n    ...dumpStrokeStyle(textStyle.getStroke(), prefixKey('stroke')),\n    ...dumpFillStyle(textStyle.getBackgroundFill(), prefixKey('backgroundFill')),\n    ...dumpStrokeStyle(textStyle.getBackgroundStroke(), prefixKey('backgroundStroke')),\n  }, value => value != null)\n}\n\nexport function dumpGeomStyle (geom, geomWriter = identity) {\n  if (!geom) return {}\n\n  return {\n    geom: geomWriter(geom),\n  }\n}\n\n/**\n * @typedef {\n *            module:ol/style/Style~Style |\n *            module:ol/style/Image~ImageStyle |\n *            module:ol/style/Fill~Fill |\n *            module:ol/style/Stroke~Stroke |\n *            module:ol/style/Text~Text |\n *            module:ol/style/Style~StyleFunction\n *          } OlAllStyle\n */\n\n/**\n * @typedef {Object} VlStyle\n *\n * Shared\n * @property {string|number[]|undefined} fillColor\n * @property {string|number[]|undefined} strokeColor\n * @property {number|undefined} strokeWidth\n * @property {number|undefined} strokeMiterLimit\n * @property {number[]|undefined} strokeLineDash\n * @property {number|undefined} strokeLineDashOffset\n * @property {string|undefined} strokeLineCap\n * @property {string|undefined} strokeLineJoin\n * @property {number|undefined} zIndex\n * @property {Fill|undefined} fill\n * @property {Stroke|undefined} stroke\n * @property {RenderFunction|undefined} renderer\n *\n * Text only\n * @property {string|Text|undefined} text\n * @property {string|undefined} textFont\n * @property {number|string|undefined} textFontSize\n * @property {string|undefined} textFontWeight\n * @property {string|number[]|undefined} textFillColor\n * @property {string|number[]|undefined} textStrokeColor\n * @property {number|undefined} textStrokeWidth\n * @property {number|undefined} textStrokeMiterLimit\n * @property {number[]|undefined} textStrokeLineDash\n * @property {number|undefined} textStrokeLineDashOffset\n * @property {string|undefined} textStrokeLineCap\n * @property {string|undefined} textStrokeLineJoin\n * @property {number|undefined} textScale\n * @property {string|undefined} textAlign\n * @property {number|undefined} textRotation\n * @property {number|undefined} textOffsetX\n * @property {number|undefined} textOffsetY\n * @property {Stroke|undefined} textStroke\n * @property {Fill|undefined} textFill\n * @property {boolean|undefined} textRotateWithView\n * @property {number[]|undefined} textPadding\n * @property {number|undefined} textMaxAngle\n * @property {boolean|undefined} textOverflow\n * @property {string|undefined} textPlacement\n * @property {string|undefined} textBaseline\n * @property {Fill|undefined} textBackgroundFillColor\n * @property {Stroke|undefined} textBackgroundStrokeColor\n * @property {Stroke|undefined} textBackgroundStrokeWidth\n * @property {number|undefined} textBackgroundStrokeMiterLimit\n * @property {Stroke|undefined} textBackgroundStrokeLineDash\n * @property {number|undefined} textBackgroundStrokeLineDashOffset\n * @property {Stroke|undefined} textBackgroundStrokeCap\n * @property {Stroke|undefined} textBackgroundStrokeJoin\n *\n * Image only\n * @property {Image|undefined} image\n * @property {string|undefined} imageSrc\n * @property {number[]|undefined} imageSize\n * @property {number[]|undefined} imageImgSize\n * @property {number|undefined} imageOffset\n * @property {number[]|undefined} imageAnchor\n * @property {string|undefined} imageAnchorXUnits\n * @property {string|undefined} imageAnchorYUnits\n * @property {number|undefined} imageScale\n * @property {number|undefined} imageRotation\n * @property {number|undefined} imageRadius\n * @property {number|undefined} imageRadius1\n * @property {number|undefined} imageRadius2\n * @property {number|undefined} imagePoints\n * @property {number|undefined} imageAngle\n * @property {number|undefined} imageOpacity\n * @property {string|number[]|undefined} imageFillColor\n * @property {string|number[]|undefined} imageStrokeColor\n * @property {number|undefined} imageStrokeWidth\n * @property {number|undefined} imageStrokeMiterLimit\n * @property {number[]|undefined} imageStrokeLineDash\n * @property {number|undefined} imageStrokeLineDashOffset\n * @property {string|undefined} imageStrokeLineCap\n * @property {string|undefined} imageStrokeLineJoin\n * @property {IconOrigin|undefined} imageAnchorOrigin\n * @property {ColorLike|undefined} imageColor\n * @property {IconOrigin|undefined} imageOffsetOrigin\n * @property {Stroke|undefined} imageStroke\n * @property {Fill|undefined} imageFill\n * @property {string|undefined} imageCrossOrigin\n * @property {boolean|undefined} imageRotateWithView\n * @property {number[]|undefined} imageDisplacement\n *\n * @property {Geometry|Object|function|undefined} geom Coordinates should be in map projection\n */\n","import { Feature } from 'ol'\nimport { GeoJSON as BaseGeoJSON, MVT } from 'ol/format'\nimport { Circle, LineString } from 'ol/geom'\nimport { isEmpty } from 'ol/obj'\nimport { getLength } from 'ol/sphere'\nimport { clonePlainObject, isArray, isFunction, isPlainObject, map, noop, omit } from '../utils'\nimport { COORD_PRECISION } from './coord'\nimport { GeometryType } from './enums'\nimport { createCircularPolygon, isCircleGeom } from './geom'\nimport { EPSG_3857, EPSG_4326, transformDistance, transformPoint } from './proj'\nimport { createStyle, dumpStyle } from './style'\n\n/**\n * @param {Object} [options]\n * @return {GeoJSON}\n */\nexport function createGeoJsonFmt (options) {\n  return new GeoJSON(options)\n}\n\n/**\n * @param [options]\n * @return {MVT}\n */\nexport function createMvtFmt (options) {\n  return new MVT(options)\n}\n\nexport const CIRCLE_SERIALIZE_PROP = 'vl_circle'\nexport const STYLE_SERIALIZE_PROP = 'vl_style'\n\nclass GeoJSON extends BaseGeoJSON {\n  constructor (options = {}) {\n    super(options)\n\n    this.defaultDecimals = options.decimals != null && options.decimals > -1 ? options.decimals : undefined\n    this.defaultStyleReader = options.styleReader || noop\n    this.defaultStyleWriter = options.styleWriter || noop\n  }\n\n  adaptOptions (options = {}) {\n    if (options.decimals != null && options.decimals < 0) {\n      options.decimals = undefined\n    }\n\n    return super.adaptOptions({\n      decimals: this.defaultDecimals,\n      styleReader: this.defaultStyleReader,\n      styleWriter: this.defaultStyleWriter,\n      ...options,\n    })\n  }\n\n  writeGeometryObject (geometry, options) {\n    options = this.adaptOptions(options)\n\n    if (isCircleGeom(geometry)) {\n      let center = geometry.getCenter().slice()\n      const end = [center[0] + geometry.getRadius(), center[1]]\n      const radius = getLength(new LineString([center, end]), options.featureProjection)\n      center = transformPoint(center, options.featureProjection, EPSG_4326)\n      geometry = createCircularPolygon(center, radius)\n      options.featureProjection = EPSG_4326\n    }\n\n    return super.writeGeometryObject(geometry, options)\n  }\n\n  writeFeatureObject (feature, options) {\n    options = this.adaptOptions(options)\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      type: 'Feature',\n      geometry: null,\n      properties: null,\n    }\n\n    const id = feature.getId()\n    if (id !== undefined) {\n      object.id = id\n    }\n\n    /* eslint-disable quote-props */\n\n    const geometry = feature.getGeometry()\n    if (geometry) {\n      object.geometry = this.writeGeometryObject(geometry, options)\n      if (isCircleGeom(geometry)) {\n        object.properties = {\n          ...object.properties || {},\n          [CIRCLE_SERIALIZE_PROP]: {\n            center: transformPoint(\n              geometry.getCenter(),\n              options.featureProjection,\n              options.dataProjection,\n            ),\n            radius: transformDistance(\n              geometry.getRadius(),\n              options.featureProjection,\n              options.dataProjection,\n            ),\n          },\n        }\n      }\n    }\n\n    const properties = feature.getProperties()\n    delete properties[feature.getGeometryName()]\n    if (!isEmpty(properties)) {\n      object.properties = {\n        ...object.properties || {},\n        ...clonePlainObject(omit(properties, 'features')),\n      }\n\n      if (isArray(properties.features)) {\n        object.properties.features = map(properties.features, feature => {\n          if (feature instanceof Feature) {\n            return this.writeFeatureObject(feature, options)\n          }\n          return feature\n        })\n      }\n    }\n\n    let style = feature.getStyle()\n    if (style && !isFunction(style)) {\n      isArray(style) || (style = [style])\n      object.properties = {\n        ...object.properties || {},\n        [STYLE_SERIALIZE_PROP]: style.map(style => options.styleWriter(\n          style,\n          geometry => this.writeGeometryObject(geometry, options),\n        )),\n      }\n    }\n\n    /* eslint-enable quote-props */\n\n    return object\n  }\n\n  readFeatureFromObject (object, options) {\n    options = this.adaptOptions(options)\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature\n    if (object.type === 'Feature') {\n      geoJSONFeature = clonePlainObject(object)\n    } else {\n      geoJSONFeature = {\n        type: 'Feature',\n        geometry: clonePlainObject(object),\n        properties: null,\n      }\n    }\n\n    const feature = new Feature()\n\n    /* eslint-disable dot-notation */\n\n    if (geoJSONFeature.properties && geoJSONFeature.properties[CIRCLE_SERIALIZE_PROP]) {\n      options.circle = geoJSONFeature.properties[CIRCLE_SERIALIZE_PROP]\n      delete geoJSONFeature.properties[CIRCLE_SERIALIZE_PROP]\n    }\n    const geometry = this.readGeometryFromObject(geoJSONFeature.geometry, options)\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_)\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature.geometry_name)\n    }\n    feature.setGeometry(geometry)\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature.id)\n    }\n\n    if (geoJSONFeature.properties) {\n      if (geoJSONFeature.properties[STYLE_SERIALIZE_PROP]) {\n        let style = geoJSONFeature.properties[STYLE_SERIALIZE_PROP]\n        isArray(style) || (style = [style])\n        feature.setStyle(\n          style.map(style => options.styleReader(\n            style,\n            geometry => this.readGeometryFromObject(geometry, omit(options, ['circle'])),\n          )),\n        )\n        delete geoJSONFeature.properties[STYLE_SERIALIZE_PROP]\n      }\n\n      if (isArray(geoJSONFeature.properties.features)) {\n        geoJSONFeature.properties.features = map(geoJSONFeature.properties.features, feature => {\n          if (isGeoJSONFeature(feature)) {\n            return this.readFeatureFromObject(feature, options)\n          }\n          return feature\n        })\n      }\n\n      feature.setProperties(geoJSONFeature.properties, true)\n    }\n\n    /* eslint-enable dot-notation */\n\n    return feature\n  }\n\n  readGeometryFromObject (object, options) {\n    options = this.adaptOptions(options)\n\n    if (options.circle?.center && options.circle?.radius) {\n      return new Circle(\n        transformPoint(\n          options.circle.center,\n          options.dataProjection,\n          options.featureProjection,\n        ),\n        transformDistance(\n          options.circle.radius,\n          options.dataProjection,\n          options.featureProjection,\n        ),\n      )\n    }\n\n    return super.readGeometryFromObject(clonePlainObject(object), options)\n  }\n}\n\nlet geoJsonFmt\n\nexport function getGeoJsonFmt () {\n  if (geoJsonFmt) {\n    return geoJsonFmt\n  }\n  return createGeoJsonFmt({\n    decimals: COORD_PRECISION,\n    styleReader: createStyle,\n    styleWriter: dumpStyle,\n  })\n}\n\n/**\n * @param {Feature} feature\n * @param {ProjectionLike|undefined} [featureProjection=EPSG:3857]\n * @param {ProjectionLike|undefined} [dataProjection=EPSG:4326]\n * @param {number} [decimals=COORD_PRECISION]\n * @return {Object}\n */\nexport function writeGeoJsonFeature (\n  feature,\n  featureProjection = EPSG_3857,\n  dataProjection = EPSG_4326,\n  decimals = COORD_PRECISION,\n) {\n  if (!feature) return\n\n  return getGeoJsonFmt().writeFeatureObject(feature, {\n    featureProjection,\n    dataProjection,\n    decimals,\n  })\n}\n\n/**\n * @param {Object} geoJsonFeature\n * @param {ProjectionLike|undefined} [featureProjection=EPSG:3857]\n * @param {ProjectionLike|undefined} [dataProjection=EPSG:4326]\n * @param {number} [decimals=COORD_PRECISION]\n * @return {Feature}\n */\nexport function readGeoJsonFeature (\n  geoJsonFeature,\n  featureProjection = EPSG_3857,\n  dataProjection = EPSG_4326,\n  decimals = COORD_PRECISION,\n) {\n  if (!geoJsonFeature) return\n\n  return getGeoJsonFmt().readFeature(geoJsonFeature, {\n    featureProjection,\n    dataProjection,\n    decimals,\n  })\n}\n\n/**\n * @param {Geometry} geometry\n * @param {ProjectionLike|undefined} [geometryProjection=EPSG:3857]\n * @param {ProjectionLike|undefined} [dataProjection=EPSG:4326]\n * @param {number} [decimals=COORD_PRECISION]\n * @return {Object}\n */\nexport function writeGeoJsonGeometry (\n  geometry,\n  geometryProjection = EPSG_3857,\n  dataProjection = EPSG_4326,\n  decimals = COORD_PRECISION,\n) {\n  if (!geometry) return\n\n  return getGeoJsonFmt().writeGeometryObject(geometry, {\n    featureProjection: geometryProjection,\n    dataProjection,\n    decimals,\n  })\n}\n\n/**\n * @param {Object|Object} geoJsonGeometry\n * @param {ProjectionLike|undefined} [geometryProjection=EPSG:3857]\n * @param {ProjectionLike|undefined} [dataProjection=EPSG:4326]\n * @param {number} [decimals=COORD_PRECISION]\n * @return {Geometry}\n */\nexport function readGeoJsonGeometry (\n  geoJsonGeometry,\n  geometryProjection = EPSG_3857,\n  dataProjection = EPSG_4326,\n  decimals = COORD_PRECISION,\n) {\n  if (!geoJsonGeometry) return\n\n  dataProjection = readProjection(geoJsonGeometry, dataProjection)\n\n  return getGeoJsonFmt().readGeometry(geoJsonGeometry, {\n    featureProjection: geometryProjection,\n    dataProjection,\n    decimals,\n  })\n}\n\nexport function readProjection (geoJsonObj, defaultProjection) {\n  return getGeoJsonFmt().readProjection(geoJsonObj) || defaultProjection\n}\n\n/**\n * @param {Object} feature\n * @returns {boolean}\n */\nexport function isGeoJSONFeature (feature) {\n  return isPlainObject(feature) && feature.type === 'Feature' &&\n    isGeoJSONGeometry(feature.geometry)\n}\n\nexport function isGeoJSONGeometry (geometry) {\n  return isPlainObject(geometry) &&\n  Object.values(GeometryType).includes(geometry.type) &&\n  geometry.geometries\n    ? geometry.geometries.every((geometry) => isArray(geometry.coordinates))\n    : isArray(geometry?.coordinates)\n}\n","import { Feature } from 'ol'\nimport { v4 as uuid } from 'uuid'\nimport { isPlainObject, omit } from '../utils'\nimport { CIRCLE_SERIALIZE_PROP, STYLE_SERIALIZE_PROP } from './format'\n\n/**\n * @param {Object|module:ol/Feature~Feature|string|number} feature\n * @return {string|number}\n * @throws {Error}\n */\nexport function getFeatureId (feature) {\n  if (feature instanceof Feature) {\n    return feature.getId()\n  } else if (isPlainObject(feature)) {\n    return feature.id\n  }\n\n  throw new Error('Illegal feature format')\n}\n\n/**\n * @param {module:ol/Feature~Feature|Object} feature\n * @param {string} featureId\n * @returns {module:ol/Feature~Feature|Object}\n */\nexport function setFeatureId (feature, featureId) {\n  if (feature instanceof Feature) {\n    feature.setId(featureId)\n\n    return feature\n  } else if (isPlainObject(feature)) {\n    feature.id = featureId\n\n    return feature\n  }\n\n  throw new Error('Illegal feature format')\n}\n\n/**\n * @param {module:ol/Feature~Feature} feature\n * @param {string|undefined} defaultFeatureId\n * @returns {Feature}\n */\nexport function initializeFeature (feature, defaultFeatureId) {\n  if (getFeatureId(feature) == null) {\n    setFeatureId(feature, defaultFeatureId || uuid())\n  }\n\n  return feature\n}\n\nexport function getFeatureGeomName (feature) {\n  if (feature instanceof Feature) {\n    return feature.getGeometryName()\n  }\n  return 'geometry'\n}\n\nexport function getFeatureGeom (feature) {\n  if (feature instanceof Feature) {\n    return feature.getGeometry()\n  } else if (isPlainObject(feature)) {\n    return feature.geometry\n  }\n\n  throw new Error('Illegal feature format')\n}\n\nexport function getFeatureProperties (feature) {\n  if (!feature) return\n\n  return omit(\n    (feature instanceof Feature ? feature.getProperties() : feature.properties) || {},\n    [\n      getFeatureGeomName(feature),\n      CIRCLE_SERIALIZE_PROP,\n      STYLE_SERIALIZE_PROP,\n    ],\n  )\n}\n\nexport function setFeatureProperties (feature, properties) {\n  if (!feature) return\n\n  properties = omit(properties || {}, [\n    getFeatureGeomName(feature),\n    CIRCLE_SERIALIZE_PROP,\n    STYLE_SERIALIZE_PROP,\n  ])\n\n  if (feature instanceof Feature) {\n    feature.setProperties(properties)\n  } else {\n    feature.properties = properties\n  }\n}\n","import { Interaction } from 'ol/interaction'\nimport { v4 as uuid } from 'uuid'\n\n/**\n * @param {module:ol/interaction/Interaction~Interaction|Object} interaction\n * @returns {string|null}\n */\nexport function getInteractionId (interaction) {\n  if (interaction instanceof Interaction) {\n    return interaction.get('id')\n  }\n\n  throw new Error('Illegal interaction argument')\n}\n\n/**\n * @param {module:ol/interaction/Interaction~Interaction|Object} interaction\n * @param {string} interactionId\n * @returns {module:ol/interaction/Interaction~Interaction|Object}\n */\nexport function setInteractionId (interaction, interactionId) {\n  if (interaction instanceof Interaction) {\n    interaction.set('id', interactionId)\n\n    return interaction\n  }\n\n  throw new Error('Illegal interaction argument')\n}\n\nexport function getInteractionPriority (interaction) {\n  if (interaction instanceof Interaction) {\n    return interaction.get('priority')\n  }\n\n  throw new Error('Illegal interaction argument')\n}\n\nexport function setInteractionPriority (interaction, priority) {\n  if (interaction instanceof Interaction) {\n    interaction.set('priority', priority)\n\n    return interaction\n  }\n\n  throw new Error('Illegal interaction argument')\n}\n\nexport function initializeInteraction (interaction, defaultInteractionId, defaultPriority) {\n  if (getInteractionId(interaction) == null) {\n    setInteractionId(interaction, defaultInteractionId || uuid())\n  }\n  if (getInteractionPriority(interaction) == null) {\n    setInteractionPriority(interaction, defaultPriority || 0)\n  }\n\n  return interaction\n}\n","import BaseLayer from 'ol/layer/Base'\nimport { v4 as uuid } from 'uuid'\n\nexport function getLayerId (layer) {\n  if (layer instanceof BaseLayer) {\n    return layer.get('id')\n  }\n\n  throw new Error('Illegal layer argument')\n}\n\nexport function setLayerId (layer, layerId) {\n  if (layer instanceof BaseLayer) {\n    layer.set('id', layerId)\n\n    return layer\n  }\n\n  throw new Error('Illegal layer argument')\n}\n\nexport function initializeLayer (layer, defaultLayerId) {\n  if (getLayerId(layer) == null) {\n    setLayerId(layer, defaultLayerId || uuid())\n  }\n\n  return layer\n}\n","import { PluggableMap } from 'ol'\n\nexport function getMapId (map) {\n  if (map instanceof PluggableMap) {\n    return map.get('id')\n  }\n\n  throw new Error('Illegal map argument')\n}\n\nexport function setMapId (map, mapId) {\n  if (map instanceof PluggableMap) {\n    map.set('id', mapId)\n\n    return map\n  }\n\n  throw new Error('Illegal map argument')\n}\n\nexport function getMapDataProjection (map) {\n  if (map instanceof PluggableMap) {\n    return map.get('dataProjection')\n  }\n\n  throw new Error('Illegal map argument')\n}\n\nexport function setMapDataProjection (map, dataProjection) {\n  if (map instanceof PluggableMap) {\n    map.set('dataProjection', dataProjection)\n\n    return map\n  }\n\n  throw new Error('Illegal map argument')\n}\n","import { Overlay } from 'ol'\nimport { v4 as uuid } from 'uuid'\n\nexport function getOverlayId (overlay) {\n  if (overlay instanceof Overlay) {\n    return overlay.get('id')\n  }\n\n  throw new Error('Illegal overlay argument')\n}\n\nexport function setOverlayId (overlay, overlayId) {\n  if (overlay instanceof Overlay) {\n    overlay.set('id', overlayId)\n\n    return overlay\n  }\n\n  throw new Error('Illegal overlay argument')\n}\n\nexport function initializeOverlay (overlay, defaultOverlay) {\n  if (getOverlayId(overlay) == null) {\n    setOverlayId(overlay, defaultOverlay || uuid())\n  }\n\n  return overlay\n}\n","import { Source } from 'ol/source'\nimport { v4 as uuid } from 'uuid'\nimport { reduce } from '../utils'\n\nexport function getSourceId (source) {\n  if (source instanceof Source) {\n    return source.get('id')\n  }\n\n  throw new Error('Illegal source argument')\n}\n\nexport function setSourceId (source, sourceId) {\n  if (source instanceof Source) {\n    source.set('id', sourceId)\n\n    return source\n  }\n\n  throw new Error('Illegal source argument')\n}\n\nexport function initializeSource (source, defaultSourceId) {\n  if (getSourceId(source) == null) {\n    setSourceId(source, defaultSourceId || uuid())\n  }\n\n  return source\n}\n\nexport function cleanSourceParams (params, filterKeys) {\n  return reduce(params, (params, value, key) => {\n    key = key.toUpperCase()\n    if (filterKeys.includes(key)) {\n      return params\n    }\n\n    params[key] = value\n\n    return params\n  }, {})\n}\n","import { get as getProjection } from 'ol/proj'\nimport Units, { METERS_PER_UNIT } from 'ol/proj/Units'\nimport { createOrUpdate } from './extent'\n\n// copy-paste from ol/tilegrid\nexport function extentFromProjection (projection) {\n  projection = getProjection(projection)\n  let extent = projection.getExtent()\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit()\n    extent = createOrUpdate(-half, -half, half, half)\n  }\n  return extent\n}\n","import { View } from 'ol'\nimport { v4 as uuid } from 'uuid'\n\nexport function getViewId (view) {\n  if (view instanceof View) {\n    return view.get('id')\n  }\n\n  throw new Error('Illegal view argument')\n}\n\nexport function setViewId (view, viewId) {\n  if (view instanceof View) {\n    view.set('id', viewId)\n\n    return view\n  }\n\n  throw new Error('Illegal view argument')\n}\n\nexport function initializeView (view, defaultViewId) {\n  if (getViewId(view) == null) {\n    setViewId(view, defaultViewId || uuid())\n  }\n\n  return view\n}\n","export * from './control'\nexport * from './coord'\nexport * from './enums'\nexport * from './extent'\nexport * from './feature'\nexport * from './format'\nexport * from './geom'\nexport * from './interaction'\nexport * from './layer'\nexport * from './map'\nexport * from './overlay'\nexport * from './proj'\nexport * from './source'\nexport * from './style'\nexport * from './tilegrid'\nexport * from './view'\n\nexport function expandUrl (url) {\n  const urls = []\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url)\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0)\n    const stopCharCode = match[2].charCodeAt(0)\n    let charCode\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)))\n    }\n    return urls\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url)\n  if (match) {\n    // number range\n    const stop1 = parseInt(match[2], 10)\n    for (let i = parseInt(match[1], 10); i <= stop1; i++) {\n      urls.push(url.replace(match[0], i.toString()))\n    }\n    return urls\n  }\n  urls.push(url)\n  return urls\n}\n"],"names":["getControlId","control","Control","get","Error","setControlId","controlId","set","initializeControl","defaultControlId","uuid","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","ExtentCorner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","SourceState","UNDEFINED","LOADING","READY","ERROR","WMSServerType","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","COORD_PRECISION","roundExtent","extent","precision","map","x","round","roundPointCoords","coordinates","roundLineCoords","point","roundPolygonCoords","line","roundMultiPointCoords","roundMultiLineCoords","roundMultiPolygonCoords","polygon","roundCoords","geomType","flatCoords","polygonReducer","coords","lineString","concat","reduce","isEqualCoord","a","b","isEqual","calcDistance","point1","point2","dx","dy","squared","Math","sqrt","isPointCoords","and","isArray","length","every","isNumber","isLineCoords","isPolygonCoords","isMultiPointCoords","isMultiLineCoords","isMultiPolygonCoords","multiPolygon","createOrUpdate","minX","minY","maxX","maxY","getCorner","corner","coordinate","getBottomLeft","getBottomRight","getTopLeft","getTopRight","assert","createPointGeom","lonOrCoordinates","lat","Array","Point","createLineGeom","points","LineString","createPolygonGeom","rings","Polygon","createMultiPointGeom","MultiPoint","createMultiLineGeom","lines","MultiLineString","createMultiPolygonGeom","polygons","MultiPolygon","createGeomCollection","geoms","GeometryCollection","createCircularPolygon","center","radius","circularPolygon","isMultiGeom","geom","multiTypes","includes","type","getType","toSimpleGeom","Circle","getCenter","complexTypes","geometries","getGeometries","findPointOnSurface","simpleGeom","pointFeature","pointOnFeature","getCoordinates","geometry","getGeometryId","Geometry","isPlainObject","id","setGeometryId","geometryId","initializeGeometry","defaultGeometryId","isCircleGeom","value","getGeomType","getGeomCoords","EPSG_4326","EPSG_3857","pointToLonLat","projection","toLonLat","pointFromLonLat","fromLonLat","transformPoint","sourceProjection","destProjection","transform","coord","baseTransform","some","isNaN","lineToLonLat","lineFromLonLat","transformLine","polygonToLonLat","polygonFromLonLat","transformPolygon","multiPointToLonLat","multiPointFromLonLat","transformMultiPoint","multiLineToLonLat","multiLineFromLonLat","transformMultiLine","multiPolygonToLonLat","multiPolygonFromLonLat","transformMultiPolygon","transforms","transformExtent","isFinite","ext","baseTransformExtent","extentFromLonLat","extentToLonLat","transformDistance","distance","isStyle","style","Style","ImageStyle","Fill","Stroke","Text","Function","getStyleId","setStyleId","styleId","initializeStyle","defaultStyleId","defaultStyle","fillColor","strokeColor","strokeWidth","imageRadius","defaultEditStyle","styles","white","blue","width","zIndex","Infinity","isEmpty","Object","keys","createStyle","vlStyle","geomReader","identity","olStyle","text","createTextStyle","fill","createFillStyle","stroke","createStrokeStyle","image","createImageStyle","createGeomStyle","renderer","normalizeColor","color","c","parseColor","rgba","prefix","prefixKey","addPrefix","key","fillStyle","name","strokeStyle","isNumeric","imageStyle","Ctor","Icon","anchor","anchorOrigin","anchorXUnits","anchorYUnits","offset","offsetOrigin","size","img","imgSize","src","crossOrigin","RegularShape","radius1","radius2","angle","opacity","scale","rotation","rotateWithView","displacement","textStyle","textAlign","textBaseline","font","offsetX","offsetY","padding","maxAngle","overflow","placement","backgroundFill","backgroundStroke","isFunction","__styleGeomFunc","feature","dumpStyle","geomWriter","dumpFillStyle","getFill","dumpStrokeStyle","getStroke","dumpImageStyle","getImage","dumpTextStyle","getText","dumpGeomStyle","getGeometry","getZIndex","getColor","getWidth","getMiterLimit","getLineCap","getLineJoin","getLineDash","getLineDashOffset","common","getOpacity","getScale","getRotation","getRotateWithView","getDisplacement","anchor_","slice","anchorOrigin_","anchorXUnits_","anchorYUnits_","offset_","offsetOrigin_","getSize","getSrc","crossOrigin_","getRadius","getPoints","getRadius2","getAngle","filter","getTextAlign","getTextBaseline","getFont","getOffsetX","getOffsetY","getPadding","getMaxAngle","getOverflow","getPlacement","getBackgroundFill","getBackgroundStroke","createGeoJsonFmt","options","GeoJSON","createMvtFmt","MVT","CIRCLE_SERIALIZE_PROP","STYLE_SERIALIZE_PROP","BaseGeoJSON","constructor","defaultDecimals","decimals","undefined","defaultStyleReader","styleReader","noop","defaultStyleWriter","styleWriter","adaptOptions","writeGeometryObject","end","getLength","featureProjection","writeFeatureObject","object","properties","getId","dataProjection","getProperties","getGeometryName","clonePlainObject","omit","features","Feature","getStyle","readFeatureFromObject","geoJSONFeature","circle","readGeometryFromObject","geometryName_","setGeometryName","extractGeometryName_","geometry_name","setGeometry","setId","setStyle","isGeoJSONFeature","setProperties","getGeoJsonFmt","writeGeoJsonFeature","readGeoJsonFeature","geoJsonFeature","readFeature","writeGeoJsonGeometry","geometryProjection","readGeoJsonGeometry","geoJsonGeometry","readProjection","readGeometry","geoJsonObj","defaultProjection","isGeoJSONGeometry","values","getFeatureId","setFeatureId","featureId","initializeFeature","defaultFeatureId","getFeatureGeomName","getFeatureGeom","getFeatureProperties","setFeatureProperties","getInteractionId","interaction","Interaction","setInteractionId","interactionId","getInteractionPriority","setInteractionPriority","priority","initializeInteraction","defaultInteractionId","defaultPriority","getLayerId","layer","BaseLayer","setLayerId","layerId","initializeLayer","defaultLayerId","getMapId","PluggableMap","setMapId","mapId","getMapDataProjection","setMapDataProjection","getOverlayId","overlay","Overlay","setOverlayId","overlayId","initializeOverlay","defaultOverlay","getSourceId","source","Source","setSourceId","sourceId","initializeSource","defaultSourceId","cleanSourceParams","params","filterKeys","toUpperCase","extentFromProjection","getProjection","getExtent","half","METERS_PER_UNIT","Units","DEGREES","getMetersPerUnit","getViewId","view","View","setViewId","viewId","initializeView","defaultViewId","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","replace","String","fromCharCode","stop1","parseInt","i","toString"],"mappings":"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"}